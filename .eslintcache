[{"/home/miizoo/Desktop/ReactJS/livefood/src/index.js":"1","/home/miizoo/Desktop/ReactJS/livefood/src/App.js":"2","/home/miizoo/Desktop/ReactJS/livefood/src/firebase.js":"3","/home/miizoo/Desktop/ReactJS/livefood/src/CustomHook/FirebaseAuth.js":"4","/home/miizoo/Desktop/ReactJS/livefood/src/routes.js":"5","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Chat.js":"6","/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/Popup.js":"7","/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/Stepper.js":"8","/home/miizoo/Desktop/ReactJS/livefood/src/components/GlobalStyle/index.js":"9","/home/miizoo/Desktop/ReactJS/livefood/src/serviceWorker.js":"10","/home/miizoo/Desktop/ReactJS/livefood/src/app/store.js":"11","/home/miizoo/Desktop/ReactJS/livefood/src/features/userSlice.js":"12","/home/miizoo/Desktop/ReactJS/livefood/src/icons/Facebook.js":"13","/home/miizoo/Desktop/ReactJS/livefood/src/icons/Google.js":"14","/home/miizoo/Desktop/ReactJS/livefood/src/components/Page.js":"15","/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/index.js":"16","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Item/index.js":"17","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Search/index.js":"18","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Logo/index.js":"19","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/index.js":"20","/home/miizoo/Desktop/ReactJS/livefood/src/components/MediaViewer/index.js":"21","/home/miizoo/Desktop/ReactJS/livefood/src/views/MessengerPage.js":"22","/home/miizoo/Desktop/ReactJS/livefood/src/views/HomePage.js":"23","/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/index.js":"24","/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/Comment.js":"25","/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExploreItem.js":"26","/home/miizoo/Desktop/ReactJS/livefood/src/views/NotFoundPage.js":"27","/home/miizoo/Desktop/ReactJS/livefood/src/views/auth/SignUpPage.js":"28","/home/miizoo/Desktop/ReactJS/livefood/src/views/auth/SignInPage.js":"29","/home/miizoo/Desktop/ReactJS/livefood/src/views/account/UserProfilePage.js":"30","/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/LeftSideBar/index.js":"31","/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/LeftSideBar/NavItem.js":"32","/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/RightSideBar/index.js":"33","/home/miizoo/Desktop/ReactJS/livefood/src/layouts/MainLayout.js":"34","/home/miizoo/Desktop/ReactJS/livefood/src/layouts/DefaultLayout.js":"35","/home/miizoo/Desktop/ReactJS/livefood/src/views/account/EditAccountPage.js":"36","/home/miizoo/Desktop/ReactJS/livefood/src/utils/getRecipientUser.js":"37","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/ProfileHeader.js":"38","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/AccountNavBar.js":"39","/home/miizoo/Desktop/ReactJS/livefood/src/theme/index.js":"40","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditAccount.js":"41","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditPassword.js":"42","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/ProfileNavBar.js":"43","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileFeed.js":"44","/home/miizoo/Desktop/ReactJS/livefood/src/features/chatSlice.js":"45","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Sidebar/SidebarChat.js":"46","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Sidebar/CreateNewChat.js":"47","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Message.js":"48","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/ChatInput.js":"49","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/index.js":"50","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Post.js":"51","/home/miizoo/Desktop/ReactJS/livefood/src/views/SinglePage.js":"52","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileVids.js":"53","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileSaved.js":"54","/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExplorePage.js":"55","/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExplorePeoplePage.js":"56","/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExplorePeopleItem.js":"57","/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExploreVideoPage.js":"58","/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExploreVideoItem.js":"59","/home/miizoo/Desktop/ReactJS/livefood/src/utils/handleLikePost.js":"60","/home/miizoo/Desktop/ReactJS/livefood/src/utils/handleDislikePost.js":"61","/home/miizoo/Desktop/ReactJS/livefood/src/utils/handleSavePost.js":"62","/home/miizoo/Desktop/ReactJS/livefood/src/utils/handleUnsavedPost.js":"63"},{"size":674,"mtime":1616998952304,"results":"64","hashOfConfig":"65"},{"size":1727,"mtime":1618852188725,"results":"66","hashOfConfig":"65"},{"size":1157,"mtime":1618332345707,"results":"67","hashOfConfig":"65"},{"size":1471,"mtime":1616779499949,"results":"68","hashOfConfig":"65"},{"size":2776,"mtime":1618856197775,"results":"69","hashOfConfig":"65"},{"size":4889,"mtime":1618410411175,"results":"70","hashOfConfig":"65"},{"size":9653,"mtime":1618386129445,"results":"71","hashOfConfig":"65"},{"size":21806,"mtime":1618560253976,"results":"72","hashOfConfig":"65"},{"size":797,"mtime":1616998797535,"results":"73","hashOfConfig":"65"},{"size":5796,"mtime":1615795454946,"results":"74","hashOfConfig":"65"},{"size":262,"mtime":1617122372343,"results":"75","hashOfConfig":"65"},{"size":468,"mtime":1617121688821,"results":"76","hashOfConfig":"65"},{"size":838,"mtime":1615966721264,"results":"77","hashOfConfig":"65"},{"size":1584,"mtime":1615966706650,"results":"78","hashOfConfig":"65"},{"size":625,"mtime":1615968337340,"results":"79","hashOfConfig":"65"},{"size":5148,"mtime":1618940370054,"results":"80","hashOfConfig":"65"},{"size":7356,"mtime":1618937977523,"results":"81","hashOfConfig":"65"},{"size":2149,"mtime":1616161482479,"results":"82","hashOfConfig":"65"},{"size":741,"mtime":1616172292428,"results":"83","hashOfConfig":"65"},{"size":1077,"mtime":1616914818330,"results":"84","hashOfConfig":"65"},{"size":19385,"mtime":1618938046350,"results":"85","hashOfConfig":"65"},{"size":3381,"mtime":1618382775813,"results":"86","hashOfConfig":"65"},{"size":755,"mtime":1618914054026,"results":"87","hashOfConfig":"65"},{"size":1035,"mtime":1618802528050,"results":"88","hashOfConfig":"65"},{"size":1220,"mtime":1618802528042,"results":"89","hashOfConfig":"65"},{"size":2405,"mtime":1618889266416,"results":"90","hashOfConfig":"65"},{"size":1488,"mtime":1616779633942,"results":"91","hashOfConfig":"65"},{"size":6665,"mtime":1618801840724,"results":"92","hashOfConfig":"65"},{"size":6890,"mtime":1618743289799,"results":"93","hashOfConfig":"65"},{"size":2023,"mtime":1618816433728,"results":"94","hashOfConfig":"65"},{"size":4229,"mtime":1618996657460,"results":"95","hashOfConfig":"65"},{"size":2216,"mtime":1618996657452,"results":"96","hashOfConfig":"65"},{"size":6548,"mtime":1618996806893,"results":"97","hashOfConfig":"65"},{"size":363,"mtime":1617033113940,"results":"98","hashOfConfig":"65"},{"size":1076,"mtime":1615825508670,"results":"99","hashOfConfig":"65"},{"size":1414,"mtime":1618556224285,"results":"100","hashOfConfig":"65"},{"size":155,"mtime":1617010171560,"results":"101","hashOfConfig":"65"},{"size":8749,"mtime":1618816268171,"results":"102","hashOfConfig":"65"},{"size":2916,"mtime":1618476620601,"results":"103","hashOfConfig":"65"},{"size":610,"mtime":1615795136367,"results":"104","hashOfConfig":"65"},{"size":16637,"mtime":1618556915894,"results":"105","hashOfConfig":"65"},{"size":5817,"mtime":1617071201032,"results":"106","hashOfConfig":"65"},{"size":3563,"mtime":1618747362536,"results":"107","hashOfConfig":"65"},{"size":2679,"mtime":1618756740674,"results":"108","hashOfConfig":"65"},{"size":821,"mtime":1617387901510,"results":"109","hashOfConfig":"65"},{"size":4563,"mtime":1618336215879,"results":"110","hashOfConfig":"65"},{"size":5580,"mtime":1618333725425,"results":"111","hashOfConfig":"65"},{"size":1834,"mtime":1617643787416,"results":"112","hashOfConfig":"65"},{"size":5089,"mtime":1617766295107,"results":"113","hashOfConfig":"65"},{"size":3933,"mtime":1618996426110,"results":"114","hashOfConfig":"65"},{"size":15183,"mtime":1619002559139,"results":"115","hashOfConfig":"65"},{"size":3057,"mtime":1618799697580,"results":"116","hashOfConfig":"65"},{"size":2836,"mtime":1618901116375,"results":"117","hashOfConfig":"65"},{"size":3302,"mtime":1618990400855,"results":"118","hashOfConfig":"65"},{"size":2844,"mtime":1618896794447,"results":"119","hashOfConfig":"65"},{"size":793,"mtime":1618914022804,"results":"120","hashOfConfig":"65"},{"size":6637,"mtime":1618887151792,"results":"121","hashOfConfig":"65"},{"size":2966,"mtime":1618901906464,"results":"122","hashOfConfig":"65"},{"size":1842,"mtime":1618762647859,"results":"123","hashOfConfig":"65"},{"size":202,"mtime":1618831777295,"results":"124","hashOfConfig":"65"},{"size":209,"mtime":1618831806632,"results":"125","hashOfConfig":"65"},{"size":330,"mtime":1618940870497,"results":"126","hashOfConfig":"65"},{"size":338,"mtime":1618940870489,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"nv6ebl",{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"130"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"130"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"130"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"130"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"130"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"130"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"130"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"130"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"130"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"130"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"130"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"130"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"130"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"/home/miizoo/Desktop/ReactJS/livefood/src/index.js",[],["268","269"],"/home/miizoo/Desktop/ReactJS/livefood/src/App.js",["270"],"import './App.css';\nimport React, {useEffect, useState} from \"react\";\nimport { useRoutes } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\n// import {auth, db} from \"./firebase\";\nimport GlobalStyles from \"./components/GlobalStyle\";\nimport Spinner from 'react-spinkit'\n\n\nimport theme from './theme';\nimport routes from \"./routes\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {auth, db} from \"./firebase\";\n\n// import styled from 'styled-components';\n\nimport firebase from \"firebase\";\nimport {useDispatch} from \"react-redux\";\nimport {login, logout} from \"./features/userSlice\";\n\nfunction App() {\n\tconst [userLogged, loading] = useAuthState(auth);\n\tconst routing = useRoutes(routes(userLogged));\n\t// const u = useSelector(selectUser);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tif(auth.onAuthStateChanged(author => {\n\t\t\tif(author){\n\t\t\t\tdispatch(\n\t\t\t\t\tlogin({\n\t\t\t\t\t\tuid: author.uid,\n\t\t\t\t\t\tphotoURL: author.photoURL,\n\t\t\t\t\t\temail: author.email,\n\t\t\t\t\t\tdisplayName: author.displayName\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t}else{\n\t\t\t\tdispatch(logout())\n\t\t\t}\n\t\t}))\n\n\t\tif(userLogged) {\n\t\t\tdb.collection(\"users\").doc(userLogged.uid).set({\n\t\t\t\tlastActive: firebase.firestore.FieldValue.serverTimestamp()\n\t\t\t},{\n\t\t\t\tmerge: true\n\t\t\t})\n\t\t}\n\n\t}, [dispatch, userLogged])\n\n\n\n\tif(loading){\n\t\treturn(\n\t\t\t<AppLoading />\n\t\t)\n\t}\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<GlobalStyles />\n\t\t\t{routing}\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n\nconst AppLoading = () => {\n\treturn (\n\t\t<div className=\"app__loading\">\n\t\t\t<img className=\"loading__logo\" alt=\"LiveFood\"\n\t\t\t\t src=\"/static/images/brand.png\"\n\t\t\t/>\n\t\t\t<Spinner\n\t\t\t\tname=\"ball-spin-fade-loader\"\n\t\t\t\tcolor=\"red\"\n\t\t\t\tfadeIn=\"none\"\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\n\n","/home/miizoo/Desktop/ReactJS/livefood/src/firebase.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/CustomHook/FirebaseAuth.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/routes.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Chat.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/Popup.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/Stepper.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/GlobalStyle/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/serviceWorker.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/app/store.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/features/userSlice.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/icons/Facebook.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/icons/Google.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Page.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Item/index.js",["271"],"import React, {useEffect, useState} from \"react\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {Badge, MenuItem, MenuList, Popover, Popper} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Link} from \"react-router-dom\";\nimport ExploreTwoToneIcon from '@material-ui/icons/ExploreTwoTone';\nimport NotificationsActiveTwoToneIcon from '@material-ui/icons/NotificationsActiveTwoTone';\nimport { makeStyles} from \"@material-ui/core/styles\";\nimport EmailTwoToneIcon from '@material-ui/icons/EmailTwoTone';\n// import {useAuthState} from \"react-firebase-hooks/auth\";\nimport {auth, db} from \"../../../firebase\";\nimport HomeTwoToneIcon from '@material-ui/icons/HomeTwoTone';\nimport Divider from \"@material-ui/core/Divider\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {\n    User as UserIcon,\n    Bookmark as BookmarkIcon,\n    Settings as SettingIcon,\n    LogOut as LogoutIcon\n\n} from 'react-feather';\n\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        height: \"28px\",\n        width: \"28px\",\n        color: \"#00000099\"\n    },\n    active: {\n        color: \"#3f51b5\",\n    },\n    popupNoti: {\n        minHeight: 300,\n        zIndex: 99999\n    },\n    userPopover: {\n        width: \"400px\"\n    },\n    iconBtn: {\n        marginRight: theme.spacing(1),\n        color: \"#050505\",\n    },\n    iconBtnCircle: {\n        marginRight: theme.spacing(1),\n        color: \"#050505\",\n        border: \"1px solid\",\n        borderRadius: \"50%\",\n    }\n}));\n\n\nfunction MenuHeader() {\n    const [mess, setMess] = useState(0);\n\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    const [anchorElNotice, setAnchorElNotice] = useState(null);\n    const openNotice = Boolean(anchorElNotice);\n    const idNotice = open ? 'simple-popper' : undefined;\n\n    const [user] = useAuthState(auth);\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleNotice = (event) => {\n        setAnchorElNotice(anchorElNotice ? null : event.currentTarget);\n    }\n    const handleCloseNotice = () => {\n        setAnchorElNotice(null);\n    };\n\n\n    useEffect(() => {\n        var query = db.collection(\"conversations\");\n        user && query\n            .where('users', 'array-contains', user.email)\n            .where('isSeen', '==', false)\n            .where('lastSend', '!=', user.email)\n            .onSnapshot((snapshot) => {\n                setMess(snapshot.size);\n            });\n    }, [user])\n\n\n    return(\n        <div className=\"menuHeader\">\n            <div className=\"menuIcon\">\n                <Link to=\"/\">\n                    <IconButton color=\"inherit\">\n                        <Badge color=\"secondary\">\n                            <HomeTwoToneIcon className={classes.icon} />\n                        </Badge>\n                    </IconButton>\n                </Link>\n\n                <Link to=\"/explore\">\n                    <IconButton color=\"inherit\" >\n                        <Badge color=\"secondary\">\n                            <ExploreTwoToneIcon className={classes.icon} />\n                        </Badge>\n                    </IconButton>\n                </Link>\n\n                <Link to={{\n                    pathname: `/messages`,\n                    state: { users: user }\n                }}>\n                    <IconButton aria-label=\"4 new messages\" color=\"inherit\" >\n                        <Badge badgeContent={mess} max={20} color=\"secondary\">\n                            <EmailTwoToneIcon className={classes.icon}/>\n                        </Badge>\n                    </IconButton>\n                </Link>\n\n                <IconButton aria-label=\"11 new notifications\" color=\"inherit\" onClick={handleNotice}>\n                    <Badge badgeContent={24} max={20} color=\"secondary\">\n                        <NotificationsActiveTwoToneIcon className={classes.icon}/>\n                    </Badge>\n                </IconButton>\n\n                <Popover\n                    disableScrollLock\n                    id={idNotice}\n                    open={openNotice}\n                    anchorEl={anchorElNotice}\n                    onClose={handleCloseNotice}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                >\n                </Popover>\n\n                <IconButton onClick={handleClick}>\n                    <Avatar alt={user?.displayName} src={user?.photoURL} />\n                </IconButton>\n                <Popover\n                    className={classes.userPopover}\n                    disableScrollLock\n                    id={id}\n                    open={open}\n                    anchorEl={anchorEl}\n                    onClose={handleClose}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                >\n                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" style={{padding: \"0\", minWidth: 130}} >\n                        <Link to={{pathname:`/profile/${user?.uid}`}} >\n                            <MenuItem onClick={handleClose}>\n                                <UserIcon\n                                    className={classes.iconBtnCircle}\n                                    size=\"15\"\n                                />\n                                Profile\n                            </MenuItem>\n                        </Link>\n                        <Link to={{pathname:`/profile/saved/${user?.uid}`}} >\n                            <MenuItem onClick={handleClose}>\n                                <BookmarkIcon\n                                    className={classes.iconBtn}\n                                    size=\"15\"\n                                />\n                                Save\n                            </MenuItem>\n                        </Link>\n                        <Link to={{pathname:`/account/edit`}} >\n                            <MenuItem onClick={handleClose}>\n                                <SettingIcon\n                                    className={classes.iconBtn}\n                                    size=\"15\"\n                                />\n                                Setting\n                            </MenuItem>\n                        </Link>\n                        <Divider />\n                        <MenuItem onClick={() => auth.signOut()}>\n                            <LogoutIcon\n                                className={classes.iconBtn}\n                                size=\"15\"\n                            />\n                            Logout\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n\n        </div>\n    )\n}\n\nexport default MenuHeader\n\n","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Search/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Logo/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/MediaViewer/index.js",["272","273","274"],"import React, {useEffect, useState} from \"react\";\nimport {Button, CardContent, Collapse, IconButton, Modal, TextField} from \"@material-ui/core\";\nimport CancelTwoToneIcon from \"@material-ui/icons/CancelTwoTone\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n// import {db} from \"../../firebase\";\n// import ListComment from \"../Posts/Comments\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {Link} from \"react-router-dom\";\n// import dayjs from \"dayjs\";\n// import Card from \"@material-ui/core/Card\";\nimport Divider from '@material-ui/core/Divider';\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport {ToggleButton} from \"@material-ui/lab\";\nimport FavoriteRoundedIcon from \"@material-ui/icons/FavoriteRounded\";\nimport FavoriteBorderTwoToneIcon from \"@material-ui/icons/FavoriteBorderTwoTone\";\nimport ModeCommentOutlinedIcon from \"@material-ui/icons/ModeCommentOutlined\";\nimport BookmarkBorderOutlinedIcon from \"@material-ui/icons/BookmarkBorderOutlined\";\n// import clsx from \"clsx\";\n// import ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport clsx from \"clsx\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\n\nimport {auth, db} from \"../../firebase\";\nimport firebase from \"firebase\";\nimport ListComment from \"../Comments\";\nimport handleLikePost from \"../../utils/handleLikePost\";\nimport handleDislikePost from \"../../utils/handleDislikePost\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport BookmarkRoundedIcon from \"@material-ui/icons/BookmarkRounded\";\nimport handleSavePost from \"../../utils/handleSavePost\";\nimport handleUnsavedPost from \"../../utils/handleUnsavedPost\";\n\n\n\nfunction getModalStyle() {\n    const top = 50 ;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        fontSize: \"0.875rem\"\n    },\n    label: {\n        paddingLeft: \"10px\"\n    },\n    paper: {\n        position: 'absolute',\n        maxWidth: 950,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        \"&:focus\": {\n            outline: \"none\"\n        },\n        maxHeight: \"600px\",\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        overflow: \"hidden\"\n    },\n    modalHeader: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    buttonClose: {\n        position: \"fixed\",\n        right: \"0\",\n        top: \"0\"\n    },\n    imgHolder: {\n        width: \"600px\",\n        paddingBottom: \"100%\",\n        position: \"relative\",\n        overflow : \"hidden\",\n    },\n    img: {\n        objectFit: \"contain\",\n        height: \"100%\",\n        left: \"0\",\n        position: \"absolute\",\n        top: \"0\",\n        width: \"100%\",\n    },\n    leftPanel: {\n        height: \"100%\",\n        maxWidth: \"600px\"\n    },\n    rightPanel: {\n        width: \"335px\",\n        height: \"100%\",\n        overflowY: \"scroll\",\n        position: \"relative\"\n    },\n    captionText: {\n        whiteSpace: \"pre-line\",\n        lineHeight: \"26px\",\n\n    },\n    modalBody: {\n        height: \"auto\"\n    },\n    displayLike: {\n        padding: \"0 0 20px 20px\",\n    },\n    likeButton: {\n        border: \"0\",\n        backgroundColor: \"none\",\n        borderRadius: \"50%\",\n        '&:hover': {\n            color: 'red',\n        }\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    paragraph: {\n        lineHeight: \"26px\",\n        textAlign: \"justify\",\n        whiteSpace: \"pre-line\",\n        fontSize: \"0.875rem\"\n    },\n    paragraphHead: {\n        fontWeight: \"600\",\n        fontSize: \"0.875rem\",\n        marginBottom: \"10px\",\n        padding: \"5px 0\",\n        textTransform: \"uppercase\",\n        borderBottom : \"1px solid #000\"\n    },\n    selected: {\n        backgroundColor: \"unset !important\"\n    },\n    commentContainer: {\n        marginTop: \"auto\",\n        padding: \"10px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n    },\n    cmtButton: {\n\n    },\n    cmtButtonLabel: {\n        fontWeight: \"bold\",\n        textTransform: \"capitalize\",\n        fontSize: \"14px\"\n    },\n    direction: {\n        minHeight: \"auto\"\n    }\n}));\n\nfunction MediaViewer(props){\n\n    const classes = useStyles();\n    const [modalStyle] = useState(getModalStyle);\n    const [selected, setSelected] = useState(false);\n    const [expanded, setExpanded] = useState(true);\n    const [user] = useAuthState(auth);\n    const postRef = db.collection('posts').doc(props.id);\n    const authUserRef = user && db.collection(\"users\").doc(user.uid);\n\n    const [postSnapshot] = useDocument(postRef);\n    const [saveSelected, setSaveSelected] = useState(false);\n\n    const [comments, setComments] = useState([]);\n    const [comment, setComment] = useState('');\n\n    let likeCount = 0\n    if(typeof postSnapshot?.data()?.likeBy !== 'undefined'){\n        likeCount = postSnapshot.data().likeBy.length;\n    }\n\n\n    dayjs.extend(relativeTime);\n    let postCreated  = null;\n\n    if(props?.post?.timestamp){\n        postCreated = new Date(props?.post?.timestamp.seconds * 1000).toLocaleString();\n    }\n\n    const postComment = (event) => {\n        event.preventDefault();\n        if(comment){\n            db.collection(\"posts\").doc(props.id).collection(\"comments\").add({\n                text: comment,\n                user: db.doc('users/' + user.uid),\n                uid: user.uid,\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            });\n        }\n        setComment('');\n    }\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    // Handle like and dislike action\n    const likePost = () => {\n        setSelected(true);\n        handleLikePost(postRef, user.uid);\n    }\n\n    // Handle dislike post\n    const dislikePost = () => {\n        setSelected(false);\n        handleDislikePost(postRef, user.uid)\n    }\n\n\n    const savePost = () => {\n        // Save post id to user data, and push to post data\n        setSaveSelected(true);\n        handleSavePost(postRef, authUserRef, user.uid, props.id);\n    }\n\n    const unsavedPost = () => {\n        // Save post id to user data, and push to post data\n        setSaveSelected(false);\n        handleUnsavedPost(postRef, authUserRef, user.uid, props.id);\n    }\n\n\n\n    let media;\n\n    if(props.post.mediaType === \"video/mp4\"){\n        media = <div className={classes.imgHolder}>\n            <video controls className={classes.img} muted=\"muted\" onClick={e => e.target.play()}>\n                <source src={props.post.mediaUrl} type=\"video/mp4\"/>\n            </video>\n        </div>\n    } else{\n        media = <div className={classes.imgHolder}>\n            <img src={props.post.mediaUrl} alt=\"\" className={classes.img}/>\n        </div>\n    }\n\n\n\n\n    useEffect(() => {\n        if(props.id && user) {\n\n            if(typeof props.post.likeBy !== 'undefined' && props.post.likeBy.includes(user.uid)){\n                setSelected(true);\n            }\n\n            if(typeof props.post.saveBy !== 'undefined' && props.post.saveBy.includes(user.uid)){\n                setSaveSelected(true);\n            }\n        }\n\n        // get comments\n        return postRef\n            .collection(\"comments\")\n            .orderBy('timestamp', \"desc\")\n            .limit(5)\n            .onSnapshot((snapshot ) => {\n                // var userProfile = {};\n                setComments(\n                    snapshot.docs.map((doc => ({\n                        id: doc.id,\n                        comment: doc.data(),\n                        cmtAuthor: doc.data().user.get().then( cmtAuthor => {\n                            return cmtAuthor.data();\n                            // return Object.assign(userProfile, author.data());\n                        })\n                    })))\n                );\n            })\n\n    }, [props.id])\n\n    return (\n        <Modal\n            className={classes.root}\n            open={props.open}\n            onClose={props.handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n        >\n            <div style={modalStyle} className={classes.paper}>\n                <div className={classes.leftPanel}>\n                    {media}\n                </div>\n                <Divider orientation=\"vertical\" flexItem />\n                <div className={classes.rightPanel}>\n                    <div className=\"review__data\">\n                        <div className={classes.modalHeader}>\n                            <CardHeader\n                                avatar={\n                                    <Avatar alt={props.postAuthor?.displayName} src={props.postAuthor.photoURL}/>\n                                }\n                                title={\n                                    <Link to={`/profile/${props.postAuthor?.uid}`}>{props.postAuthor?.displayName}</Link>\n                                }\n                                subheader={dayjs(postCreated).fromNow()}\n                            />\n                            <div className={classes.buttonClose}>\n                                <IconButton aria-label=\"Cancel\" color=\"inherit\" onClick={props.handleClose} >\n                                    <CancelTwoToneIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <Divider />\n                        <div className={classes.modalBody}>\n                            <div className=\"post__caption\">\n                                <Link to={`/profile/${props.postAuthor?.uid}`} className=\"post__user\">{props.postAuthor?.displayName}</Link>\n                                <span className={classes.captionText}>{props.post.caption}</span>\n                            </div>\n                        </div>\n                        <Divider />\n                        {/* Card action */}\n                        <CardActions disableSpacing>\n                            {\n                                user ? (\n                                    <div className=\"post__button\">\n                                        <div className=\"action__like\">\n                                            <ToggleButton\n                                                value=\"check\"\n                                                selected={selected}\n                                                classes={{\n                                                    root: classes.likeButton,\n                                                    selected: classes.selected,\n                                                }}\n                                                onClick={() => {\n                                                    if(!selected) likePost();\n                                                    else dislikePost();\n                                                }}\n                                            >\n                                                {\n                                                    selected ? <FavoriteRoundedIcon style={{color: \"red\"}}/> : <FavoriteBorderTwoToneIcon />\n                                                }\n                                            </ToggleButton>\n\n                                        </div>\n                                        <div className=\"action__comment\">\n                                            <IconButton aria-label=\"comment\">\n                                                <ModeCommentOutlinedIcon/>\n                                            </IconButton>\n                                        </div>\n                                        <div className=\"action__share\">\n                                            <ToggleButton\n                                                value=\"check\"\n                                                selected={saveSelected}\n                                                // className={classes.likeButton}\n                                                classes={{\n                                                    root: classes.likeButton,\n                                                    selected: classes.selected,\n                                                }}\n                                                onClick={() => {\n                                                    if(!saveSelected) savePost();\n                                                    else unsavedPost();\n                                                }}\n                                            >\n                                                {\n                                                    saveSelected ? <BookmarkRoundedIcon style={{color: \"black\"}}/> : <BookmarkBorderOutlinedIcon />\n                                                }\n                                            </ToggleButton>\n                                        </div>\n                                    </div>\n                                ) : null\n\n                            }\n\n                            {\n                                props?.post?.data ? (\n                                    <div className=\"action__expand\">\n                                        <IconButton\n                                            className={clsx(classes.expand, {\n                                                [classes.expandOpen]: expanded,\n                                            })}\n                                            onClick={handleExpandClick}\n                                            aria-expanded={expanded}\n                                            aria-label=\"show more\"\n                                        >\n                                            <ExpandMoreIcon />\n                                        </IconButton>\n                                    </div>\n                                ) : null\n                            }\n\n\n                        </CardActions>\n\n                        {/* Like count */}\n                        {\n                            likeCount > 0 ? (\n                                <div className={classes.displayLike}>\n                                    <span><b>{likeCount.toLocaleString()} Likes</b></span>\n\n                                </div>\n                            ) : null\n                        }\n                        <Divider />\n\n                        {/*Posts*/}\n                        {\n                            props?.post?.data ? (\n                                <Collapse in={expanded} timeout=\"auto\" unmountOnExit style={{minHeight: \"auto\"}}>\n                                    <>\n                                        <CardContent className=\"recipe_layout__content-left\">\n                                            <div className=\"recipe_layout__facts\">\n                                                <div className=\"recipe-facts__info\">\n                                                    <div className=\"recipe-facts__details recipe-facts__prepare\"><span\n                                                        className=\"recipe-facts__title\">Prepare in:</span> <span>{props?.post?.data?.prepTime} {props?.post?.data?.prepUnit}</span></div>\n                                                    <div className=\"recipe-facts__details recipe-facts__cooking\"><span\n                                                        className=\"recipe-facts__title\">Cook in:</span> <a\n                                                        className=\"theme-color\">{props?.post?.data?.cookTime} {props?.post?.data?.cookUnit}</a></div>\n                                                </div>\n                                                <div className=\"recipe-facts__info\">\n                                                    <div className=\"recipe-facts__details recipe-facts__servings\"><span\n                                                        className=\"recipe-facts__title\">Serves:</span> <a\n                                                        className=\"theme-color\">{props?.post?.data?.serve}</a></div>\n                                                </div>\n                                            </div>\n                                            <Typography paragraph className={classes.paragraphHead}>Ingredients:</Typography>\n                                            <Typography paragraph className={classes.paragraph}>{props?.post?.data?.ingredient}</Typography>\n                                        </CardContent>\n                                        <CardContent className=\"recipe_layout__content-right\">\n                                            <Typography paragraph className={classes.paragraphHead}>Direction:</Typography>\n                                            <Typography paragraph className={classes.paragraph}>{props?.post?.data?.direction}</Typography>\n                                        </CardContent>\n                                    </>\n                                    <Divider />\n                                </Collapse>\n                            ) : null\n                        }\n\n                        {/*<ListComment comments={comments} />*/}\n                        <ListComment comments={comments} />\n\n                        <div className=\"commentContainer commentViewer \">\n                            <Divider />\n                            {\n                                user &&  (\n                                    <form onSubmit={postComment} >\n                                        <TextField\n                                            className=\"comment__input\"\n                                            placeholder=\"Leave a comment ... \"\n                                            value={comment}\n                                            onChange={event => setComment(event.target.value)}\n                                            InputProps={{ disableUnderline: true}}\n                                        />\n                                        <Button\n                                            variant=\"contained\"\n                                            disabled={!comment}\n                                            onClick={postComment}\n                                            classes={{\n                                                root: classes.cmtButton,\n                                                label: classes.cmtButtonLabel\n                                            }}\n                                        >\n                                            Post\n                                        </Button>\n                                    </form>\n                                )\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Modal>\n    )\n}\nexport default MediaViewer","/home/miizoo/Desktop/ReactJS/livefood/src/views/MessengerPage.js",["275"],"import React, {useEffect, useState} from \"react\";\n\nimport \"../components/Messenger/Messenger.css\";\nimport SidebarChat from \"../components/Messenger/Sidebar/SidebarChat\";\nimport Chat from \"../components/Messenger/Chat\";\nimport Page from \"../components/Page\";\nimport {useParams} from \"react-router\";\n\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ControlPointOutlinedIcon from \"@material-ui/icons/ControlPointOutlined\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport CreateNewChat from \"../components/Messenger/Sidebar/CreateNewChat\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {auth, db} from \"../firebase\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {List} from \"@material-ui/core\";\nimport {useDispatch} from \"react-redux\";\nimport {removeChat} from \"../features/chatSlice\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    header:{\n        paddingLeft: \"5px\"\n    },\n    root: {\n        backgroundColor: theme.palette.background.default,\n        display: 'flex',\n        height: '100%',\n        overflow: 'hidden',\n        width: '100%'\n    },\n    list: {\n        padding: 0\n    }\n}));\n\nfunction PageMessenger() {\n    const dispatch = useDispatch();\n\n\n    let { id } = useParams();\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [user] = useAuthState(auth);\n    const userChatRef = db.collection(\"conversations\").where('users', 'array-contains', user.email).orderBy('lastUpdate', 'desc');\n    // const userChatRef = db.collection(\"conversations\").where('users', 'array-contains', user.email)\n\n    const [chatsSnapshot] = useCollection(userChatRef);\n\n\n    if(typeof id === 'undefined'){\n        dispatch(removeChat());\n    }\n\n    const handleOpen = () => {\n        setOpen(true);\n    }\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    return(\n        <Page\n            title=\"Messenger | LiveFood\"\n            className=\"app__bodyContainer\"\n        >\n            <div className=\"messenger\">\n                <section className=\"messenger__navigation\">\n                    <div className=\"navigation__header padding-10-20 messenger__header\" >\n                        <h2 className={classes.header}>Message</h2>\n                        <IconButton aria-label=\"comment\" onClick={handleOpen}>\n                            <ControlPointOutlinedIcon />\n                        </IconButton>\n                    </div>\n                    <div className=\"messenger__inbox\">\n                        <List className={classes.list}>\n                        {\n                            chatsSnapshot?.docs.map((chat) => (\n                                <SidebarChat\n                                    key={chat.id}\n                                    id={chat.id}\n                                    users={chat.data().users}\n                                    sender={chat.data().lastSend}\n                                    status={chat.data().isSeen}\n                                />\n                            ))\n                        }\n                        </List>\n                    </div>\n                </section>\n\n                <Chat id={id}/>\n            </div>\n\n\n            {/*  Create chat  */}\n            <CreateNewChat open={open} handleClose={handleClose} user={user}/>\n        </Page>\n    )\n}\n\nexport default PageMessenger","/home/miizoo/Desktop/ReactJS/livefood/src/views/HomePage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/index.js",["276"],"import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {red} from \"@material-ui/core/colors\";\nimport PostComment from \"./Comment\";\n\nconst useStyles = makeStyles((theme) => ({\n\n    displayCmt: {\n        padding: \"10px 20px\",\n        textAlign: \"right\",\n        color: \"#8e8e8e\"\n    }\n\n}));\n\n\nfunction Comment(props){\n    const classes = useStyles();\n    let count = 0;\n\n    props.comments.map((comment) => {\n        return count++\n    })\n\n    return(\n        <div className=\"listComments\">\n            {\n                count > 0 && (\n                    <h5 className={classes.displayCmt}>Displaying {count} comments</h5>\n                )\n            }\n            {\n                props.comments.slice(0, 5).map(({id, comment, cmtAuthor}) => (\n                    <PostComment\n                        key={id}\n                        comment={comment}\n                        cmtAuthor={cmtAuthor}\n                    />\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Comment","/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/Comment.js",["277","278"],"import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport dayjs from \"dayjs\";\nimport {Link} from \"react-router-dom\";\n\n\nfunction PostComment (props) {\n    const [commentAuthor, setCommentAuthor] = useState([]);\n\n    props.cmtAuthor.then((data) => {\n        setCommentAuthor(data);\n    })\n\n    return (\n        <div className=\"commentDetails\" key={props.comment.id}>\n            <Avatar alt={commentAuthor.displayName} src={commentAuthor.photoURL}/>\n            <div className=\"comment__content\">\n                <div className=\"comment__block\">\n                    <div className=\"comment__sub\">\n                        <Link to={`profile/${commentAuthor.uid}`}>{commentAuthor.displayName}</Link>\n                        {\n                            props.comment.timestamp ? (\n                                <span>{\n                                    dayjs(new Date(props.comment.timestamp.seconds * 1000).toLocaleString()).fromNow()}</span>\n                            ) : null\n                        }\n\n                        <p>{props.comment.text}</p>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n\n}\n\nexport default PostComment;","/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExploreItem.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/NotFoundPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/auth/SignUpPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/auth/SignInPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/account/UserProfilePage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/LeftSideBar/index.js",["279"],"/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/LeftSideBar/NavItem.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/RightSideBar/index.js",["280","281"],"/home/miizoo/Desktop/ReactJS/livefood/src/layouts/MainLayout.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/layouts/DefaultLayout.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/account/EditAccountPage.js",["282"],"import React from \"react\";\nimport Page from \"../../components/Page\";\n// import {useAuthState} from \"react-firebase-hooks/auth\";\n// import {auth, db} from \"../../firebase\";\n// import {useParams} from \"react-router\";\n// import { useCollection } from \"react-firebase-hooks/firestore\";\n\nimport AccountNavBar from \"../../components/Profile/AccountNavBar\";\nimport EditAccount from \"../../components/Profile/Edit/EditAccount\";\nimport EditPassword from \"../../components/Profile/Edit/EditPassword\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\n\n\nconst EditAccountPage = (props) => {\n    // const [currentUser] = useAuthState(auth);\n    // const [userData] = useCollection(db.collection('users').where('uid', '==', currentUser.uid))\n    // const user = userData?.docs?.[0].data();\n\n    function content(action){\n        switch (action){\n            case \"account_edit\":\n                return <EditAccount />\n            case \"account_password\":\n                return <EditPassword />\n            default:\n                return <></>\n        }\n    }\n\n    return(\n        <Page\n            title={`Edit Profile | LiveFood`}\n            className=\"app__bodyContainer\"\n        >\n            <div className=\"edit_account\">\n                <section className=\"edit_account__navigation\">\n                    <AccountNavBar />\n                </section>\n                {content(props.pagePath)}\n            </div>\n\n        </Page>\n    )\n}\n\nexport default EditAccountPage","/home/miizoo/Desktop/ReactJS/livefood/src/utils/getRecipientUser.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/ProfileHeader.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/AccountNavBar.js",["283","284"],"import React from \"react\";\nimport NavItem from \"../SideBar/LeftSideBar/NavItem\";\nimport {Button, List, ListItem} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {NavLink as RouterLink} from \"react-router-dom\";\nimport {Users as UsersIcon} from \"react-feather\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    list: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: \"0\"\n    },\n    item: {\n        display: 'flex',\n        paddingTop: 0,\n        paddingBottom: 0,\n    },\n    button: {\n        color: theme.palette.text.secondary,\n        fontWeight: theme.typography.fontWeightMedium,\n        justifyContent: 'flex-start',\n        letterSpacing: 0,\n        padding: '15px',\n        textTransform: 'none',\n        width: '100%',\n    },\n    icon: {\n        marginRight: theme.spacing(1),\n        color: \"#050505\"\n    },\n    title: {\n        fontWeight: \"500\",\n        fontSize: \"1.1rem\",\n        paddingLeft: \"15px\",\n        color: \"#050505\"\n    },\n    active: {\n        color: theme.palette.primary.main,\n        '& $title': {\n            fontWeight: 600,\n            color: theme.palette.primary.main,\n        },\n        '& $icon': {\n            color: theme.palette.primary.main,\n        }\n    }\n}));\n\n\nconst AccountNavBar = () => {\n    const classes = useStyles();\n\n    return (\n        <List className={classes.list}>\n            <ListItem\n                className={classes.item}\n                disableGutters\n            >\n                <Button\n                    activeClassName={classes.active}\n                    className={classes.button}\n                    component={RouterLink}\n                    to={`/account/edit`}\n                >\n                    <span className={classes.title}>Edit profile</span>\n                </Button>\n            </ListItem>\n\n            <ListItem\n                className={classes.item}\n                disableGutters\n            >\n                <Button\n                    activeClassName={classes.active}\n                    className={classes.button}\n                    component={RouterLink}\n                    to={`/account/password/change`}\n                >\n                    <span className={classes.title}>\n                    Change Password\n                </span>\n                </Button>\n            </ListItem>\n\n            <ListItem\n                className={classes.item}\n                disableGutters\n            >\n                <Button\n                    activeClassName={classes.active}\n                    className={classes.button}\n                    component={RouterLink}\n                    to={`/account/setting/notifications`}\n                >\n                    <span className={classes.title}>\n                    Notifications\n                </span>\n                </Button>\n            </ListItem>\n\n        </List>\n    )\n}\n\nexport default AccountNavBar","/home/miizoo/Desktop/ReactJS/livefood/src/theme/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditAccount.js",["285"],"import React, {useEffect, useRef, useState} from \"react\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {auth, db, storage} from \"../../../firebase\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport {Link} from \"react-router-dom\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport {CircularProgress, IconButton, Modal, TextField} from \"@material-ui/core\";\n// import {green} from \"@material-ui/core/colors\";\nimport CancelTwoToneIcon from \"@material-ui/icons/CancelTwoTone\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport firebase from \"firebase\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport {Alert} from \"@material-ui/lab\";\nimport {green} from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n\n    avatar: {\n        width: 100,\n        height: 100,\n        margin: \"0 20px\",\n    },\n    avatarHolder: {\n        padding: \"16px 32px\"\n    },\n    holder: {\n        display: \"flex\",\n        padding: \"16px\"\n    },\n    changePhoto: {\n        color: \"#0095f6\",\n        padding: 0,\n        textTransform: \"capitalize\"\n    },\n    displayName: {\n        fontSize: 18\n    },\n    label: {\n        flex: \"0 0 25%\",\n        textAlign: \"right\",\n        paddingTop: \"5px\"\n    },\n    input: {\n        paddingLeft: 20,\n        width: \"60%\",\n        float: \"left\"\n    },\n    inputField: {\n        width: \"100%\",\n        padding: \"0 8px\",\n        height: \"32px\",\n        fontSize: \"16px\",\n        color: \"#262626\",\n        border: \"1px solid rgba(var(--ca6,219,219,219),1)\"\n\n    },\n    description: {\n        padding: \"10px 0\"\n    },\n    descriptionText: {\n        textOverflow: \"ellipsis\",\n        textAlign: \"justify\",\n        color: \"#8e8e8e\",\n        fontSize: \"12px\",\n    },\n    inputText: {\n        fontSize: \"16px\",\n        height: 60,\n        padding: \"6px 10px\",\n        resize: \"vertical\",\n        border: \"1px solid rgba(var(--ca6,219,219,219),1)\",\n        width: \"100%\"\n    },\n    submit: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"20px\"\n    },\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 3, 3),\n        borderRadius: \"8px\",\n        maxHeight: \"300px\",\n        \"&:focus\": {\n            outline: \"none\"\n        },\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    modalHeader: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"10px 0 20px 0\",\n    },\n    btnAction: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    buttonClose: {\n        position: \"fixed\",\n        right: \"20px\",\n        top: \"17px\"\n    },\n    btnUpload: {\n        color : \"#0095f6\",\n        minHeight: \"48px\",\n        width : \"100%\",\n    },\n    btnRemove: {\n        color : \"#d8102a\",\n        minHeight: \"48px\",\n        width : \"100%\",\n    },\n    btnLabel: {\n        fontWeight: \"bold\"\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nfunction getModalStyle() {\n    const top = 50 ;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\n\nconst EditAccount = () => {\n    const [user] = useAuthState(auth);\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [modalStyle] = useState(getModalStyle);\n    const hiddenFileInput = useRef(null);\n    const [fullName, setFullName] = useState('');\n    const [displayName, setDisplayName] = useState('');\n    const [link, setLink] = useState('');\n    const [bio, setBio] = useState('');\n    const [phone, setPhone] = useState('');\n    const [loadingAvt, setLoadingAvt] = useState(false);\n    const [userData, loading] = useDocument(db.collection(\"users\").doc(user.uid));\n    const [openSnack, setOpenSnack] = useState(false);\n\n\n    useEffect(() => {\n        setDisplayName(userData?.data().displayName ?? '');\n        setFullName(userData?.data()?.fullName ?? '');\n        setLink(userData?.data()?.profileLink ?? '');\n        setBio(userData?.data()?.bio ?? '');\n        setPhone(userData?.data()?.phoneNumber ?? '');\n        // console.log(userData?.data()?.phoneNumber && userData?.data()?.phoneNumber)\n    }, [loading, userData])\n\n    const handleCloseSnack = (event) => {\n        setOpenSnack(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleClick = event => {\n        hiddenFileInput.current.click();\n    };\n\n    const handleChange = event => {\n        const fileUploaded = event.target.files[0];\n\n        // Change photoUrl here\n        const uploadTask = storage.ref(`images/${fileUploaded.name}`).put(fileUploaded);\n        uploadTask.on(\n            \"state_changed\",\n            (snapshot => {\n                setLoadingAvt(true);\n            }),\n            (error => {\n                console.log(error);\n            }),\n            () => {\n                storage\n                    .ref(\"images\")\n                    .child(fileUploaded.name)\n                    .getDownloadURL()\n                    .then(url => {\n                        // Update from firestore\n                        db.collection(\"users\").doc(user.uid).update({\n                            updateAt: firebase.firestore.FieldValue.serverTimestamp(),\n                            photoURL: url,\n                        })\n                        // Update user from firebase auth\n                        firebase.auth().currentUser.updateProfile({\n                            photoURL: url\n                        }).then(function() {\n                            // Update successful.\n                            setOpenSnack(true);\n                            setOpen(false);\n                            setLoadingAvt(false);\n                        }).catch(function(error) {\n                            // An error happened.\n                        });\n\n                    })\n            }\n        )\n\n    };\n\n\n    const handleRemove = event => {\n        db.collection(\"users\").doc(user.uid).update({\n            updateAt: firebase.firestore.FieldValue.serverTimestamp(),\n            photoURL: \"\",\n        })\n        // Update user from firebase auth\n        firebase.auth().currentUser.updateProfile({\n            photoURL: \"\"\n        }).then(function() {\n            // Update successful.\n            setLoadingAvt(false);\n            setOpenSnack(true);\n        }).catch(function(error) {\n            // An error happened.\n        });\n    };\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        db.collection(\"users\").doc(user.uid).update({\n            bio: bio,\n            profileLink: link,\n            fullName: fullName,\n            displayName: displayName,\n            phoneNumber: phone,\n            updateAt: firebase.firestore.FieldValue.serverTimestamp(),\n        })\n\n        firebase.auth().currentUser.updateProfile({\n            displayName: displayName\n        }).then(function() {\n            // Update successful.\n            setOpenSnack(true);\n        })\n\n    }\n\n    return(\n        <article className=\"edit_account__content\">\n            <>\n                <CardHeader\n                    className={classes.avatarHolder}\n                    avatar={\n                        user ? (\n                            <Avatar className={classes.avatar} alt={user.displayName} src={user.photoURL}/>\n                        ):(\n                            <Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />\n                        )\n                    }\n                    title={\n                        user?.uid ? (\n                            <Link to={`/profile/${user.uid}`} className={classes.displayName}>{user.displayName}</Link>\n                        ) : (\n                            <Skeleton animation=\"wave\" height={10} width=\"30%\" style={{ marginBottom: 6 }} />\n                        )\n                    }\n                    subheader={\n                        <Button className={classes.changePhoto} onClick={handleOpen}>Change Profile Photo</Button>\n                    }\n                />\n            </>\n            <form method=\"POST\" onSubmit={event => event.preventDefault()}>\n                <div className={classes.holder}>\n                    <aside className={classes.label}>\n                        <label htmlFor=\"pepName\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Full Name</label>\n                    </aside>\n                    <div className={classes.input}>\n                        <input\n                            value={fullName}\n                            onChange={event => setFullName(event.target.value)}\n                            className={classes.inputField}\n                            aria-required=\"false\" id=\"pepName\" placeholder=\"Name\" type=\"text\"\n                        />\n\n                        <div className={classes.description}>\n                            <span className={classes.descriptionText}>Help people discover your account by using the name you're known by: either your full name, nickname, or business name.</span>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.holder}>\n                    <aside className={classes.label}>\n                        <label htmlFor=\"pepUsername\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Display Name</label>\n                    </aside>\n                    <div className={classes.input}>\n                        <input\n                            value={displayName}\n                            onChange={event => setDisplayName(event.target.value)}\n                            className={classes.inputField}\n                            aria-required=\"false\" id=\"pepUsername\" placeholder=\"Username\" type=\"text\"\n                        />\n\n                        <div className={classes.description}>\n                            <span className={classes.descriptionText}>In most cases, you'll be able to change your username back for another 14 days.</span>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.holder}>\n                    <aside className={classes.label}>\n                        <label htmlFor=\"pepLink\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Link</label>\n                    </aside>\n                    <div className={classes.input}>\n                        <input\n                            value={link}\n                            onChange={event => setLink(event.target.value)}\n                            className={classes.inputField}\n                            aria-required=\"false\" id=\"pepLink\" placeholder=\"Link\" type=\"text\"\n                             />\n\n                    </div>\n                </div>\n\n                <div className={classes.holder}>\n                    <aside className={classes.label}>\n                        <label htmlFor=\"pepBio\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Bio</label>\n                    </aside>\n                    <div className={classes.input}>\n                        <textarea\n                            value={bio}\n                            onChange={event => setBio(event.target.value)}\n                            className={classes.inputText}\n                            id=\"pepBio\"\n                        />\n                        <div className={classes.description}>\n                            <span className={classes.descriptionText}>Provide your personal information, even if the account is used for a business, a pet or something else. This won't be a part of your public profile.</span>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.holder}>\n                    <aside className={classes.label}>\n                        <label htmlFor=\"pepEmail\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Email</label>\n                    </aside>\n                    <div className={classes.input}>\n                        <input\n                            value={user.email}\n                            disabled=\"disabled\"\n                            className={classes.inputField}\n                            aria-required=\"false\" id=\"pepEmail\" placeholder=\"Email\" type=\"text\"\n                        />\n                    </div>\n                </div>\n\n\n                <div className={classes.holder}>\n                    <aside className={classes.label}>\n                        <label htmlFor=\"pepPhone\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Phone Number</label>\n                    </aside>\n                    <div className={classes.input}>\n                        <input\n                            value={phone}\n                            onChange={event => setPhone(event.target.value)}\n                            className={classes.inputField}\n                            aria-required=\"false\" id=\"pepPhone\" placeholder=\"Phone\" type=\"text\"\n                        />\n                    </div>\n                </div>\n\n                <div className={classes.submit}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Update</Button>\n                </div>\n\n            </form>\n\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n            >\n                <div style={modalStyle} className={classes.paper}>\n                    <div className={classes.modalHeader}>\n                        <h2>Change profile</h2>\n                        <div className={classes.buttonClose}>\n                            <IconButton aria-label=\"Cancel\" color=\"inherit\" onClick={handleClose} >\n                                <CancelTwoToneIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                    <Divider />\n                    <div className={classes.btnAction}>\n                        <Button\n                            classes={{\n                                root: classes.btnUpload,\n                                label: classes.btnLabel,\n                            }}\n                            disabled={loadingAvt}\n                            onClick={handleClick}\n                        >\n                            Upload Photo\n                        </Button>\n                    </div>\n                    <Divider />\n                    <div className={classes.btnAction}>\n                        <Button\n                            classes={{\n                                root: classes.btnRemove,\n                                label: classes.btnLabel,\n                            }}\n                            disabled={loadingAvt}\n                            onClick={handleRemove}\n                        >\n                            Remove Photo\n                        </Button>\n                    </div>\n                    {loadingAvt && <CircularProgress size={24} className={classes.buttonProgress} /> }\n                    <Divider />\n\n                    <form encType=\"multipart/form-data\" method=\"POST\" role=\"presentation\">\n                        <input\n                            accept=\"image/jpeg,image/png\"\n                            style={{display: \"none\"}}\n                            type=\"file\"\n                            ref={hiddenFileInput}\n                            onChange={handleChange}\n                        />\n                    </form>\n                </div>\n\n            </Modal>\n\n            <Snackbar\n                open={openSnack}\n                autoHideDuration={6000}\n                onClose={handleCloseSnack}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n            >\n                <Alert onClose={handleCloseSnack} severity=\"success\">\n                    Upload successfully !\n                </Alert>\n            </Snackbar>\n        </article>\n\n    )\n}\n\nexport default EditAccount","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditPassword.js",["286","287","288","289","290","291"],"import React, {useRef, useState} from \"react\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport {IconButton, Modal} from \"@material-ui/core\";\nimport CancelTwoToneIcon from \"@material-ui/icons/CancelTwoTone\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {auth} from \"../../../firebase\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n        width: 100,\n        height: 100,\n        margin: \"0 20px\",\n    },\n    avatarHolder: {\n        padding: \"16px 32px\"\n    },\n    holder: {\n        display: \"flex\",\n        padding: \"16px\"\n    },\n    changePhoto: {\n        color: \"#0095f6\",\n        padding: 0,\n        textTransform: \"capitalize\"\n    },\n    displayName: {\n        fontSize: 18\n    },\n    label: {\n        flex: \"0 0 25%\",\n        textAlign: \"right\",\n    },\n    input: {\n        paddingLeft: 20,\n        width: \"60%\",\n        float: \"left\"\n    },\n    inputField: {\n        width: \"100%\",\n        padding: \"0 8px\",\n        height: \"32px\",\n        fontSize: \"16px\",\n        color: \"#262626\",\n        border: \"1px solid rgba(var(--ca6,219,219,219),1)\"\n\n    },\n    description: {\n        padding: \"10px 0\"\n    },\n    descriptionText: {\n        textOverflow: \"ellipsis\",\n        textAlign: \"justify\",\n        color: \"#8e8e8e\",\n        fontSize: \"12px\",\n    },\n    inputText: {\n        fontSize: \"16px\",\n        height: 60,\n        padding: \"6px 10px\",\n        resize: \"vertical\",\n        border: \"1px solid rgba(var(--ca6,219,219,219),1)\",\n        width: \"100%\"\n    },\n    submit: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"20px\"\n    },\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 3, 3),\n        borderRadius: \"8px\",\n        maxHeight: \"300px\",\n        \"&:focus\": {\n            outline: \"none\"\n        },\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    modalHeader: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"10px 0 20px 0\",\n    },\n    btnAction: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    buttonClose: {\n        position: \"fixed\",\n        right: \"20px\",\n        top: \"17px\"\n    },\n    btnUpload: {\n        color : \"#0095f6\",\n        minHeight: \"48px\",\n        width : \"100%\",\n        fontWeight: \"bold\"\n    },\n    btnRemove: {\n        color : \"#d8102a\",\n        minHeight: \"48px\",\n        width : \"100%\",\n        fontWeight: \"bold\"\n    }\n}));\n\nconst EditPassword = () => {\n\n    const [user] = useAuthState(auth);\n    const classes = useStyles();\n\n    return(\n        <article className=\"edit_account__content\">\n            <div className={classes.profile}>\n                <CardHeader\n                    className={classes.avatarHolder}\n                    avatar={\n                        user?.uid ? (\n                            <Avatar className={classes.avatar} alt={user.displayName} src={user.photoURL}/>\n                        ):(\n                            <Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />\n                        )\n                    }\n                    title={\n                        user?.uid ? (\n                            <Link to={`profile/${user.uid}`} className={classes.displayName}>{user.displayName}</Link>\n                        ) : (\n                            <Skeleton animation=\"wave\" height={10} width=\"30%\" style={{ marginBottom: 6 }} />\n                        )\n                    }\n                />\n            </div>\n            <form method=\"POST\">\n                <div className={classes.holder}>\n                    <aside className={classes.label}>\n                        <label htmlFor=\"pepOld\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Old Password</label>\n                    </aside>\n                    <div className={classes.input}>\n                        <input\n                            className={classes.inputField}\n                            aria-required=\"false\" id=\"pepOld\"  type=\"password\"\n                        />\n\n                    </div>\n                </div>\n\n                <div className={classes.holder}>\n                    <aside className={classes.label}>\n                        <label htmlFor=\"pepNewPassword\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>New Password</label>\n                    </aside>\n                    <div className={classes.input}>\n                        <input\n                            className={classes.inputField}\n                            aria-required=\"false\" id=\"pepNewPassword\"  type=\"password\"\n                        />\n                    </div>\n                </div>\n\n                <div className={classes.holder}>\n                    <aside className={classes.label}>\n                        <label htmlFor=\"pepConfirm\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Confirm</label>\n                    </aside>\n                    <div className={classes.input}>\n                        <input\n                            className={classes.inputField}\n                            aria-required=\"false\" id=\"pepConfirm\" type=\"password\"\n                        />\n\n                    </div>\n                </div>\n\n\n                <div className={classes.submit}>\n                    <Button variant=\"contained\" color=\"primary\">Change</Button>\n                </div>\n\n            </form>\n\n        </article>\n    )\n}\n\nexport default EditPassword","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/ProfileNavBar.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileFeed.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/features/chatSlice.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Sidebar/SidebarChat.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Sidebar/CreateNewChat.js",["292"],"import React, {useEffect, useState} from \"react\";\nimport {IconButton, Modal, TextField} from \"@material-ui/core\";\nimport CancelTwoToneIcon from \"@material-ui/icons/CancelTwoTone\";\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {green} from \"@material-ui/core/colors\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport {db} from \"../../../firebase\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport firebase from \"firebase\";\n\n\n\nfunction getModalStyle() {\n    const top = 50 ;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 500,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 3, 3),\n        borderRadius: \"8px\",\n        maxHeight: \"740px\",\n        \"&:focus\": {\n            outline: \"none\"\n        },\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    modalHeader: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"10px 0 20px 0\",\n        borderBottom: \"1px solid #39CCCC\"\n    },\n    buttonClose: {\n        position: \"fixed\",\n        right: \"20px\",\n        top: \"17px\"\n    },\n    inputText: {\n        width: \"100%\",\n        padding: \"10px 0\",\n        minHeight: \"100px\",\n        maxHeight: \"250px\",\n        fontFamily: \"'Quicksand', sans-serif\"\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    input: {\n        display: \"flex\",\n        padding: \"20px 0\",\n        alignItems: \"center\"\n    },\n    suggest: {\n        padding: \"20px 0\"\n    },\n    userToChat: {\n        padding: \"10px 0\",\n        display: \"flex\",\n        alignItems: \"center\",\n        cursor: \"pointer\"\n    }\n}));\n\nconst CreateNewChat = (props) => {\n    const [email, setEmail] = useState('');\n    const classes = useStyles();\n    const [modalStyle] = useState(getModalStyle);\n\n    const userChatRef = db.collection(\"conversations\").where('users', 'array-contains', props.user.email);\n    const [chatsSnapshot] = useCollection(userChatRef);\n\n    const userRef = db.collection(\"users\").where('uid', '!=', props.user.uid);\n    const [usersSnapshot] = useCollection(userRef);\n\n\n    // perform add to database\n    const handleAddChat = () => {\n        if(email && email!== props.user.email && !conversationExists(email)){\n            db.collection(\"conversations\").add({\n                users: [props?.user.email, email],\n                lastUpdate: firebase.firestore.FieldValue.serverTimestamp(),\n                isSeen: firebase.firestore.FieldValue.serverTimestamp(),\n                lastSend: props.user.email\n            })\n        }\n\n        props.handleClose(true);\n        setEmail(\"\");\n        // console.log(conversationExists(email));\n    }\n    const conversationExists = (recipientEmail) =>\n        !!chatsSnapshot?.docs.find((chat) =>\n            chat.data().users.find((user) =>\n                user === recipientEmail)?.length > 0)\n\n\n    const handleClickAddChat = (email) => {\n        console.log(email);\n        setEmail(email);\n    }\n\n    return (\n        <Modal\n            open={props.open}\n            onClose={props.handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n        >\n            <div style={modalStyle} className={classes.paper}>\n                <div className={classes.modalHeader}>\n                    <h2>New Message</h2>\n                    <div className={classes.buttonClose}>\n                        <IconButton aria-label=\"Cancel\" color=\"inherit\" onClick={props.handleClose} >\n                            <CancelTwoToneIcon />\n                        </IconButton>\n                    </div>\n                </div>\n                <Divider />\n\n                <div className={classes.input}>\n                    <span style={{paddingRight: \"20px\"}}>To: </span>\n                    <TextField\n                        style={{width: \"100%\"}}\n                        id=\"standard-basic\"\n                        value={email}\n                        onChange={event => setEmail(event.target.value)}\n                        InputProps={{ disableUnderline: true, style : {fontSize: \"18px\", fontFamily: \"'Quicksand', sans-serif\"}}}\n                    />\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleAddChat}>\n                        Next\n                    </Button>\n                </div>\n                <Divider />\n                <div className={classes.suggest}>\n                    {\n                        usersSnapshot?.docs.map((data) => (\n                            <div\n                                className={classes.userToChat}\n                                key={data.id}\n                                onClick={() => handleClickAddChat(data.data().email)}\n                            >\n                                <Avatar alt={data.data()?.displayName} src={data.data()?.photoURL} />\n                                <h4 style={{padding: \"0 10px\"}}>{data.data()?.displayName}</h4>\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n        </Modal>\n    )\n}\n\nexport default CreateNewChat","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Message.js",["293"],"import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {auth} from \"../../firebase\";\nimport {useSelector} from \"react-redux\";\nimport {selectChatRecipient} from \"../../features/chatSlice\";\nimport TimeAgo from \"timeago-react\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    chat: {\n        color: \"#262626\",\n        overflowWrap: \"break-word\",\n        whiteSpace: \"pre-wrap\",\n        fontSize: \"14px\",\n    },\n    chatTime: {\n        marginLeft: 20,\n        fontSize: \"12px\",\n        color: \"#484848\",\n    }\n}));\n\nconst Message = ({uid, message, timestamp}) => {\n    const recipient = useSelector(selectChatRecipient);\n    const [userLogged] = useAuthState(auth);\n\n    const classes = useStyles();\n\n    return (\n        <div className=\"chat__content\">\n            {/* Retrieve */}\n            <div className={`chat__message ${userLogged.uid === uid && \"sender\"}`}>\n                {\n                    userLogged.uid !== uid && (\n                        <Avatar alt={recipient?.displayName} src={recipient?.photoURL} />\n                    )\n                }\n\n                <div className=\"chat__details\">\n                    <span className={classes.chat}>\n                        {message}\n                    </span>\n                    {\n                        timestamp? (\n                            <span className={classes.chatTime}>\n                                {timestamp?.toDate().toLocaleString()}\n                            </span>\n                        ) : (\n                            <span className={classes.chatTime}>Loading</span>\n                        )\n                    }\n\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Message","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/ChatInput.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/index.js",["294"],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Post.js",["295","296","297","298","299"],"/home/miizoo/Desktop/ReactJS/livefood/src/views/SinglePage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileVids.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileSaved.js",["300"],"/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExplorePage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExplorePeoplePage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExplorePeopleItem.js",["301","302"],"import React, {useEffect, useState} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport {auth, db} from \"../../firebase\";\nimport Button from \"@material-ui/core/Button\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport firebase from \"firebase\";\nimport { useDocument} from \"react-firebase-hooks/firestore\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n    button: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: \"150px\",\n        color: \"white\",\n        backgroundColor: \"#0095f6\",\n        \"&:hover\": {\n            backgroundColor: \"#0186db\",\n        },\n        marginRight: \"15px\",\n        textTransform: \"capitalize\"\n    },\n    buttonUnfollow: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: \"150px\",\n        color: \"#454444\",\n        // \"&:hover\": {\n        //     backgroundColor: \"#c3d6fa\",\n        // },\n        marginRight: \"15px\",\n        textTransform: \"capitalize\"\n    }\n}));\n\n\nexport default function ExplorePeopleItem() {\n    const classes = useStyles();\n    const [users, setUsers] = useState([])\n    const [userData] = useAuthState(auth);\n\n    const userRef = db.collection('users').doc(userData.uid);\n    const [userSnapshot] = useDocument(userRef);\n\n    let userFollowingList = userSnapshot?.data()?.following;\n    let userFollowerList = userSnapshot?.data()?.follower;\n\n    // List user\n    useEffect(() => {\n        var followingList;\n\n        if(typeof userSnapshot?.data()?.following !== 'undefined' && userSnapshot?.data()?.following.length >= 0){\n            followingList = userSnapshot.data().following\n            followingList.push(userData.uid);\n            return db.collection(\"users\")\n                .where('uid' ,'not-in' , followingList )\n                .get().then(snapshot => {\n                    setUsers(snapshot.docs.map(doc => ({\n                        id: doc.id,\n                        user: doc.data(),\n                    })));\n            })\n        }\n    }, [userSnapshot])\n\n\n    // check if user followed\n    const checkFollowed = (userFollowingList, uid) => {\n        let rs = false;\n        if(typeof userFollowingList !== 'undefined' ){\n            rs = userFollowingList.includes(uid);\n        }\n        return rs;\n    }\n\n    const handleFollowClick = (id, uid) => {\n        // Update user following\n        userRef.update({\n            following: firebase.firestore.FieldValue.arrayUnion(id)\n        });\n        // Update opponent follower\n        db.collection('users').doc(id).update({\n            follower: firebase.firestore.FieldValue.arrayUnion(uid)\n        });\n    }\n\n    const handleUnfollowClick = (id, uid) => {\n        userRef.update({\n            following: firebase.firestore.FieldValue.arrayRemove(id)\n        });\n        // Update opponent follower\n        db.collection('users').doc(id).update({\n            follower: firebase.firestore.FieldValue.arrayRemove(uid)\n        });\n    }\n\n\n    const checkOpponentFollowYou = (userFollowerList, uid) => {\n        let rs = false;\n        if(typeof userFollowerList !== 'undefined' ){\n            rs = userFollowerList.includes(uid);\n        }\n        return rs;\n    }\n\n    return (\n        <div className=\"explore__container\">\n            <List className={classes.root}>\n                {\n                    users?.map(({id, user}) => (\n                        <ListItem key={id} alignItems=\"flex-start\">\n                            <ListItemAvatar>\n                                <Avatar alt={user.displayName} src={user.photoURL} />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={\n                                    <Link to={`/profile/${user?.uid}`} className={classes.name}>{user?.displayName}</Link>\n                                    }\n                                secondary={\n                                    <Typography\n                                        component=\"span\"\n                                        variant=\"body2\"\n                                        className={classes.inline}\n                                        color=\"textPrimary\"\n                                    >\n                                        Full name\n                                        -   {checkOpponentFollowYou(userFollowerList, id) ? \"Follow you\" : \" Suggested for you\"}\n                                    </Typography>\n                                }\n                            />\n\n                            {\n                                checkFollowed(userFollowingList, id) ? (\n                                    <Button\n                                        variant=\"outlined\"\n                                        style={{textTransform: \"capitalize\"}}\n                                        className={classes.buttonUnfollow}\n                                        onClick={() => handleUnfollowClick(id, userData.uid)}\n                                    >\n                                        Unfollow\n                                    </Button>\n                                ) : (\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        style={{textTransform: \"capitalize\"}}\n                                        className={classes.button}\n                                        onClick={() => handleFollowClick(id, userData.uid)}\n                                    >\n                                        Follow\n                                    </Button>\n                                )\n                            }\n                        </ListItem>\n                    ))\n                }\n\n            </List>\n        </div>\n    );\n}","/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExploreVideoPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExploreVideoItem.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/utils/handleLikePost.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/utils/handleDislikePost.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/utils/handleSavePost.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/utils/handleUnsavedPost.js",[],{"ruleId":"303","replacedBy":"304"},{"ruleId":"305","replacedBy":"306"},{"ruleId":"307","severity":1,"message":"308","line":2,"column":27,"nodeType":"309","messageId":"310","endLine":2,"endColumn":35},{"ruleId":"307","severity":1,"message":"311","line":4,"column":45,"nodeType":"309","messageId":"310","endLine":4,"endColumn":51},{"ruleId":"312","severity":1,"message":"313","line":294,"column":8,"nodeType":"314","endLine":294,"endColumn":18,"suggestions":"315"},{"ruleId":"316","severity":1,"message":"317","line":430,"column":105,"nodeType":"318","endLine":431,"endColumn":81},{"ruleId":"316","severity":1,"message":"317","line":435,"column":104,"nodeType":"318","endLine":436,"endColumn":81},{"ruleId":"307","severity":1,"message":"319","line":1,"column":16,"nodeType":"309","messageId":"310","endLine":1,"endColumn":25},{"ruleId":"307","severity":1,"message":"320","line":3,"column":9,"nodeType":"309","messageId":"310","endLine":3,"endColumn":12},{"ruleId":"307","severity":1,"message":"320","line":5,"column":9,"nodeType":"309","messageId":"310","endLine":5,"endColumn":12},{"ruleId":"307","severity":1,"message":"321","line":20,"column":11,"nodeType":"309","messageId":"310","endLine":20,"endColumn":18},{"ruleId":"307","severity":1,"message":"322","line":23,"column":8,"nodeType":"309","messageId":"310","endLine":23,"endColumn":15},{"ruleId":"307","severity":1,"message":"321","line":30,"column":11,"nodeType":"309","messageId":"310","endLine":30,"endColumn":18},{"ruleId":"312","severity":1,"message":"323","line":55,"column":8,"nodeType":"314","endLine":55,"endColumn":22,"suggestions":"324"},{"ruleId":"307","severity":1,"message":"325","line":11,"column":8,"nodeType":"309","messageId":"310","endLine":11,"endColumn":16},{"ruleId":"307","severity":1,"message":"326","line":2,"column":8,"nodeType":"309","messageId":"310","endLine":2,"endColumn":15},{"ruleId":"307","severity":1,"message":"327","line":6,"column":18,"nodeType":"309","messageId":"310","endLine":6,"endColumn":27},{"ruleId":"307","severity":1,"message":"328","line":10,"column":46,"nodeType":"309","messageId":"310","endLine":10,"endColumn":55},{"ruleId":"307","severity":1,"message":"329","line":1,"column":16,"nodeType":"309","messageId":"310","endLine":1,"endColumn":22},{"ruleId":"307","severity":1,"message":"308","line":1,"column":24,"nodeType":"309","messageId":"310","endLine":1,"endColumn":32},{"ruleId":"307","severity":1,"message":"330","line":7,"column":9,"nodeType":"309","messageId":"310","endLine":7,"endColumn":19},{"ruleId":"307","severity":1,"message":"331","line":7,"column":21,"nodeType":"309","messageId":"310","endLine":7,"endColumn":26},{"ruleId":"307","severity":1,"message":"332","line":8,"column":8,"nodeType":"309","messageId":"310","endLine":8,"endColumn":25},{"ruleId":"307","severity":1,"message":"322","line":9,"column":8,"nodeType":"309","messageId":"310","endLine":9,"endColumn":15},{"ruleId":"307","severity":1,"message":"319","line":1,"column":16,"nodeType":"309","messageId":"310","endLine":1,"endColumn":25},{"ruleId":"307","severity":1,"message":"333","line":8,"column":8,"nodeType":"309","messageId":"310","endLine":8,"endColumn":15},{"ruleId":"312","severity":1,"message":"334","line":76,"column":8,"nodeType":"314","endLine":76,"endColumn":28,"suggestions":"335"},{"ruleId":"307","severity":1,"message":"336","line":26,"column":30,"nodeType":"309","messageId":"310","endLine":26,"endColumn":46},{"ruleId":"307","severity":1,"message":"332","line":40,"column":8,"nodeType":"309","messageId":"310","endLine":40,"endColumn":25},{"ruleId":"312","severity":1,"message":"337","line":302,"column":5,"nodeType":"314","endLine":302,"endColumn":9,"suggestions":"338"},{"ruleId":"316","severity":1,"message":"317","line":459,"column":62,"nodeType":"318","endLine":460,"endColumn":38},{"ruleId":"316","severity":1,"message":"317","line":464,"column":61,"nodeType":"318","endLine":465,"endColumn":38},{"ruleId":"312","severity":1,"message":"339","line":69,"column":8,"nodeType":"314","endLine":69,"endColumn":31,"suggestions":"340"},{"ruleId":"307","severity":1,"message":"322","line":5,"column":8,"nodeType":"309","messageId":"310","endLine":5,"endColumn":15},{"ruleId":"312","severity":1,"message":"323","line":86,"column":8,"nodeType":"314","endLine":86,"endColumn":22,"suggestions":"341"},"no-native-reassign",["342"],"no-negated-in-lhs",["343"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'postRef', 'props.post.likeBy', 'props.post.saveBy', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["344"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'red' is defined but never used.","'classes' is assigned a value but never used.","'Divider' is defined but never used.","React Hook useEffect has a missing dependency: 'userData.uid'. Either include it or remove the dependency array.",["345"],"'Snackbar' is defined but never used.","'NavItem' is defined but never used.","'UsersIcon' is defined but never used.","'TextField' is defined but never used.","'useRef' is defined but never used.","'IconButton' is defined but never used.","'Modal' is defined but never used.","'CancelTwoToneIcon' is defined but never used.","'TimeAgo' is defined but never used.","React Hook useEffect has missing dependencies: 'authUser.uid' and 'userFollow'. Either include them or remove the dependency array.",["346"],"'CircularProgress' is defined but never used.","React Hook useEffect has missing dependencies: 'post.likeBy', 'post.saveBy', 'postRef', and 'user'. Either include them or remove the dependency array.",["347"],"React Hook useEffect has a missing dependency: 'userSavedList'. Either include it or remove the dependency array.",["348"],["349"],"no-global-assign","no-unsafe-negation",{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"352","fix":"360"},"Update the dependencies array to be: [postRef, props.id, props.post.likeBy, props.post.saveBy, user]",{"range":"361","text":"362"},"Update the dependencies array to be: [userData.uid, userSnapshot]",{"range":"363","text":"364"},"Update the dependencies array to be: [authUser.uid, userFollow, userFollow.length]",{"range":"365","text":"366"},"Update the dependencies array to be: [id, post.likeBy, post.saveBy, postRef, user]",{"range":"367","text":"368"},"Update the dependencies array to be: [userSavedList, userSavedList.length]",{"range":"369","text":"370"},{"range":"371","text":"364"},[8365,8375],"[postRef, props.id, props.post.likeBy, props.post.saveBy, user]",[1823,1837],"[userData.uid, userSnapshot]",[2383,2403],"[authUser.uid, userFollow, userFollow.length]",[7469,7473],"[id, post.likeBy, post.saveBy, postRef, user]",[2245,2268],"[userSavedList, userSavedList.length]",[2800,2814]]