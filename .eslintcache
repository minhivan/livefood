[{"/home/miizoo/Desktop/ReactJS/livefood/src/index.js":"1","/home/miizoo/Desktop/ReactJS/livefood/src/App.js":"2","/home/miizoo/Desktop/ReactJS/livefood/src/firebase.js":"3","/home/miizoo/Desktop/ReactJS/livefood/src/routes.js":"4","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Chat.js":"5","/home/miizoo/Desktop/ReactJS/livefood/src/components/GlobalStyle/index.js":"6","/home/miizoo/Desktop/ReactJS/livefood/src/serviceWorker.js":"7","/home/miizoo/Desktop/ReactJS/livefood/src/app/store.js":"8","/home/miizoo/Desktop/ReactJS/livefood/src/features/userSlice.js":"9","/home/miizoo/Desktop/ReactJS/livefood/src/components/Page.js":"10","/home/miizoo/Desktop/ReactJS/livefood/src/components/MediaViewer/index.js":"11","/home/miizoo/Desktop/ReactJS/livefood/src/views/MessengerPage.js":"12","/home/miizoo/Desktop/ReactJS/livefood/src/views/HomePage.js":"13","/home/miizoo/Desktop/ReactJS/livefood/src/views/NotFoundPage.js":"14","/home/miizoo/Desktop/ReactJS/livefood/src/views/auth/SignUpPage.js":"15","/home/miizoo/Desktop/ReactJS/livefood/src/views/auth/SignInPage.js":"16","/home/miizoo/Desktop/ReactJS/livefood/src/views/account/UserProfilePage.js":"17","/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/LeftSideBar/index.js":"18","/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/LeftSideBar/NavItem.js":"19","/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/RightSideBar/index.js":"20","/home/miizoo/Desktop/ReactJS/livefood/src/views/account/EditAccountPage.js":"21","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/ProfileHeader.js":"22","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/AccountNavBar.js":"23","/home/miizoo/Desktop/ReactJS/livefood/src/theme/index.js":"24","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditAccount.js":"25","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditPassword.js":"26","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/ProfileNavBar.js":"27","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileFeed.js":"28","/home/miizoo/Desktop/ReactJS/livefood/src/features/chatSlice.js":"29","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Sidebar/SidebarChat.js":"30","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Sidebar/CreateNewChat.js":"31","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Message.js":"32","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/ChatInput.js":"33","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/index.js":"34","/home/miizoo/Desktop/ReactJS/livefood/src/views/SinglePage.js":"35","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileVids.js":"36","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileSaved.js":"37","/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExplorePage.js":"38","/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExplorePeoplePage.js":"39","/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExploreVideoPage.js":"40","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Post.js":"41","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditShop.js":"42","/home/miizoo/Desktop/ReactJS/livefood/src/hooks/getRecipientUser.js":"43","/home/miizoo/Desktop/ReactJS/livefood/src/hooks/services.js":"44","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Action.js":"45","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Content.js":"46","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Header.js":"47","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/RecipeData.js":"48","/home/miizoo/Desktop/ReactJS/livefood/src/components/MediaViewer/Preview.js":"49","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileMenuList.js":"50","/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/Popup.js":"51","/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/AddDishes.js":"52","/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/index.js":"53","/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/Stepper.js":"54","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditNotification.js":"55","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditAbout.js":"56","/home/miizoo/Desktop/ReactJS/livefood/src/views/auth/ForgotPassword.js":"57","/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/AlertPopup.js":"58","/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExplorePeopleItem.js":"59","/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExploreItem.js":"60","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/index.js":"61","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Search/index.js":"62","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Logo/index.js":"63","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Item/index.js":"64","/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/CommentInput.js":"65","/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/index.js":"66","/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/CommentDetails.js":"67","/home/miizoo/Desktop/ReactJS/livefood/src/views/recipe/RecipePage.js":"68","/home/miizoo/Desktop/ReactJS/livefood/src/views/recipe/TopicPage.js":"69","/home/miizoo/Desktop/ReactJS/livefood/src/views/recipe/TrendingPage.js":"70","/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/ListUserInProfile.js":"71","/home/miizoo/Desktop/ReactJS/livefood/src/components/Recipe/ListRecipe.js":"72","/home/miizoo/Desktop/ReactJS/livefood/src/components/Recipe/NewestRecipe.js":"73","/home/miizoo/Desktop/ReactJS/livefood/src/views/recipe/ResultRecipePace.js":"74","/home/miizoo/Desktop/ReactJS/livefood/src/images/icons/Google.js":"75","/home/miizoo/Desktop/ReactJS/livefood/src/views/LocationPage.js":"76","/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/PostUtil.js":"77","/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/CommentUtil.js":"78","/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/Survey.js":"79","/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/ListUserLikePost.js":"80","/home/miizoo/Desktop/ReactJS/livefood/src/components/DefaultLayout.js":"81","/home/miizoo/Desktop/ReactJS/livefood/src/components/MainLayout.js":"82","/home/miizoo/Desktop/ReactJS/livefood/src/theme/typography.js":"83"},{"size":674,"mtime":1616998952304,"results":"84","hashOfConfig":"85"},{"size":2121,"mtime":1620924440364,"results":"86","hashOfConfig":"85"},{"size":1157,"mtime":1618332345707,"results":"87","hashOfConfig":"85"},{"size":4280,"mtime":1620698440028,"results":"88","hashOfConfig":"85"},{"size":4889,"mtime":1619785183629,"results":"89","hashOfConfig":"85"},{"size":797,"mtime":1616998797535,"results":"90","hashOfConfig":"85"},{"size":5796,"mtime":1615795454946,"results":"91","hashOfConfig":"85"},{"size":262,"mtime":1617122372343,"results":"92","hashOfConfig":"85"},{"size":468,"mtime":1617121688821,"results":"93","hashOfConfig":"85"},{"size":625,"mtime":1615968337340,"results":"94","hashOfConfig":"85"},{"size":19523,"mtime":1620919368147,"results":"95","hashOfConfig":"85"},{"size":3269,"mtime":1619687274089,"results":"96","hashOfConfig":"85"},{"size":760,"mtime":1620496830009,"results":"97","hashOfConfig":"85"},{"size":1488,"mtime":1616779633942,"results":"98","hashOfConfig":"85"},{"size":8319,"mtime":1620796125986,"results":"99","hashOfConfig":"85"},{"size":8454,"mtime":1620882095931,"results":"100","hashOfConfig":"85"},{"size":4170,"mtime":1620927032166,"results":"101","hashOfConfig":"85"},{"size":5924,"mtime":1620922361121,"results":"102","hashOfConfig":"85"},{"size":2348,"mtime":1620147385445,"results":"103","hashOfConfig":"85"},{"size":8676,"mtime":1620894364909,"results":"104","hashOfConfig":"85"},{"size":2959,"mtime":1619871669807,"results":"105","hashOfConfig":"85"},{"size":14136,"mtime":1620894337488,"results":"106","hashOfConfig":"85"},{"size":5009,"mtime":1619836847297,"results":"107","hashOfConfig":"85"},{"size":664,"mtime":1620698534894,"results":"108","hashOfConfig":"85"},{"size":17800,"mtime":1620186764172,"results":"109","hashOfConfig":"85"},{"size":6518,"mtime":1620922113321,"results":"110","hashOfConfig":"85"},{"size":4602,"mtime":1620927032158,"results":"111","hashOfConfig":"85"},{"size":3084,"mtime":1620919294549,"results":"112","hashOfConfig":"85"},{"size":821,"mtime":1617387901510,"results":"113","hashOfConfig":"85"},{"size":4563,"mtime":1619420195325,"results":"114","hashOfConfig":"85"},{"size":5607,"mtime":1619931487570,"results":"115","hashOfConfig":"85"},{"size":1796,"mtime":1619546645994,"results":"116","hashOfConfig":"85"},{"size":5031,"mtime":1620919687978,"results":"117","hashOfConfig":"85"},{"size":4356,"mtime":1620797120181,"results":"118","hashOfConfig":"85"},{"size":3380,"mtime":1620496930753,"results":"119","hashOfConfig":"85"},{"size":3268,"mtime":1620576896055,"results":"120","hashOfConfig":"85"},{"size":3745,"mtime":1620576854746,"results":"121","hashOfConfig":"85"},{"size":5476,"mtime":1620918931877,"results":"122","hashOfConfig":"85"},{"size":709,"mtime":1620027664401,"results":"123","hashOfConfig":"85"},{"size":3674,"mtime":1620910063128,"results":"124","hashOfConfig":"85"},{"size":2589,"mtime":1620660763335,"results":"125","hashOfConfig":"85"},{"size":7417,"mtime":1620922047539,"results":"126","hashOfConfig":"85"},{"size":155,"mtime":1617010171560,"results":"127","hashOfConfig":"85"},{"size":6251,"mtime":1620916405213,"results":"128","hashOfConfig":"85"},{"size":7695,"mtime":1620880128247,"results":"129","hashOfConfig":"85"},{"size":3974,"mtime":1620443601566,"results":"130","hashOfConfig":"85"},{"size":2329,"mtime":1620211333146,"results":"131","hashOfConfig":"85"},{"size":4546,"mtime":1620405453316,"results":"132","hashOfConfig":"85"},{"size":2328,"mtime":1619664366876,"results":"133","hashOfConfig":"85"},{"size":5762,"mtime":1620615696265,"results":"134","hashOfConfig":"85"},{"size":10909,"mtime":1620473914776,"results":"135","hashOfConfig":"85"},{"size":10756,"mtime":1620186593895,"results":"136","hashOfConfig":"85"},{"size":5041,"mtime":1620613868853,"results":"137","hashOfConfig":"85"},{"size":25184,"mtime":1620548016487,"results":"138","hashOfConfig":"85"},{"size":7401,"mtime":1620803451546,"results":"139","hashOfConfig":"85"},{"size":12599,"mtime":1620922100810,"results":"140","hashOfConfig":"85"},{"size":5518,"mtime":1620707093768,"results":"141","hashOfConfig":"85"},{"size":1643,"mtime":1619876828158,"results":"142","hashOfConfig":"85"},{"size":7581,"mtime":1620894218315,"results":"143","hashOfConfig":"85"},{"size":2590,"mtime":1620918964540,"results":"144","hashOfConfig":"85"},{"size":1091,"mtime":1620880930652,"results":"145","hashOfConfig":"85"},{"size":3468,"mtime":1620287257157,"results":"146","hashOfConfig":"85"},{"size":741,"mtime":1616172292428,"results":"147","hashOfConfig":"85"},{"size":12970,"mtime":1620922436116,"results":"148","hashOfConfig":"85"},{"size":8166,"mtime":1620925983368,"results":"149","hashOfConfig":"85"},{"size":2244,"mtime":1620717161019,"results":"150","hashOfConfig":"85"},{"size":3833,"mtime":1620659062021,"results":"151","hashOfConfig":"85"},{"size":7412,"mtime":1620878373630,"results":"152","hashOfConfig":"85"},{"size":4178,"mtime":1620274695053,"results":"153","hashOfConfig":"85"},{"size":2851,"mtime":1620757283015,"results":"154","hashOfConfig":"85"},{"size":6456,"mtime":1620894218295,"results":"155","hashOfConfig":"85"},{"size":2942,"mtime":1620810665176,"results":"156","hashOfConfig":"85"},{"size":1834,"mtime":1620272490862,"results":"157","hashOfConfig":"85"},{"size":4731,"mtime":1620287668735,"results":"158","hashOfConfig":"85"},{"size":1584,"mtime":1615966706650,"results":"159","hashOfConfig":"85"},{"size":13315,"mtime":1620894411381,"results":"160","hashOfConfig":"85"},{"size":7583,"mtime":1620445616675,"results":"161","hashOfConfig":"85"},{"size":5822,"mtime":1620404873348,"results":"162","hashOfConfig":"85"},{"size":16555,"mtime":1620802481496,"results":"163","hashOfConfig":"85"},{"size":7806,"mtime":1620910630765,"results":"164","hashOfConfig":"85"},{"size":1076,"mtime":1615825508670,"results":"165","hashOfConfig":"85"},{"size":409,"mtime":1620698440052,"results":"166","hashOfConfig":"85"},{"size":648,"mtime":1620698512195,"results":"167","hashOfConfig":"85"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"nv6ebl",{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"170"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"170"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"170"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"170"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"170"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"170"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"170"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"170"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"170"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"170"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"170"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"170"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"170"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"170"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"170"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"170"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"170"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"170"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"170"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"170"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"170"},"/home/miizoo/Desktop/ReactJS/livefood/src/index.js",[],["356","357"],"/home/miizoo/Desktop/ReactJS/livefood/src/App.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/firebase.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/routes.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Chat.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/GlobalStyle/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/serviceWorker.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/app/store.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/features/userSlice.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Page.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/MediaViewer/index.js",["358","359"],"/home/miizoo/Desktop/ReactJS/livefood/src/views/MessengerPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/HomePage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/NotFoundPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/auth/SignUpPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/auth/SignInPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/account/UserProfilePage.js",["360","361","362"],"/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/LeftSideBar/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/LeftSideBar/NavItem.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/RightSideBar/index.js",["363","364"],"import React, {useEffect, useState} from \"react\";\nimport '../RightSideBar.css';\n\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {Button, Hidden, makeStyles, TextField} from \"@material-ui/core\";\nimport {blue} from \"@material-ui/core/colors\";\nimport {db} from \"../../../firebase\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport {Link} from \"react-router-dom\";\nimport {handleUserFollow, handleUserUnfollow} from \"../../../hooks/services\";\nimport firebase from \"firebase\";\nimport {MessageCircle as CameraIcon} from \"react-feather\";\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    root: {\n        width: \"100%\",\n    },\n    icon: {\n        color: \"#050505\",\n        margin: \"20px\"\n    },\n    wrapper: {\n        padding: \"20px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        maxHeight: \"200px\",\n        width: \"100%\"\n    },\n}));\n\n\nfunction RightSideBar(props) {\n    const classes = useStyles();\n    const [users, setUsers] = useState([])\n    const { userLogged } = props;\n    const [chat, setChat] = useState([]);\n\n    const userRef = userLogged?.uid && db.collection('users').doc(userLogged.uid);\n    const [userSnapshot, loading] = useDocument(userRef);\n    const authFollowingList = userSnapshot?.data()?.following;\n\n    const [userLoggedData, setUserLoggedData] = useState({});\n\n    useEffect(() => {\n        if(userLogged){\n            setUserLoggedData({\n                uid: userLogged.uid,\n                photoURL: userLogged.photoURL,\n                displayName: userLogged.displayName\n            })\n        }\n    }, [userLogged])\n\n    // List user\n    useEffect(() => {\n        var followingList = {};\n        if(typeof authFollowingList !== 'undefined' && authFollowingList?.length >= 0){\n            followingList = userSnapshot.data().following\n            userLogged.uid && followingList.push(userLogged.uid);\n            return db.collection(\"users\")\n                .limit(10)\n                .get().then(snapshot => {\n                    let data = [];\n                    snapshot.forEach(function(doc) {\n                        // doc.data() is never undefined for query doc snapshots\n                        if(!followingList.includes(doc.id)){\n                            data.push({id: doc.id, opponent: doc.data()})\n                        }\n                    });\n                    setUsers(data);\n                })\n        }else{\n             return db.collection(\"users\")\n                .where(firebase.firestore.FieldPath.documentId() ,'!=' , userLogged?.uid )\n                .limit(4)\n                 .get().then(snapshot => {\n                    setUsers(snapshot.docs.map(doc => ({\n                        id: doc.id,\n                        opponent: doc.data(),\n                    })));\n                })\n        }\n    }, [loading, authFollowingList?.length])\n\n    return(\n        <Hidden mdDown>\n            <div className=\"app__rightSideBar\">\n                <div className=\"sideBar__container\">\n                    {/* Chat to sasimi */}\n                    <div className=\"trending__container sideBar__containerBlock\">\n                        <div className=\"trending__header bottomDivider padding-10-20\">\n                            <h2>Chat to Sasimi ?</h2>\n                            <IconButton aria-label=\"comment\" >\n                                <SettingsOutlinedIcon />\n                            </IconButton>\n                        </div>\n                        <div className=\"trending__content bottomDivider\">\n                            <div className=\"chat__container\">\n                                {/*<div className=\"chat__content\">*/}\n                                {/*    <div className=\"chat__message false\">*/}\n                                {/*        <div className=\"chat__details\"><span*/}\n                                {/*            className=\"makeStyles-chat-36\">hi broo</span></div>*/}\n                                {/*    </div>*/}\n                                {/*</div>*/}\n                                {/*<div className=\"chat__content\">*/}\n                                {/*    <div className=\"chat__message sender\">*/}\n                                {/*        <div className=\"chat__details\"><span*/}\n                                {/*            className=\"makeStyles-chat-36\">whatsup  asd asd asd asd asd asda sdasd asda sdasd asda dasda sd</span></div>*/}\n                                {/*    </div>*/}\n                                {/*</div>*/}\n                                <div className={classes.wrapper}>\n                                    <div className={classes.none}>\n                                        <CameraIcon\n                                            className={classes.icon}\n                                            size=\"40\"\n                                        />\n                                    </div>\n                                    <h4 style={{paddingBottom: \"10px\"}}>Chat to Sasimi now</h4>\n                                </div>\n                                <div className=\"makeStyles-bottom-20\" />\n                            </div>\n                        </div>\n                        <div role=\"button\" className=\"padding-10-20 show-more right-chat-input\">\n                            <TextField\n                                className=\"right-chat-input__holder\"\n                                placeholder=\"What do you want ?\"\n                                value={chat}\n                                onChange={event => setChat(event.target.value)}\n                                InputProps={{ disableUnderline: true}}\n                                size=\"small\"\n                            />\n                            <Button variant=\"contained\">\n                                Send\n                            </Button>\n                        </div>\n                    </div>\n\n                    {/* Suggest user */}\n                    <div className=\"suggest__container sideBar__containerBlock\">\n                        <div className=\"suggest__header padding-20 bottomDivider\">\n                            <h2>Who to follow</h2>\n                        </div>\n                        {\n                            users ? (users.slice(0,4).map(({id, opponent}) => (\n                                <div key={id} className=\"suggest__content  bottomDivider\">\n                                    <CardHeader\n                                        className=\"suggest__user\"\n                                        avatar={\n                                            <Avatar className={classes.avatar} aria-label={opponent.displayName} src={opponent.photoURL} />\n                                        }\n                                        title={\n                                            <Link to={`profile/${id}`}>{opponent.displayName}</Link>\n                                        }\n                                        subheader={opponent.fullName}\n                                    />\n                                    <Button\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        className=\"followBtn\"\n                                        onClick={() => handleUserFollow(userLoggedData, opponent.uid)}\n                                    >\n                                        Follow\n                                    </Button>\n                                </div>\n                            ))) : (\n                                <>\n                                    <div className={classes.root}>\n                                        <Skeleton variant=\"rect\" height={300} />\n                                    </div>\n                                </>\n                            )\n                        }\n\n                        <div role=\"button\" className=\"padding-20 show-more\">\n                            <Link to=\"/explore/people\">\n                                <span className=\"\" style={{fontSize: \"1.2rem\"}}>Show more</span>\n                            </Link>\n\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </Hidden>\n\n\n    )\n}\n\nexport default RightSideBar;","/home/miizoo/Desktop/ReactJS/livefood/src/views/account/EditAccountPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/ProfileHeader.js",["365","366"],"import React, {useEffect, useState} from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport {Link} from \"react-router-dom\";\nimport {db} from \"../../firebase\";\nimport {handleUserFollow, handleUserUnfollow} from \"../../hooks/services\";\nimport AccessTimeRoundedIcon from '@material-ui/icons/AccessTimeRounded';\nimport { blue } from '@material-ui/core/colors';\nimport firebase from \"firebase\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListUserInProfile from \"../Popup/ListUserInProfile\";\nimport LocationOnRoundedIcon from '@material-ui/icons/LocationOnRounded';\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport MapRoundedIcon from '@material-ui/icons/MapRounded';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        borderRadius: \"16px\",\n    },\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    userPhoto: {\n        width: \"120px\",\n        height: \"120px\",\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    bioDetails: {\n        marginLeft: \"50px\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        display: \"flex\",\n        alignItems: \"center\"\n    },\n    bioAvt: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        display: \"flex\",\n        alignItems: \"flex-start\",\n        paddingTop: \"10px\"\n    },\n    button: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: \"150px\",\n        color: \"white\",\n        backgroundColor: \"#0095f6\",\n        \"&:hover\": {\n            backgroundColor: \"#0186db\",\n        },\n        marginRight: \"15px\",\n        textTransform: \"capitalize\"\n    },\n    buttonUnfollow: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: \"150px\",\n        color: \"#454444\",\n        // \"&:hover\": {\n        //     backgroundColor: \"#c3d6fa\",\n        // },\n        marginRight: \"15px\",\n        textTransform: \"capitalize\"\n    },\n    displayName: {\n        maxWidth: \"120px\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        display: \"inline-block\"\n    },\n    opening: {\n        display: \"flex\",\n        alignItems: \"center\",\n        color: \"#65676B\",\n    },\n    about: {\n        padding: \"20px 0\",\n        display: \"flex\",\n        gap: \"20px\"\n    }\n}));\n\n\nconst ProfileHeader = ({isAuthProfile, userSnapshot, count, userLogged,  ...rest}) => {\n    const classes = useStyles();\n    const [userFollowing, setUserFollowing] = useState([]);\n    const [userFollower, setUserFollower] = useState([]);\n    const [openFollower, setOpenFollower] = useState(false);\n    const [openFollowing, setOpenFollowing] = useState(false);\n\n    const [authData] = useDocument(userLogged.uid && db.collection('users').doc(userLogged.uid));\n    const authFollowingList = authData?.data()?.following;\n    const [userLoggedData, setUserLoggedData] = useState({});\n\n\n    const handleOpenFollower = () => {\n        setOpenFollower(true);\n    }\n\n    const handleCloseFollower = () => {\n        setOpenFollower(false);\n    }\n\n    const handleOpenFollowing = () => {\n        setOpenFollowing(true);\n    }\n\n    const handleCloseFollowing = () => {\n        setOpenFollowing(false);\n    }\n\n    const handleLoadMore = (type, length) => {\n        if(type === `1`){\n            return db.collection(\"users\")\n                .where(firebase.firestore.FieldPath.documentId(), 'in', userSnapshot.following.slice(length,length+9))\n                .get().then(snapshot => {\n                    const temp = snapshot.docs.map((doc => ({\n                        id: doc.id,\n                        data: doc.data(),\n                    })))\n\n                    setUserFollowing([...userFollowing, ...temp]);\n                })\n        }\n        else{\n            return db.collection(\"users\")\n                .where(firebase.firestore.FieldPath.documentId(), 'in', userSnapshot.follower.slice(length,length+9))\n                .get().then(snapshot => {\n                    const temp = snapshot.docs.map((doc => ({\n                        id: doc.id,\n                        data: doc.data(),\n                    })))\n\n                    setUserFollower([...userFollower, ...temp]);\n                })\n        }\n    }\n\n    useEffect(() => {\n        if(userLogged){\n            setUserLoggedData({\n                uid: userLogged.uid,\n                photoURL: userLogged.photoURL,\n                displayName: userLogged.displayName\n            })\n        }\n    }, [userLogged])\n\n    // Your data\n    useEffect(() => {\n        if(typeof userSnapshot?.follower !== 'undefined' && userSnapshot?.follower?.length > 0){\n            db.collection(\"users\")\n                .where(firebase.firestore.FieldPath.documentId(), 'in', userSnapshot.follower.slice(0,9))\n                .get().then(snapshot => {\n                setUserFollower(\n                    snapshot.docs.map((doc => ({\n                        id: doc.id,\n                        data: doc.data(),\n                    })))\n                );\n            })\n        }\n        if(typeof userSnapshot?.following !== 'undefined' && userSnapshot?.following?.length > 0){\n\n            db.collection(\"users\")\n                .where(firebase.firestore.FieldPath.documentId(), 'in', userSnapshot.following.slice(0,9))\n                .get().then(snapshot => {\n                setUserFollowing(\n                    snapshot.docs.map((doc => ({\n                        id: doc.id,\n                        data: doc.data(),\n                    })))\n                );\n            })\n        }\n\n    }, [userSnapshot])\n\n\n    return (\n        <div className=\"profile__header\">\n            <div className=\"profile__bio\">\n                <div className={classes.bioAvt}>\n                    {\n                        userSnapshot? (\n                            <Avatar alt={userSnapshot?.displayName} src={userSnapshot?.photoURL} className={classes.userPhoto}/>\n                        ): (\n                            <Skeleton animation=\"wave\" variant=\"circle\" width={120} height={120} />\n                        )\n                    }\n\n                </div>\n                <div className={classes.bioDetails}>\n                    <div className=\"share-title-container\">\n                        {/* User bio */}\n                        <h2 className=\"share-title\">{userSnapshot?.displayName}</h2>\n                        <h1 className=\"share-sub-title\">{userSnapshot?.fullName ?? ''}</h1>\n                        {\n                            userSnapshot?.uid === userLogged.uid ? (\n                                <div className=\"share-follow-container\">\n                                    {/* Checking if followed */}\n                                    <Link to=\"/account/edit\">\n                                        <Button\n                                            variant=\"contained\"\n                                            className={classes.button}\n                                        >\n                                            Edit profile\n                                        </Button>\n                                    </Link>\n                                </div>\n                            ) : (\n                                userLogged ? (\n                                    <div className=\"share-follow-container\">\n                                        {/* Checking if followed */}\n                                        {\n                                            userSnapshot?.follower?.includes(userLogged.uid) ? (\n                                                <Button\n                                                    variant=\"outlined\"\n                                                    className={classes.buttonUnfollow}\n                                                    onClick={() => handleUserUnfollow(userLogged.uid, userSnapshot.uid)}\n                                                >\n                                                    Unfollow\n                                                </Button>\n                                            ) : (\n                                                <Button\n                                                    variant=\"contained\"\n                                                    className={classes.button}\n                                                    onClick={() => handleUserFollow(userLoggedData, userSnapshot.uid)}\n                                                >\n                                                    Follow\n                                                </Button>\n                                            )\n                                        }\n                                        <Button\n                                            variant=\"contained\"\n                                            className={classes.button}\n                                        >\n                                            Message\n                                        </Button>\n                                    </div>\n                                ) : null\n                            )\n                        }\n\n                        {\n                            userSnapshot?.bio ? (\n                                <h2 className=\"share-desc mt10\">\n                                    {userSnapshot.bio}\n                                </h2>\n                            ) : null\n                        }\n\n                        {\n                            userSnapshot?.profileLink ? (\n                                <div className=\"share-links\">\n                                    <a href={userSnapshot.profileLink}>{userSnapshot.profileLink}</a>\n                                </div>\n                            ) : null\n                        }\n\n\n                        {\n                            userSnapshot?.aboutRestaurant ? (\n                                <>\n                                    <Divider />\n                                    <div className={classes.about}>\n                                        {\n                                            userSnapshot?.aboutRestaurant?.opening ? (\n                                                <h4 className={classes.opening}>\n                                                    <AccessTimeRoundedIcon style={{marginRight: \"5px\"}}/>\n                                                    Opening :\n                                                    <span style={{marginLeft: \"5px\"}}>{userSnapshot?.aboutRestaurant?.opening} - {userSnapshot?.aboutRestaurant?.closed}</span>\n                                                </h4>\n                                            ) : null\n                                        }\n                                        {\n                                            userSnapshot?.aboutRestaurant?.location ? (\n                                                <h4 className={classes.opening}>\n                                                    <LocationOnRoundedIcon style={{marginRight: \"5px\"}}/>\n                                                    Location :\n                                                    <span style={{marginLeft: \"5px\"}}>{userSnapshot?.aboutRestaurant?.location}</span>\n                                                </h4>\n                                            ) : null\n                                        }\n                                    </div>\n                                    {\n                                        userSnapshot?.aboutRestaurant?.address ? (\n                                            <h4 className={classes.opening} style={{paddingBottom: \"20px\"}}>\n                                                <MapRoundedIcon style={{marginRight: \"5px\"}}/>\n                                                Address :\n                                                <span style={{marginLeft: \"5px\"}}>{userSnapshot?.aboutRestaurant?.address}</span>\n                                            </h4>\n                                        ) : null\n                                    }\n                                    <Divider />\n                                </>\n\n                            ) : null\n                        }\n\n                        {/* Count info */}\n                        <h2 className=\"count-infos\">\n                            <div className=\"number\"><strong title=\"Likes\">{ count ?? '0'}</strong><span\n                                className=\"unit\">Post</span></div>\n                            <div className=\"number\"><strong title=\"Following\">{userSnapshot?.followingCount ?? \"0\"}</strong><a className=\"unit\" onClick={handleOpenFollowing}>Following</a></div>\n                            <div className=\"number\"><strong title=\"Followers\">{userSnapshot?.followerCount ?? \"0\"}</strong><a className=\"unit\" onClick={handleOpenFollower}>Follower</a></div>\n                        </h2>\n                    </div>\n                </div>\n            </div>\n            {\n                openFollowing ? (\n                    <ListUserInProfile open={openFollowing} handleClose={handleCloseFollowing} data={userFollowing} type={`1`} userLogged={userLogged} authFollowingList={authFollowingList} countUser={userSnapshot?.followingCount} handleLoadMore={handleLoadMore}/>\n                ) : null\n            }\n            {\n                openFollower ? (\n                    <ListUserInProfile open={openFollower} handleClose={handleCloseFollower} data={userFollower} type={`2`} userLogged={userLogged} authFollowingList={authFollowingList} countUser={userSnapshot?.followerCount} handleLoadMore={handleLoadMore}/>\n                ) : null\n            }\n        </div>\n    )\n}\n\nexport default ProfileHeader","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/AccountNavBar.js",["367","368","369"],"import React from \"react\";\nimport NavItem from \"../SideBar/LeftSideBar/NavItem\";\nimport {Button, List, ListItem} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {NavLink as RouterLink} from \"react-router-dom\";\nimport {List as ListIcon, Users as UsersIcon} from \"react-feather\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport {db} from \"../../firebase\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    list: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: \"0\"\n    },\n    item: {\n        display: 'flex',\n        paddingTop: 0,\n        paddingBottom: 0,\n        borderBottom: \"1px solid rgb(235, 238, 240)\",\n\n    },\n    button: {\n        color: theme.palette.text.secondary,\n        fontWeight: theme.typography.fontWeightMedium,\n        justifyContent: 'flex-start',\n        letterSpacing: 0,\n        padding: '10px 15px',\n        textTransform: 'none',\n        width: '100%',\n    },\n    icon: {\n        marginRight: theme.spacing(1),\n        color: \"#050505\"\n    },\n    title: {\n        fontWeight: \"600\",\n        fontSize: \"1rem\",\n        paddingLeft: \"10px\",\n        color: \"#65676B\",\n    },\n    active: {\n        color: theme.palette.primary.main,\n        '& $title': {\n            fontWeight: 600,\n            color: theme.palette.primary.main,\n        },\n        '& $icon': {\n            color: theme.palette.primary.main,\n        }\n    }\n}));\n\n\nconst AccountNavBar = (props) => {\n    const classes = useStyles();\n    const { userLogged } = props;\n\n    const [userData] = useDocument(userLogged.uid && db.collection('users').doc(userLogged.uid));\n    const userSnapshot = userData?.data()\n\n\n\n    return (\n        <List className={classes.list}>\n            <ListItem\n                className={classes.item}\n                disableGutters\n            >\n                <Button\n                    activeClassName={classes.active}\n                    className={classes.button}\n                    component={RouterLink}\n                    to={`/account/edit`}\n                >\n                    <span className={classes.title}>Edit profile</span>\n                </Button>\n            </ListItem>\n            {\n                props.userLogged?.providerData[0]?.providerId === \"password\" ? (\n                    <ListItem\n                        className={classes.item}\n                        disableGutters\n                    >\n                        <Button\n                            activeClassName={classes.active}\n                            className={classes.button}\n                            component={RouterLink}\n                            to={`/account/password/change`}\n                        >\n                    <span className={classes.title}>\n                    Change Password\n                </span>\n                        </Button>\n                    </ListItem>\n                ) : null\n            }\n\n            <ListItem\n                className={classes.item}\n                disableGutters\n            >\n                <Button\n                    activeClassName={classes.active}\n                    className={classes.button}\n                    component={RouterLink}\n                    to={`/account/setting/notifications`}\n                >\n                    <span className={classes.title}>\n                    Notifications\n                </span>\n                </Button>\n            </ListItem>\n\n            {\n                userSnapshot?.accountType === \"foodshop\" ? (\n                    <>\n                        <ListItem\n                            className={classes.item}\n                            disableGutters\n                        >\n                            <Button\n                                activeClassName={classes.active}\n                                className={classes.button}\n                                component={RouterLink}\n                                to={`/account/shop/about`}\n                            >\n                            <span className={classes.title}>\n                                About\n                            </span>\n                            </Button>\n                        </ListItem>\n                        <ListItem\n                            className={classes.item}\n                            disableGutters\n                        >\n                            <Button\n                                activeClassName={classes.active}\n                                className={classes.button}\n                                component={RouterLink}\n                                to={`/account/shop/edit`}\n                            >\n                            <span className={classes.title}>\n                                Restaurant Menu\n                            </span>\n                            </Button>\n                        </ListItem>\n\n                    </>\n                ) : null\n            }\n\n        </List>\n    )\n}\n\nexport default AccountNavBar","/home/miizoo/Desktop/ReactJS/livefood/src/theme/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditAccount.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditPassword.js",["370"],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/ProfileNavBar.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileFeed.js",["371"],"/home/miizoo/Desktop/ReactJS/livefood/src/features/chatSlice.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Sidebar/SidebarChat.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Sidebar/CreateNewChat.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Message.js",["372"],"import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {auth} from \"../../firebase\";\nimport {useSelector} from \"react-redux\";\nimport {selectChatRecipient} from \"../../features/chatSlice\";\nimport TimeAgo from \"timeago-react\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    chat: {\n        color: \"#262626\",\n        overflowWrap: \"break-word\",\n        whiteSpace: \"pre-wrap\",\n        fontSize: \"14px\",\n    },\n    chatTime: {\n        marginLeft: 20,\n        fontSize: \"12px\",\n        color: \"#484848\",\n    }\n}));\n\nconst Message = ({uid, message, timestamp}) => {\n    const recipient = useSelector(selectChatRecipient);\n    const [userLogged] = useAuthState(auth);\n\n    const classes = useStyles();\n\n    return (\n        <div className=\"chat__content\">\n            {/* Retrieve */}\n            <div className={`chat__message ${userLogged.uid === uid && \"sender\"}`}>\n                {\n                    userLogged.uid !== uid && (\n                        <Avatar alt={recipient?.displayName} src={recipient?.photoURL} />\n                    )\n                }\n\n                <div className=\"chat__details\">\n                    <span className={classes.chat}>\n                        {message}\n                    </span>\n                    {\n                        timestamp? (\n                            <span className={classes.chatTime}>\n                                {timestamp?.toDate().toLocaleString()}\n                            </span>\n                        ) : (\n                            <span className={classes.chatTime}>Loading</span>\n                        )\n                    }\n\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Message","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/ChatInput.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/index.js",["373"],"import React, {useEffect, useState} from \"react\";\nimport Upload from \"../Upload\";\nimport Post from \"./Post\";\nimport { db } from \"../../firebase\";\nimport {Compass as CompassIcon} from \"react-feather\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        color: \"#050505\"\n    },\n    wrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        maxHeight: \"300px\",\n        width: \"100%\"\n    },\n    none: {\n        width: \"100px\",\n        height: \"100px\",\n        borderColor: \"#262626\",\n        borderWidth: \"2px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderStyle: \"solid\",\n        borderRadius: \"50%\",\n        margin: \"50px 0 20px 0\"\n    }\n}));\n\nexport default function NewFeed(props){\n    const classes = useStyles();\n    const {userLogged} = props;\n    const [posts, setPosts] = useState([]);\n    const userRef = userLogged && db.collection('users').doc(userLogged.uid);\n    const [userSnapshot] = useDocument(userRef);\n\n    let userFollow = userSnapshot?.data()?.following;\n\n    //Get post\n    useEffect( () => {\n        if(typeof userFollow !== 'undefined' && userFollow.length > 0){\n            userFollow.push(userLogged.uid);\n            const unsubscribe = db.collection('posts')\n                .orderBy('timestamp', \"desc\")\n                .limit(10)\n                .onSnapshot((snapshot) => {\n                    var data = [];\n                    snapshot.forEach((doc) => {\n                        if(userFollow.includes(doc.data().uid)){\n                            data.push({id: doc.id, post: doc.data()})\n                        }\n                    })\n                    setPosts(data);\n                })\n            return () => {\n                unsubscribe();\n            }\n        }\n        else{\n            const unsubscribe = db.collection('posts')\n                .where('uid', '==', userLogged.uid)\n                .orderBy('timestamp', \"desc\")\n                .limit(10)\n                .onSnapshot( snapshot => {\n                    setPosts(snapshot.docs.map(doc => ({\n                        id: doc.id,\n                        post: doc.data(),\n                    })));\n                })\n\n            return () => {\n                unsubscribe();\n            }\n        }\n    }, [userFollow?.length, userLogged?.uid]);\n\n\n    function handleRemove(id) {\n        const newList = posts.filter((item) => item.id !== id);\n        setPosts(newList);\n    }\n\n\n    return(\n        <div className=\"app__post\">\n            {\n                userLogged ? (\n                    <Upload userLogged={userLogged}/>\n                ) : null\n            }\n            {\n                posts?.length > 0 ? (\n                    posts.map(({id, post, postAuthor }) => (\n                        <Post\n                            key={id}\n                            id={id}\n                            post={post}\n                            userLogged={userLogged}\n                            handleRemove={() => handleRemove(id)}\n                        />\n                    ))\n                ) : (\n                    <div className={classes.wrapper}>\n                        <div className={classes.none}>\n                            <CompassIcon\n                                className={classes.icon}\n                                size=\"40\"\n                            />\n                        </div>\n                        <h2 style={{paddingBottom: \"10px\"}}>Start Explore Yourself</h2>\n                        <p style={{paddingBottom: \"20px\"}}>Or just creating your own post.</p>\n\n                        <Link to=\"/explore\">\n                            <Button\n                                style={{textTransform: \"capitalize\", fontSize: \"16px\"}}\n                                color=\"primary\"\n                                variant=\"contained\"\n                            >\n                                Explore\n                            </Button>\n                        </Link>\n\n                    </div>\n                )\n            }\n        </div>\n    )\n}","/home/miizoo/Desktop/ReactJS/livefood/src/views/SinglePage.js",["374","375"],"import React, {useEffect, useState} from \"react\";\nimport Page from \"../components/Page\";\n// import {makeStyles} from \"@material-ui/core/styles\";\nimport RightSideBar from \"../components/SideBar/RightSideBar\";\nimport Post from \"../components/Posts/Post\";\nimport NavBar from \"../components/SideBar/LeftSideBar\";\nimport {db} from \"../firebase\";\nimport {useParams} from \"react-router\";\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport pic from \"../images/Background/undraw_page_not_found_su7k.svg\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    wrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        maxHeight: \"300px\",\n        width: \"100%\"\n    },\n    redirect: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        textAlign: \"center\",\n        paddingTop: \"20px\"\n    },\n    details: {\n        padding: \"20px 0\"\n    },\n    title: {\n        color: \"#ffffff\",\n    },\n    img: {\n        width: \"320px\",\n        display: \"inline-block\",\n        maxWidth: \"100%\",\n        marginTop: \"50px\"\n    },\n    imgHolder: {\n        textAlign: \"center\"\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\n\nconst SinglePage = (props) => {\n    const classes = useStyles();\n    let { id } = useParams();\n    const [postSnapshot, loading] = useDocument(db.collection(\"posts\").doc(id));\n\n\n    return (\n        <Page\n            title=\"LiveFood\"\n            className=\"app__bodyContainer\"\n        >\n            <NavBar userLogged={props.userLogged}/>\n            <div className=\"app__post\">\n                {\n                    loading ? (\n                        <Backdrop className={classes.backdrop} open={loading} >\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n                    ) : (\n                        postSnapshot?.data() ? (\n                            <Post\n                                key={postSnapshot.id}\n                                id={postSnapshot.id}\n                                post={postSnapshot.data()}\n                                isSinglePage={true}\n                            />\n                        ) : (\n                            <>\n                                <div className={classes.wrapper}>\n                                    <div className={classes.imgHolder}>\n                                        <img src={pic} alt=\"404\" className={classes.img}/>\n                                    </div>\n                                    <div className={classes.details}>\n                                        <h1>This page doesn’t exist</h1>\n                                        <p>Please check your URL or return to LiveFood home.</p>\n                                    </div>\n                                </div>\n                            </>\n                        )\n                    )\n                }\n\n\n            </div>\n            {\n                props.userLogged ? (\n                    <RightSideBar userLogged={props.userLogged}/>\n                ) : null\n            }\n        </Page>\n    )\n}\n\nexport default SinglePage;","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileVids.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileSaved.js",["376"],"import React, {useEffect, useState} from \"react\";\n// import {useAuthState} from \"react-firebase-hooks/auth\";\n// import {db} from \"../../../firebase\";\nimport {Bookmark as BookmarkIcon} from \"react-feather\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {db} from \"../../../firebase\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport firebase from \"firebase\";\nimport ExploreItem from \"../../Explore/ExploreItem\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        color: \"#050505\"\n    },\n    wrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        maxHeight: \"300px\",\n        width: \"100%\"\n    },\n    none: {\n        width: \"100px\",\n        height: \"100px\",\n        borderColor: \"#262626\",\n        borderWidth: \"2px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderStyle: \"solid\",\n        borderRadius: \"50%\",\n        margin: \"50px 0 20px 0\"\n    }\n\n}));\n\nconst ProfileSaved = ({uid, userLogged}) => {\n    const classes = useStyles();\n    const [savedPost, setSavedPost] = useState([]);\n\n    const userRef = db.collection('users').doc(uid);\n    const [userSnapshot] = useDocument(userRef);\n\n    let userSavedList = userSnapshot?.data()?.postSave;\n\n    useEffect(() => {\n        window.scroll({top: 0, left: 0, behavior: 'smooth' });\n\n        if(typeof userSavedList !== 'undefined'){\n            if(userSavedList.length > 0){\n                db.collection('posts')\n                    .where(firebase.firestore.FieldPath.documentId(), 'in', userSavedList)\n                    .limit(12)\n                    .get().then(async snapshot => {\n                        let temp = []\n                        snapshot.forEach(data => {\n                            var userProfile = {};\n                            data.data().user.get().then( author => {\n                                Object.assign(userProfile, author.data());\n                            })\n                            temp.push({id: data.id, post: data.data(), authorProfile: userProfile })\n                        })\n                        setSavedPost(temp);\n                    })\n            }\n        }\n    }, [userSavedList?.length]);\n\n    return(\n        <div className=\"explore__root\" style={{paddingTop: \"20px\"}}>\n\n                {\n                    savedPost.length > 0 ? (\n                        <div className=\"explore__container\" style={{padding: \"0\"}}>\n                            {\n                                savedPost.map(({id, post, authorProfile}) => (\n                                    <ExploreItem\n                                        key={id}\n                                        postId={id}\n                                        post={post}\n                                        postAuthor={authorProfile}\n                                        userLogged={userLogged}\n                                    />\n                                ))\n                            }\n                        </div>\n                    ) : (\n                        <div className={classes.wrapper}>\n                            <div className={classes.none}>\n                                <BookmarkIcon\n                                    className={classes.icon}\n                                    size=\"40\"\n                                />\n                            </div>\n                            <h2 style={{paddingBottom: \"10px\"}}>Start Saving</h2>\n                            <p>Save photos and videos to your collection.</p>\n                        </div>\n                    )\n                }\n\n        </div>\n    )\n}\n\nexport default ProfileSaved","/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExplorePage.js",["377"],"/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExplorePeoplePage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExploreVideoPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Post.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditShop.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/hooks/getRecipientUser.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/hooks/services.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Action.js",["378"],"import React, {useEffect, useState} from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from 'prop-types';\nimport {handleDislikePost, handleLikePost, handleSavePost, handleUnSavedPost} from \"../../hooks/services\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {ToggleButton} from \"@material-ui/lab\";\nimport FavoriteRoundedIcon from \"@material-ui/icons/FavoriteRounded\";\nimport FavoriteBorderTwoToneIcon from \"@material-ui/icons/FavoriteBorderTwoTone\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ModeCommentOutlinedIcon from \"@material-ui/icons/ModeCommentOutlined\";\nimport BookmarkRoundedIcon from \"@material-ui/icons/BookmarkRounded\";\nimport BookmarkBorderOutlinedIcon from \"@material-ui/icons/BookmarkBorderOutlined\";\n\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport ListUserLikePost from \"../Popup/ListUserLikePost\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    action: {\n        borderTop: \"1px solid rgba(var(--b6a,219,219,219),1)\",\n        justifyContent: \"space-between\"\n    },\n    actionButton: {\n        border: \"0\",\n        backgroundColor: \"none\",\n        borderRadius: \"50%\",\n        color: \"rgba(0, 0, 0, 0.54)\",\n        '&:hover': {\n            color: 'black',\n        }\n    },\n    selected: {\n        backgroundColor: \"unset !important\"\n    },\n    displayLike: {\n        padding: \"0 0 20px 20px\",\n        borderBottom: \"1px solid rgba(var(--b6a,219,219,219),1)\"\n    },\n    likesCount: {\n        cursor: \"pointer\",\n        '&:hover': {\n            textDecoration: \"underline\",\n        }\n    }\n\n\n}));\n\n\n\nexport default function PostAction({postId, post, expanded, setExpanded, handleFocus, userLogged}){\n    const classes = useStyles();\n    const [selected, setSelected] = useState(false);\n    const [saveSelected, setSaveSelected] = useState(false);\n    const [openLikesList, setOpenLikesList] = useState(false);\n    const [userLoggedData, setUserLoggedData] = useState({});\n\n    useEffect(() => {\n        if(userLogged){\n            setUserLoggedData({\n                uid: userLogged.uid,\n                photoURL: userLogged.photoURL,\n                displayName: userLogged.displayName\n            })\n        }\n    }, [userLogged])\n\n    const handleOpenLikesList = () => {\n        setOpenLikesList(true);\n    }\n\n    const handleCloseLikesList = () => {\n        setOpenLikesList(false);\n    }\n\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    // Handle like and dislike action\n    const likePost = () => {\n        setSelected(true);\n        handleLikePost(postId, userLoggedData, post.uid)\n    }\n\n    const dislikePost = () => {\n        setSelected(false);\n        handleDislikePost(postId, userLogged.uid)\n    }\n\n    const savePost = () => {\n        // Save post id to user data, and push to post data\n        setSaveSelected(true);\n        handleSavePost(postId, userLogged.uid);\n    }\n\n    const unsavedPost = () => {\n        // Save post id to user data, and push to post data\n        setSaveSelected(false);\n        handleUnSavedPost(postId, userLogged.uid);\n    }\n\n    useEffect(() => {\n        if(typeof post?.likeBy !== 'undefined' && post?.likeBy?.includes(userLogged.uid)){\n            setSelected(true);\n        }\n\n        if(typeof post?.saveBy !== 'undefined' && post?.saveBy?.includes(userLogged.uid)){\n            setSaveSelected(true);\n        }\n    }, [post?.likeBy, post?.saveBy, userLogged.uid])\n\n\n    return(\n        <>\n            <CardActions disableSpacing className={classes.action}>\n                <div className=\"post__button\">\n                    <div className=\"action__like\">\n                        <ToggleButton\n                            value=\"check\"\n                            selected={selected}\n                            // className={classes.likeButton}\n                            classes={{\n                                root: classes.actionButton,\n                                selected: classes.selected,\n                            }}\n                            onClick={() => {\n                                if(!selected) likePost();\n                                else dislikePost();\n                            }}\n                        >\n                            {\n                                selected ? <FavoriteRoundedIcon style={{color: \"red\"}}/> : <FavoriteBorderTwoToneIcon />\n                            }\n                        </ToggleButton>\n                    </div>\n                    <div className=\"action__comment\">\n                        <IconButton aria-label=\"comment\" onClick={handleFocus}>\n                            <ModeCommentOutlinedIcon/>\n                        </IconButton>\n                    </div>\n                    <div className=\"action__share\">\n                        <ToggleButton\n                            value=\"check\"\n                            selected={saveSelected}\n                            // className={classes.likeButton}\n                            classes={{\n                                root: classes.actionButton,\n                                selected: classes.selected,\n                            }}\n                            onClick={() => {\n                                if(!saveSelected) savePost();\n                                else unsavedPost();\n                            }}\n                        >\n                            {\n                                saveSelected ? <BookmarkRoundedIcon style={{color: \"black\"}}/> : <BookmarkBorderOutlinedIcon />\n                            }\n                        </ToggleButton>\n                        {/*<IconButton aria-label=\"share\">*/}\n                        {/*\t<BookmarkBorderOutlinedIcon />*/}\n                        {/*</IconButton>*/}\n                    </div>\n                </div>\n                {\n                     post?.data ? (\n                        <div className=\"action__expand\">\n                            <IconButton\n                                className={clsx(classes.expand, {\n                                    [classes.expandOpen]: expanded,\n                                })}\n                                onClick={handleExpandClick}\n                                aria-expanded={expanded}\n                                aria-label=\"show more\"\n                            >\n                                <ExpandMoreIcon />\n                            </IconButton>\n                        </div>\n                    ) : null\n                }\n            </CardActions>\n\n            {\n                post?.likeCount > 0 ? (\n                    <div className={classes.displayLike}>\n                        <span className={classes.likesCount} onClick={handleOpenLikesList}><b>{post?.likeCount?.toLocaleString()} {post?.likeCount === 1 ? 'Like' : 'Likes'}</b></span>\n                    </div>\n                ) : null\n            }\n\n            {\n                openLikesList ? (\n                    <ListUserLikePost open={openLikesList} handleClose={handleCloseLikesList} userLogged={userLogged} postLike={post?.likeBy} likesCount={post?.likeCount}/>\n                ) : null\n            }\n        </>\n    )\n}\n\n// PostAction.propTypes = {\n//     postId: PropTypes.string.isRequired,\n//     uid: PropTypes.string.isRequired,\n//     postLike: PropTypes.array,\n//     postSave: PropTypes.array,\n// };","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Content.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Header.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/RecipeData.js",["379","380"],"import React from \"react\";\nimport {CardContent, Collapse} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport {Rating} from \"@material-ui/lab\";\nimport LocalPrintshopRoundedIcon from '@material-ui/icons/LocalPrintshopRounded';\nimport {Link} from \"react-router-dom\";\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    paragraph: {\n        lineHeight: \"26px\",\n        textAlign: \"justify\",\n        whiteSpace: \"pre-line\",\n        fontSize: \"14px\"\n    },\n    paragraphHead: {\n        fontWeight: \"600\",\n        fontSize: \"1rem\",\n        marginBottom: \"10px\",\n        padding: \"5px 0\",\n        textTransform: \"uppercase\",\n        borderBottom : \"1px solid #000\"\n    }\n}));\n\n\nexport default function PostRecipeData({postId, postData, expanded, rating}){\n    const classes = useStyles();\n\n    return(\n        <>\n            {\n                !!postData ? (\n                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit >\n                        <div className=\"recipe_layout\">\n                            <CardContent className=\"recipe_layout__content-left\">\n                                {\n                                    rating ? (\n                                        <Typography paragraph className={classes.paragraphHead} style={{display: \"flex\", lineHeight: \"30px\"}}>Rating:\n                                            <Rating style={{marginLeft: \"5px\"}} name=\"read-only\" value={rating} precision={0.1} readOnly />\n                                        </Typography>\n                                    ) : null\n                                }\n\n                                <div className=\"recipe_layout__facts\">\n                                    <div className=\"recipe-facts__info\">\n                                        <div className=\"recipe-facts__details recipe-facts__prepare\"><span\n                                            className=\"recipe-facts__title\">Prepare in:</span> <span>{postData?.prepTime} {postData?.prepUnit}</span></div>\n                                        <div className=\"recipe-facts__details recipe-facts__cooking\"><span\n                                            className=\"recipe-facts__title\">Cook in:</span> <a\n                                            className=\"theme-color\">{postData?.cookTime} {postData?.cookUnit}</a></div>\n                                    </div>\n                                    <div className=\"recipe-facts__info\">\n                                        <div className=\"recipe-facts__details recipe-facts__servings\"><span\n                                            className=\"recipe-facts__title\">Serves:</span> <a\n                                            className=\"theme-color\">{postData?.serve}</a></div>\n                                    </div>\n                                </div>\n                                <Typography paragraph className={classes.paragraphHead} >Category: <Link style={{textDecoration: \"underline\"}} to={`/recipe/topic/${postData?.category?.toLowerCase()}`}>{postData?.category}</Link></Typography>\n                                <Typography paragraph className={classes.paragraphHead}>Ingredients:</Typography>\n                                <Typography paragraph className={classes.paragraph}>{postData?.ingredient}</Typography>\n                            </CardContent>\n                            <CardContent className=\"recipe_layout__content-right\">\n                                <Typography paragraph className={classes.paragraphHead}>Direction:</Typography>\n                                <Typography paragraph className={classes.paragraph}>{postData?.direction}</Typography>\n                                <Typography\n                                    paragraph\n                                    className={classes.paragraphHead}\n                                    style={{display: \"flex\", gap: \"5px\"}}\n                                >\n                                    <LocalPrintshopRoundedIcon />Print Recipe\n                                </Typography>\n                            </CardContent>\n                        </div>\n                        <Divider />\n                    </Collapse>\n                ) : null\n            }\n        </>\n    )\n}\n\n\nPostRecipeData.propTypes = {\n    postId: PropTypes.string,\n    postData: PropTypes.object,\n    expanded: PropTypes.bool,\n    rating: PropTypes.number\n};","/home/miizoo/Desktop/ReactJS/livefood/src/components/MediaViewer/Preview.js",["381","382","383","384","385","386","387"],"import React, {useEffect, useState} from \"react\";\nimport {Button, CardContent, Collapse, IconButton, Modal, TextField} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction getModalStyle() {\n    const top = 50 ;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        fontSize: \"0.875rem\"\n    },\n    paper: {\n        position: 'absolute',\n        maxWidth: 950,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        \"&:focus\": {\n            outline: \"none\"\n        },\n        maxHeight: \"600px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        overflow: \"hidden\",\n        borderRadius: \"16px\"\n    },\n    imgHolder: {\n        width: \"600px\",\n        position: \"relative\",\n        overflow : \"hidden\",\n        backgroundColor: \"rgb(232, 231, 224)\",\n        maxHeight: \"490px\"\n    },\n    img: {\n        objectFit: \"contain\",\n        height: \"100%\",\n        width: \"100%\",\n    },\n    details: {\n        backgroundColor: \"rgba(0,0,0,.8)\",\n        color: \"#fff\",\n        padding: \"20px\",\n        minHeight: \"\"\n    }\n}));\n\nfunction Previewer({data, open, handleClose}){\n    const classes = useStyles();\n    const [modalStyle] = useState(getModalStyle);\n\n\n    return (\n        <Modal\n            className={classes.root}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n        >\n            <div style={modalStyle} className={classes.paper}>\n                <div className={classes.imgHolder}>\n                    <img src={data?.mediaUrl} alt=\"\" className={classes.img}/>\n                </div>\n                <div className={classes.details}>\n                    <h2 id=\"simple-modal-title\">{data?.dishName}</h2>\n                    <p id=\"simple-modal-description\" style={{fontWeight: \"bold\", paddingTop: \"10px\"}}>\n                        {new Intl.NumberFormat().format(data?.price)} đ\n                    </p>\n                </div>\n            </div>\n        </Modal>\n    )\n}\nexport default Previewer","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileMenuList.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/Popup.js",["388"],"import React, {useEffect, useState} from \"react\";\nimport {Avatar, Badge, Button, CircularProgress, IconButton, Modal, TextField, Tooltip} from \"@material-ui/core\";\nimport CancelTwoToneIcon from \"@material-ui/icons/CancelTwoTone\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport PhotoCameraTwoToneIcon from \"@material-ui/icons/PhotoCameraTwoTone\";\nimport VideoCallTwoToneIcon from \"@material-ui/icons/VideoCallTwoTone\";\nimport LocationOnTwoToneIcon from '@material-ui/icons/LocationOnTwoTone';\nimport {auth, db, storage} from \"../../firebase\";\nimport firebase from \"firebase\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {green} from \"@material-ui/core/colors\";\nimport {v4 as uuidv4} from \"uuid\";\n// import {useCollection} from \"react-firebase-hooks/firestore\";\n\nfunction getModalStyle() {\n    const top = 50 ;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n    divider: {\n        height: 1,\n        width: \"50%\",\n        background: \"#39CCCC\",\n        margin: \"15px auto\"\n    },\n    input: {\n        display: \"none\"\n    },\n    label: {\n        paddingLeft: \"10px\"\n    },\n    paper: {\n        position: 'absolute',\n        width: 600,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 3, 3),\n        borderRadius: \"16px\",\n        maxHeight: \"calc(100vh - 70px)\",\n        \"&:focus\": {\n            outline: \"none\"\n        },\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    modalHeader: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"10px 0 20px 0\",\n        borderBottom: \"1px solid #39CCCC\"\n    },\n    buttonClose: {\n        position: \"fixed\",\n        right: \"20px\",\n        top: \"17px\"\n    },\n    username: {\n        fontSize: \"16px\",\n        fontWeight: \"bold\"\n    },\n    avatar: {\n        width: 50,\n        height: 50\n    },\n    cardHeader: {\n        padding: \"16px 0\"\n    },\n    reviewImg: {\n        width: \"100%\",\n        objectFit: \"contain\",\n        boxShadow: \"0px 0px 2px 0px rgba(21,12,12,0.9)\",\n        borderRadius: \"max(0px, min(8px, calc((100vw - 4px - 100%) * 9999))) / 8px\"\n    },\n    inputText: {\n        width: \"100%\",\n        padding: \"10px 0\",\n        minHeight: \"100px\",\n        fontFamily: \"'Quicksand', sans-serif\"\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    buttonDisable: {\n        color: \"#bcc0c4 !important\",\n        backgroundColor : \"#e4e6eb !important\"\n    },\n    buttonRemove: {\n        position: \"absolute\",\n        top: \"0px\",\n        right: \"0\"\n    }\n}));\n\n\n\nfunction Popup(props){\n    const [user] = useAuthState(auth);\n    const classes = useStyles();\n    const [modalStyle] = useState(getModalStyle);\n    const [caption, setCaption] = useState('');\n    const [progress, setProgress] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [disable, setDisable] = useState(true);\n\n\n    const removeImage = () => {\n        props.setImage('');\n    }\n\n\n    // const [post] = useCollection()\n    let media;\n    if(props.image){\n        if(props.image.type === \"video/mp4\" ){\n\n            media =\n                <>\n                    <video controls className={classes.reviewImg} muted=\"muted\">\n                        <source src={window.URL.createObjectURL(props.image)} type=\"video/mp4\"/>\n                    </video>\n                    <div className={classes.buttonRemove}>\n                        <IconButton aria-label=\"Cancel\" color=\"inherit\" onClick={removeImage} >\n                            <CancelTwoToneIcon />\n                        </IconButton>\n                    </div>\n                </>\n        } else {\n            media =\n                <>\n                    <img className={classes.reviewImg} src={window.URL.createObjectURL(props.image)} alt=\"\" />\n                    <div className={classes.buttonRemove}>\n                        <IconButton aria-label=\"Cancel\" color=\"inherit\" onClick={removeImage} >\n                            <CancelTwoToneIcon />\n                        </IconButton>\n                    </div>\n                </>\n\n        }\n    }\n\n\n    const handleUpload = () => {\n        if(props.image) {\n            const imageName = uuidv4();\n            const uploadTask = storage.ref(`media/${user.uid}/${imageName}`).put(props.image);\n            uploadTask.on(\n                \"state_changed\",\n                (snapshot => {\n                    const progressData = Math.round(\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                    );\n                    setProgress(progressData);\n                    setLoading(true);\n                }),\n                (error => {\n                    console.log(error);\n                }),\n                () => {\n                    storage\n                        .ref(`media/${user.uid}/`)\n                        .child(imageName)\n                        .getDownloadURL()\n                        .then(url => {\n                            db.collection(\"posts\").add({\n                                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                                hasImage: true,\n                                caption: caption,\n                                mediaUrl: url,\n                                user: db.doc('users/' + user.uid),\n                                mediaType: props.image.type,\n                                uid: user.uid\n                            })\n                                .then(function(docRef) {\n                                    console.log(\"Document written with ID: \", docRef.id);\n                                    db.collection(\"users\").doc(user.uid).update({\n                                        post: firebase.firestore.FieldValue.arrayUnion(docRef.id)\n                                    })\n                                })\n                                .catch(function(error) {\n                                    console.error(\"Error adding document: \", error);\n                                });\n                            props.setOpenSnack(true);\n                            props.setImage(null);\n                            props.handleClose(true);\n                            setProgress('0');\n                            setCaption(\"\");\n                            setLoading(false);\n                        })\n                }\n            )\n        }\n    }\n\n\n    useEffect(() => {\n        if(caption.length > 0 && props.image){\n            setDisable(false);\n        }else {\n            setDisable(true)\n        }\n    },[caption, caption.length, props.image])\n\n\n    return (\n        <Modal\n            open={props.open}\n            onClose={props.handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n        >\n            <div style={modalStyle} className={classes.paper}>\n                <div className={classes.modalHeader}>\n                    <h2>What's on your mind ?</h2>\n                    <div className={classes.buttonClose}>\n                        <IconButton aria-label=\"Cancel\" color=\"inherit\" onClick={props.handleClose} >\n                            <CancelTwoToneIcon />\n                        </IconButton>\n                    </div>\n                </div>\n                <div className=\"popup__caption\">\n                    <CardHeader\n                        avatar={\n                            <Avatar aria-label=\"recipe\" className={classes.avatar} src={user?.photoURL}/>\n                        }\n                        title={\n                            <span className={classes.username}>{user?.displayName}</span>\n                        }\n                        subheader={\n                            <span>Public</span>\n                        }\n                        className={classes.cardHeader}\n                    />\n\n                    <div className=\"popup__text\">\n                        <TextField\n                            className={classes.inputText}\n                            multiline\n                            placeholder=\"What's on your mind ... \"\n                            value={caption}\n                            onChange={event => setCaption(event.target.value)}\n                            InputProps={{ disableUnderline: true, style : {fontSize: \"1rem\"}}}\n                        />\n                    </div>\n                    {\n                        props.image ? (\n                            <div className=\"popup__review\">\n                                {media}\n                            </div>\n                        ) : null\n                    }\n\n                </div>\n                <div className=\"popup__picker\">\n                    <h3 style={{textTransform: \"inherit\", fontSize: \"1rem\", letterSpacing: \"0\"}}>Add to this post </h3>\n                    <div className=\"popup__iconPicker\">\n\n                        <div>\n                            <label htmlFor=\"icon-button-file\" className=\"upload__pickerButton\">\n                                <IconButton color=\"inherit\" component=\"span\" >\n                                    <Badge color=\"secondary\">\n                                        <PhotoCameraTwoToneIcon className={classes.popIcon}/>\n                                    </Badge>\n                                </IconButton>\n                            </label>\n                        </div>\n                        <div>\n                            <Tooltip title=\"Location\">\n                                <IconButton color=\"inherit\" component=\"span\">\n                                    <Badge color=\"secondary\">\n                                        <LocationOnTwoToneIcon className={classes.popIcon}/>\n                                    </Badge>\n                                </IconButton>\n                            </Tooltip>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"upload__button\">\n                    <Button\n                        classes={{\n                            disabled: classes.buttonDisable\n                        }}\n                        type=\"submit\"\n                        onClick={handleUpload}\n                        disabled={disable}\n                    >\n                        POST\n                    </Button>\n                    {loading && <CircularProgress size={24} value={parseInt(progress)} className={classes.buttonProgress} /> }\n                </div>\n\n            </div>\n        </Modal>\n    )\n}\nexport default Popup","/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/AddDishes.js",["389"],"import React, {useEffect, useState} from \"react\";\nimport {\n    Badge,\n    Button,\n    CircularProgress,\n    IconButton,\n    Modal,\n    TextField\n} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport CancelTwoToneIcon from \"@material-ui/icons/CancelTwoTone\";\nimport PhotoCameraTwoToneIcon from \"@material-ui/icons/PhotoCameraTwoTone\";\nimport {green} from \"@material-ui/core/colors\";\nimport {db, storage} from \"../../firebase\";\nimport firebase from \"firebase\";\nimport NumberFormat from 'react-number-format';\n\nfunction getModalStyle() {\n    const top = 50 ;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        fontSize: \"0.875rem\"\n    },\n    paper: {\n        position: 'absolute',\n        width: 600,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 3, 3),\n        borderRadius: \"16px\",\n        maxHeight: \"calc(100vh - 70px)\",\n        \"&:focus\": {\n            outline: \"none\"\n        },\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    modalHeader: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"10px 0 20px 0\",\n        borderBottom: \"1px solid #39CCCC\"\n    },\n    buttonClose: {\n        position: \"fixed\",\n        right: \"20px\",\n        top: \"17px\"\n    },\n    buttonDisable: {\n        color: \"#bcc0c4 !important\",\n        backgroundColor : \"#e4e6eb !important\"\n    },\n    input: {\n        display: \"none\"\n    },\n    reviewImg: {\n        width: \"100%\",\n        objectFit: \"contain\",\n        boxShadow: \"0px 0px 2px 0px rgba(21,12,12,0.9)\",\n        borderRadius: \"max(0px, min(8px, calc((100vw - 4px - 100%) * 9999))) / 8px\"\n    },\n    inputText: {\n        width: \"100%\",\n        padding: \"10px 0\",\n        minHeight: \"100px\",\n        fontFamily: \"'Quicksand', sans-serif\"\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    buttonRemove: {\n        position: \"absolute\",\n        top: \"0px\",\n        right: \"0\"\n    },\n    value: {\n        display: \"flex\",\n        padding: \"20px 0\"\n    }\n}));\n\nfunction NumberFormatCustom(props) {\n    const { inputRef, onChange, ...other } = props;\n\n    return (\n        <NumberFormat\n            {...other}\n            getInputRef={inputRef}\n            onValueChange={(values) => {\n                onChange({\n                    target: {\n                        name: props.name,\n                        value: values.value,\n                    },\n                });\n            }}\n            thousandSeparator\n            isNumericString\n        />\n    );\n}\n\n\n\nfunction AddDishes({open, handleClose, setOpenSnack, userLogged}){\n    const classes = useStyles();\n    const [modalStyle] = useState(getModalStyle);\n    const [dishName, setDishName] = useState('');\n    const [dishImg, setDishImg] = useState('');\n    const [price, setPrice] = useState('');\n    const [disable, setDisable] = useState(true);\n    const [loading, setLoading] = useState(false);\n    const [progress, setProgress] = useState(0);\n\n\n    // const [values, setValues] = React.useState(0);\n\n    const handleChangePrice = (event) => {\n        setPrice(event.target.value);\n    };\n    // console.log(new Intl.NumberFormat().format(price))\n\n    const handleUpload = () => {\n        const imageName = Math.floor(Date.now()).toString()+dishImg.name;\n        const uploadTask = storage.ref(`media/${userLogged.uid}/${imageName}`).put(dishImg);\n        uploadTask.on(\n            \"state_changed\",\n            (snapshot => {\n                const progressData = Math.round(\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                );\n                setProgress(progressData);\n                setLoading(true);\n            }),\n            (error => {\n                console.log(error);\n            }),\n            () => {\n                storage\n                    .ref(`media/${userLogged.uid}/`)\n                    .child(imageName)\n                    .getDownloadURL()\n                    .then(url => {\n                        db.collection(\"users\").doc(userLogged.uid).collection(\"menu\").add({\n                            price: price,\n                            dishName: dishName,\n                            mediaUrl: url,\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                        })\n                            .then(function(docRef) {\n                                console.log(\"Document written with ID: \", docRef.id);\n                            })\n                            .catch(function(error) {\n                                console.error(\"Error adding document: \", error);\n                            });\n\n                        setOpenSnack(true);\n                        handleClose(true);\n                        setDishImg(\"\");\n                        setDishName(\"\");\n                        setPrice(\"\");\n                        setLoading(false);\n                        setProgress(0);\n                    })\n            }\n        )\n    }\n\n\n    const handleChange = (event) => {\n        if(event.target.files[0]){\n            setDishImg(event.target.files[0]);\n        }\n    }\n\n    const removeImage = () => {\n        setDishImg('');\n    }\n\n\n    useEffect(() => {\n        if(dishName.length > 0 && dishImg && price){            setDisable(false);\n\n            if(!/^\\s+$/.test(dishName) && price > 0){\n                setDisable(false);\n            }\n        }else {\n            setDisable(true)\n        }\n    },[dishName.length, dishImg, price])\n\n\n    return (\n        <Modal\n            className={classes.root}\n            open={open}\n            onClose={handleClose}\n        >\n            <div style={modalStyle} className={classes.paper}>\n                <div className={classes.modalHeader}>\n                    <h2>Add your own dish</h2>\n                    <div className={classes.buttonClose}>\n                        <IconButton aria-label=\"Cancel\" color=\"inherit\" onClick={handleClose} >\n                            <CancelTwoToneIcon />\n                        </IconButton>\n                    </div>\n                </div>\n\n                <div className=\"popup__caption\">\n                    <div className={classes.value}>\n                        <TextField\n                            required\n                            label=\"Dish Title\"\n                            fullWidth variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            value={dishName}\n                            onChange={event => setDishName(event.target.value)}\n\n                        />\n\n                        <TextField\n                            label=\"Price\"\n                            value={price}\n                            style = {{maxWidth: \"150px\", marginLeft: \"20px\"}}\n                            onChange={handleChangePrice}\n                            name=\"price\"\n                            id=\"price\"\n                            InputProps={{\n                                inputComponent: NumberFormatCustom,\n                            }}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            variant=\"outlined\"\n                        />\n\n                        {/*<TextField*/}\n                        {/*    required*/}\n                        {/*    style = {{maxWidth: \"150px\", marginLeft: \"20px\"}}*/}\n                        {/*    type=\"number\"*/}\n                        {/*    label=\"Price\"*/}\n                        {/*    InputLabelProps={{*/}\n                        {/*        shrink: true,*/}\n                        {/*    }}*/}\n                        {/*    InputProps={{ inputProps: { min: 0 } }}*/}\n                        {/*    value={price}*/}\n                        {/*    onChange={event => {setPrice(event.target.value)}}*/}\n                        {/*    variant=\"outlined\"*/}\n                        {/*/>*/}\n\n                    </div>\n                    {\n                        dishImg ? (\n                            <div className=\"popup__review\">\n                                <>\n                                    <img className={classes.reviewImg} src={window.URL.createObjectURL(dishImg)} alt=\"\" />\n                                    <div className={classes.buttonRemove}>\n                                        <IconButton aria-label=\"Cancel\" color=\"inherit\" onClick={removeImage} >\n                                            <CancelTwoToneIcon />\n                                        </IconButton>\n                                    </div>\n                                </>\n                            </div>\n                        ) : null\n                    }\n\n                </div>\n\n                <div className=\"popup__picker\">\n                    <h3 style={{textTransform: \"inherit\", fontSize: \"1rem\", letterSpacing: \"0\"}}>Upload picture of your dish</h3>\n                    <div className=\"popup__iconPicker\">\n                        <div>\n                            <input accept=\"image/*\" type=\"file\" onChange={handleChange} onClick={e => (e.target.value = null)} id=\"icon-button-file\" className={classes.input}/>\n\n                            <label htmlFor=\"icon-button-file\" className=\"upload__pickerButton\">\n                                <IconButton color=\"inherit\" component=\"span\" >\n                                    <Badge color=\"secondary\">\n                                        <PhotoCameraTwoToneIcon className={classes.popIcon}/>\n                                    </Badge>\n                                </IconButton>\n                            </label>\n\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"upload__button\">\n                    <Button\n                        classes={{\n                            disabled: classes.buttonDisable\n                        }}\n                        type=\"submit\"\n                        onClick={handleUpload}\n                        disabled={disable}\n                    >\n                        POST\n                    </Button>\n                    {loading && <CircularProgress value={progress} size={24} className={classes.buttonProgress} /> }\n                </div>\n            </div>\n        </Modal>\n    )\n}\nexport default AddDishes","/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/Stepper.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditNotification.js",["390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419"],"import React, {useEffect, useRef, useState} from \"react\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {auth, db, storage} from \"../../../firebase\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport {Link} from \"react-router-dom\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport {CircularProgress, IconButton, Modal, Switch} from \"@material-ui/core\";\n// import {green} from \"@material-ui/core/colors\";\nimport CancelTwoToneIcon from \"@material-ui/icons/CancelTwoTone\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport firebase from \"firebase\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport {Alert} from \"@material-ui/lab\";\nimport {blue, green} from \"@material-ui/core/colors\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n        width: 100,\n        height: 100,\n        margin: \"0 20px\",\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    avatarHolder: {\n        padding: \"16px 32px\",\n    },\n    holder: {\n        display: \"flex\",\n        padding: \"16px\"\n    },\n    changePhoto: {\n        color: \"#0095f6\",\n        padding: 0,\n        textTransform: \"capitalize\",\n    },\n    displayName: {\n        fontSize: 18,\n        fontWeight: \"bold\"\n    },\n    label: {\n        flex: \"0 0 25%\",\n        textAlign: \"right\",\n        paddingTop: \"5px\"\n    },\n    input: {\n        paddingLeft: 20,\n        width: \"60%\",\n        float: \"left\"\n    },\n    inputField: {\n        width: \"100%\",\n        padding: \"0 8px\",\n        height: \"32px\",\n        fontSize: \"16px\",\n        color: \"#262626\",\n        border: \"1px solid rgba(var(--ca6,219,219,219),1)\"\n\n    },\n    description: {\n        padding: \"10px 0\"\n    },\n    descriptionText: {\n        textOverflow: \"ellipsis\",\n        textAlign: \"justify\",\n        color: \"#8e8e8e\",\n        fontSize: \"12px\",\n    },\n    inputText: {\n        fontSize: \"16px\",\n        height: 60,\n        padding: \"6px 10px\",\n        resize: \"vertical\",\n        border: \"1px solid rgba(var(--ca6,219,219,219),1)\",\n        width: \"100%\"\n    },\n    formControl: {\n        margin: 0,\n        width: \"100%\",\n        height: \"32px\"\n    },\n    submit: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"20px\"\n    },\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 3, 3),\n        borderRadius: \"8px\",\n        maxHeight: \"300px\",\n        \"&:focus\": {\n            outline: \"none\"\n        },\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    modalHeader: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"10px 0 20px 0\",\n    },\n    btnAction: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    buttonClose: {\n        position: \"fixed\",\n        right: \"20px\",\n        top: \"17px\"\n    },\n    btnUpload: {\n        color : \"#0095f6\",\n        minHeight: \"48px\",\n        width : \"100%\",\n    },\n    btnRemove: {\n        color : \"#d8102a\",\n        minHeight: \"48px\",\n        width : \"100%\",\n    },\n    btnLabel: {\n        fontWeight: \"bold\"\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\n\nconst EditNotification = (props) => {\n    const {userLogged, setOpenSnack} = props;\n    const classes = useStyles();\n    const [state, setState] = React.useState(false);\n\n\n\n    const handleChange = (event) => {\n        setState((state) => !state);\n    };\n    const handleSubmit = (event) => {\n        event.preventDefault();\n    }\n\n    console.log(state);\n    return(\n        <article className=\"edit_account__content\" style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n            <h3>This section still on develop mode</h3>\n            {/*<form method=\"POST\" onSubmit={event => event.preventDefault()}>*/}\n            {/*    <div className={classes.holder}>*/}\n            {/*        <aside className={classes.label}>*/}\n            {/*            <label htmlFor=\"comments\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Comments</label>*/}\n            {/*        </aside>*/}\n            {/*        <div className={classes.input}>*/}\n            {/*            <Switch*/}\n            {/*                checked={state}*/}\n            {/*                onChange={handleChange}*/}\n            {/*                inputProps={{ 'aria-label': 'secondary checkbox' }}*/}\n            {/*                id=\"comments\"*/}\n            {/*            />*/}\n\n            {/*            <div className={classes.description}>*/}\n            {/*                <span className={classes.descriptionText}>Someone commented: \"Nice shot!\"</span>*/}\n            {/*            </div>*/}\n            {/*        </div>*/}\n            {/*    </div>*/}\n\n            {/*    <div className={classes.holder}>*/}\n            {/*        <aside className={classes.label}>*/}\n            {/*            <label htmlFor=\"request\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Follow Requests</label>*/}\n            {/*        </aside>*/}\n            {/*        <div className={classes.input}>*/}\n            {/*            <Switch*/}\n            {/*                checked={state}*/}\n            {/*                onChange={handleChange}*/}\n            {/*                inputProps={{ 'aria-label': 'secondary checkbox' }}*/}\n            {/*                id=\"request\"*/}\n            {/*            />*/}\n\n            {/*            <div className={classes.description}>*/}\n            {/*                <span className={classes.descriptionText}>Someone started to follow you</span>*/}\n            {/*            </div>*/}\n            {/*        </div>*/}\n            {/*    </div>*/}\n\n            {/*    <div className={classes.holder}>*/}\n            {/*        <aside className={classes.label}>*/}\n            {/*            <label htmlFor=\"email\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Feedback Email</label>*/}\n            {/*        </aside>*/}\n            {/*        <div className={classes.input}>*/}\n            {/*            <Switch*/}\n            {/*                checked={state}*/}\n            {/*                onChange={handleChange}*/}\n            {/*                inputProps={{ 'aria-label': 'secondary checkbox' }}*/}\n            {/*                id=\"email\"*/}\n            {/*            />*/}\n\n            {/*            <div className={classes.description}>*/}\n            {/*                <span className={classes.descriptionText}>Give feedback on our app</span>*/}\n            {/*            </div>*/}\n            {/*        </div>*/}\n            {/*    </div>*/}\n\n            {/*    <div className={classes.submit}>*/}\n            {/*        <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Update</Button>*/}\n            {/*    </div>*/}\n\n            {/*</form>*/}\n\n        </article>\n\n    )\n}\n\nexport default EditNotification","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditAbout.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/auth/ForgotPassword.js",["420","421","422"],"import React, {useState} from \"react\";\nimport {auth, provider} from \"../../firebase\";\nimport {Button, TextField} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Link, Navigate} from \"react-router-dom\";\n//import FacebookIcon from '../../icons/Facebook';\nimport GoogleIcon from '../../images/icons/Google';\nimport Page from \"../../components/Page\";\nimport checkFirebaseAuth from \"../../hooks/firebaseAuth\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport AlertPopup from \"../../components/Popup/AlertPopup\";\nimport firebase from \"firebase\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        padding: \"13px\",\n        fontSize: \"18px\",\n        fontWeight: \"bold\",\n        margin: \"16px 0\",\n        // backgroundColor: \"#006eb1\",\n        textTransform: \"capitalize\",\n        // '&:hover': {\n        //     backgroundColor: \"#015081\",\n        // },\n    },\n    divider: {\n        margin: \"16px 0\",\n        borderTop: \"1px solid #b6b6b6\",\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    logo: {\n        textAlign: \"center\",\n        paddingBottom: \"20px\"\n    },\n    forgot: {\n        textAlign: \"center\",\n        display: \"block\",\n        color: \"#00376b\",\n        fontWeight: \"bold\",\n        fontSize: \"13px\",\n        padding: \"10px 0\"\n    },\n    SignUpHolder: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    SignUp: {\n        padding: \"0 10px\",\n        fontWeight: \"bold\",\n        color: \"#0095f6\"\n    },\n    dividerSection: {\n        margin: \"20px 0\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    },\n    part: {\n        width: \"calc(100% / 2 - 50px)\",\n        borderTop: \"1px solid #b6b6b6\",\n    },\n    googleSignin: {\n        padding: \"13px\",\n        fontSize: \"18px\",\n        fontWeight: \"bold\",\n        margin: \"16px 0\",\n        // backgroundColor: \"#0095f6\",\n        textTransform: \"capitalize\",\n        // '&:hover': {\n        //     backgroundColor: \"#0171b8\",\n        // },\n    }\n\n\n\n}));\n\n\nfunction PageForgotPassword() {\n    const classes = useStyles();\n    const [email, setEmail] = useState('');\n    const [user] = useAuthState(auth);\n    const [open, setOpen] = useState(false);\n    const [message, setMessage] = useState('')\n\n    const handleClosePopup = (event) => {\n        setOpen(false);\n    };\n\n\n    if(user){\n        return <Navigate to=\"/\"/>\n    }\n\n    const handleForgot = () => {\n        var auth = firebase.auth();\n        auth.sendPasswordResetEmail(email).then(function() {\n            setOpen(true);\n            setMessage(\"An email has been sent for verification. Please check your email !\");\n        }).catch(function(error) {\n            setOpen(true);\n            setMessage(error.message)\n        });\n    }\n\n\n    return(\n        <Page\n            className={classes.root}\n            title=\"Forgot your password\"\n        >\n            <div className=\"login__container\">\n                <div className=\"login__block\">\n                    <div className=\"login__background login__article\"/>\n                    <div className=\"login__holder login__article\">\n                        <div className=\"login__authForm\">\n                            <div className={classes.logo}>\n                                <img className=\"header__imageLogo\" alt=\"LiveFood\"\n                                     src=\"/static/images/brand.png\"\n                                />\n                            </div>\n                            <div className={classes.form} >\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    label=\"Email address\"\n                                    id=\"email\"\n                                    placeholder=\"Email address\"\n                                    value={email}\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    autoFocus\n                                    onChange={(e) => setEmail(e.target.value)}\n\n                                />\n\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.button}\n                                    onClick={handleForgot}\n                                >\n                                    Send email\n                                </Button>\n                            </div>\n\n                            <div className={classes.dividerSection}>\n                                <div className={classes.part}/>\n                                <div className={classes.split}><span>Or</span></div>\n                                <div className={classes.part}/>\n                            </div>\n\n                            <div className={classes.SignUpHolder}>\n                                <span>Already do it ? Heading back</span>\n                                <Link to=\"/login\" className={classes.SignUp}>Sign in</Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <AlertPopup open={open} handleClose={handleClosePopup} title=\"LiveFood\" message={message}/>\n        </Page>\n\n    )\n}\nexport default PageForgotPassword;","/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/AlertPopup.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExplorePeopleItem.js",["423"],"import React, {useEffect, useState} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport {db} from \"../../firebase\";\nimport Button from \"@material-ui/core/Button\";\nimport { useDocument} from \"react-firebase-hooks/firestore\";\nimport {Link, useLocation} from \"react-router-dom\";\nimport {handleUserFollow, handleUserUnfollow} from \"../../hooks/services\";\nimport {blue} from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n        marginLeft: \"10px\",\n        borderRadius: \"16px\",\n        padding: 0,\n        boxShadow: \"0px 0px 5px 0px #ddc4c4bf\",\n        overflow: \"hidden\"\n    },\n    inline: {\n        display: 'inline',\n    },\n    listItem: {\n        paddingTop: \"15px\",\n        paddingBottom: \"15px\",\n        borderBottom: \"1px solid #0000001f\",\n        \"&:hover\": {\n            backgroundColor: \"rgba(38, 50, 56, 0.04)\",\n        },\n    },\n    button: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: \"150px\",\n        color: \"white\",\n        backgroundColor: \"#0095f6\",\n        \"&:hover\": {\n            backgroundColor: \"#0186db\",\n        },\n        marginRight: \"15px\",\n        textTransform: \"capitalize\"\n    },\n    buttonUnfollow: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: \"150px\",\n        color: \"#454444\",\n        marginRight: \"15px\",\n        textTransform: \"capitalize\",\n    },\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    name: {\n        fontWeight: \"bold\",\n        \"&:hover\": {\n            textDecoration: \"underline\"\n        },\n    },\n    container: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(1, 1fr)\",\n        width: \"100%\",\n        maxWidth: \"990px\",\n        marginLeft: \"16px\"\n    }\n}));\n\n\nexport default function ExplorePeopleItem(props) {\n    const classes = useStyles();\n    const [users, setUsers] = useState([])\n    const {userLogged} = props;\n    const userRef = userLogged && db.collection('users').doc(userLogged.uid);\n    const [userSnapshot] = useDocument(userRef);\n    const [userLoggedData, setUserLoggedData] = useState({});\n    let query = new URLSearchParams(useLocation().search).get(\"q\");\n    let userFollowingList = userSnapshot?.data()?.following;\n    let userFollowerList = userSnapshot?.data()?.follower;\n\n\n    useEffect(() => {\n        if(userLogged){\n            setUserLoggedData({\n                uid: userLogged.uid,\n                photoURL: userLogged.photoURL,\n                displayName: userLogged.displayName\n            })\n        }\n    }, [userLogged])\n\n\n    // List user\n    useEffect(() => {\n        if(typeof userFollowingList !== 'undefined' && userFollowingList?.length > 0){\n            var followingList;\n            followingList = userSnapshot.data().following\n            userLogged.uid && followingList.push(userLogged.uid);\n            return db.collection(\"users\")\n                .get().then(snapshot => {\n                    let data = [];\n                    snapshot.forEach(function(doc) {\n                        // doc.data() is never undefined for query doc snapshots\n                        if(!followingList.includes(doc.id)){\n                            data.push({id: doc.id, user: doc.data()})\n                        }\n                    });\n                    setUsers(data);\n                })\n        }\n        else{\n            return db.collection(\"users\")\n                .where('uid' ,'!=' , userLogged.uid )\n                .get().then(snapshot => {\n                    setUsers(snapshot.docs.map(doc => ({\n                        id: doc.id,\n                        user: doc.data(),\n                    })));\n                })\n        }\n\n\n    }, [userFollowingList?.length, query])\n\n\n    // check if user followed\n    const checkFollowed = (userFollowingList, uid) => {\n        let rs = false;\n        if(typeof userFollowingList !== 'undefined' ){\n            rs = userFollowingList.includes(uid);\n        }\n        return rs;\n    }\n\n\n    const checkOpponentFollowYou = (userFollowerList, uid) => {\n        let rs = false;\n        if(typeof userFollowerList !== 'undefined' ){\n            rs = userFollowerList.includes(uid);\n        }\n        return rs;\n    }\n\n    return (\n        <div className={classes.container} >\n            <List className={classes.root}>\n                {\n                    users?.map(({id, user}) => (\n                        <ListItem key={id} alignItems=\"center\" className={classes.listItem}>\n                            <ListItemAvatar>\n                                <Avatar className={classes.avatar} alt=\"\" src={user.photoURL} />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={\n                                    <Link to={`/profile/${user?.uid}`} className={classes.name}>{user?.displayName}</Link>\n                                    }\n                                secondary={\n                                    <Typography\n                                        component=\"span\"\n                                        variant=\"body2\"\n                                        className={classes.inline}\n                                        color=\"textPrimary\"\n                                    >\n                                        Full name\n                                        -   {checkOpponentFollowYou(userFollowerList, id) ? \"Follow you\" : \" Suggested for you\"}\n                                    </Typography>\n                                }\n                            />\n\n                            {\n                                checkFollowed(userFollowingList, id) ? (\n                                    <Button\n                                        variant=\"outlined\"\n                                        style={{textTransform: \"capitalize\"}}\n                                        className={classes.buttonUnfollow}\n                                        onClick={() => handleUserUnfollow(userLogged.uid, id)}\n                                    >\n                                        Unfollow\n                                    </Button>\n                                ) : (\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        style={{textTransform: \"capitalize\"}}\n                                        className={classes.button}\n                                        onClick={() => handleUserFollow(userLoggedData, id)}\n                                    >\n                                        Follow\n                                    </Button>\n                                )\n                            }\n                        </ListItem>\n                    ))\n                }\n\n            </List>\n        </div>\n    );\n}","/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExploreItem.js",["424","425"],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Search/index.js",["426"],"import React, {useEffect, useState} from \"react\";\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Hidden} from \"@material-ui/core\";\nimport {createSearchParams, useLocation, useNavigate} from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme) => ({\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(\"#f2f2f2\", 0.7),\n        '&:hover': {\n            backgroundColor: fade(\"#ded9d9\", 0.7),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        height: '30px',\n        [theme.breakpoints.up('sm')]: {\n            width: '20ch',\n            '&:focus': {\n                width: '30ch',\n            },\n        },\n    },\n}));\n\n\nfunction HeaderSearch() {\n    const classes = useStyles();\n    const [query, setQuery] = useState(\"\")\n    const navigate = useNavigate();\n\n    const location = useLocation().pathname;\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        if(query){\n            if(location !== \"/explore/people\"){\n                navigate({\n                    pathname: \"/recipe/search\",\n                    search: `?${createSearchParams({\n                        q: query.toLowerCase()\n                    })}`\n                });\n            }\n            else{\n                navigate({\n                    pathname: location,\n                    search: `?${createSearchParams({\n                        q: query.toLowerCase()\n                    })}`\n                });\n            }\n        }\n    }\n\n    // useEffect(() => {\n    //     if(!query){\n    //         navigate({\n    //             pathname: location\n    //         });\n    //     }\n    // }, [query])\n\n    return (\n        <Hidden smDown>\n            <div className=\"header__search\" onSubmit={handleSubmit}>\n                <form action=\"\" method=\"GET\">\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            name=\"search\"\n                            value={query}\n                            onChange={event => setQuery(event.target.value)}\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </div>\n                </form>\n\n            </div>\n        </Hidden>\n    )\n}\n\nexport default HeaderSearch\n","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Logo/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Item/index.js",["427","428"],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/CommentInput.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/CommentDetails.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/recipe/RecipePage.js",["429","430","431","432"],"import React, {useEffect, useState} from \"react\";\nimport Page from \"../../components/Page\";\nimport {Link} from \"react-router-dom\";\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\nimport AccessTimeRoundedIcon from '@material-ui/icons/AccessTimeRounded';\nimport Divider from \"@material-ui/core/Divider\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport {db} from \"../../firebase\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {Camera as CameraIcon} from \"react-feather\";\nimport {Rating} from \"@material-ui/lab\";\nimport ListRecipe from \"../../components/Recipe/ListRecipe\";\nimport NewestRecipe from \"../../components/Recipe/NewestRecipe\";\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        width: \"40%\"\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    icon: {\n        color: \"#050505\"\n    },\n    wrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        maxHeight: \"300px\",\n        width: \"100%\"\n    },\n    none: {\n        width: \"100px\",\n        height: \"100px\",\n        borderColor: \"#262626\",\n        borderWidth: \"2px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderStyle: \"solid\",\n        borderRadius: \"50%\",\n        margin: \"50px 0 20px 0\"\n    },\n    rating: {\n        display: \"flex\",\n        alignItems: \"center\",\n        width: \"100%\"\n    }\n}));\n\nconst RecipePage = (props) => {\n    const classes = useStyles();\n    const [type, setType] = React.useState('newest');\n    const [newest, setNewest] = useState([]);\n    const [listRecipe, setListRecipe] = useState([]);\n    const [cate] = useCollection(db.collection(\"category\"))\n    window.scroll({top: 0, left: 0, behavior: 'smooth' });\n\n\n\n    const handleChange = (event) => {\n        setType(event.target.value);\n    };\n\n    useEffect( () => {\n        // Set newest\n        db.collection('posts')\n            .where('type', '==', 'recipe')\n            .orderBy('timestamp', \"desc\")\n            .limit(2)\n            .get().then(async snapshot => {\n                const track = await Promise.all(\n                    snapshot.docs.map(async doc => ({\n                        id: doc.id,\n                        post: doc.data(),\n                        postAuthor: await Promise.resolve(doc.data().user.get().then( author => {\n                            return author.data();\n                        }))\n                    })));\n                setNewest(track);\n        })\n\n        // Set all post\n        if(type === 'newest'){\n            db.collection('posts')\n                .where('type', '==', 'recipe')\n                .orderBy('timestamp', \"desc\")\n                .limit(12)\n                .get().then(async snapshot => {\n                    const tracking = await Promise.all(\n                        snapshot.docs.map(async doc => ({\n                            id: doc.id,\n                            post: doc.data(),\n                            postAuthor: await Promise.resolve(doc.data().user.get().then( author => {\n                                return author.data();\n                            }))\n                        }))\n                    )\n                    setListRecipe(tracking);\n            })\n        }\n        else{\n            db.collection('posts')\n                .where('type', '==', 'recipe')\n                .where('data.category', '==', type.toLowerCase())\n                .orderBy('timestamp', \"desc\")\n                .limit(12)\n                .get().then(async snapshot => {\n                    const tracking = await Promise.all(\n                        snapshot.docs.map(async doc => ({\n                            id: doc.id,\n                            post: doc.data(),\n                            postAuthor: await Promise.resolve(doc.data().user.get().then( author => {\n                                return author.data();\n                            }))\n                        }))\n                    )\n                    setListRecipe(tracking);\n            })\n        }\n\n    },[type]);\n\n\n    return (\n        <Page\n            title=\"Recipes | LiveFood\"\n            className=\"app__bodyContainer\"\n        >\n            <div className=\"recipe__page\">\n                <div className=\"recipe__heading\">\n                    <h1>Recipes</h1>\n                    <div className=\"feature-content\">\n                        {\n                            newest.length > 0 ? (\n                                (newest.map( ({id, post, postAuthor}) => (\n                                    <NewestRecipe key={id} id={id} post={post} postAuthor={postAuthor}/>\n                                ))\n                            )) : null\n                        }\n                    </div>\n                </div>\n                <Divider />\n                <div className=\"recipe__content\">\n                    <FormControl className={classes.formControl}>\n                        <Select\n                            style={{fontWeight: \"bold\", textTransform: \"uppercase\"}}\n                            fullWidth\n                            value={type}\n                            onChange={handleChange}\n                        >\n                            <MenuItem value={'newest'} style={{fontWeight: \"bold\", textTransform: \"uppercase\"}}>Newest</MenuItem>\n                            {\n                                cate?.docs?.map((doc) => (\n                                    <MenuItem key={doc.id} value={doc.data().title} style={{fontWeight: \"bold\", textTransform: \"uppercase\"}}>{doc.data().title}</MenuItem>\n                                ))\n                            }\n\n                        </Select>\n                    </FormControl>\n                    <div className=\"list-recipe\">\n                            {\n                                listRecipe.length > 0 ? (\n                                    <div className=\"list-recipe-grid\" style={{gridGap: \"24px\"}}>\n                                        {\n                                            listRecipe.map(({id, post, postAuthor}) => (\n                                                <ListRecipe key={id} id={id} post={post} postAuthor={postAuthor}/>\n                                            ))\n                                        }\n                                    </div>\n                                ) : (\n                                    <div className={classes.wrapper}>\n                                        <div className={classes.none}>\n                                            <CameraIcon\n                                                className={classes.icon}\n                                                size=\"40\"\n                                            />\n                                        </div>\n                                        <h2 style={{paddingBottom: \"10px\"}}>No Posts Found</h2>\n                                    </div>\n                                )\n                            }\n                    </div>\n                </div>\n            </div>\n        </Page>\n    )\n}\n\nexport default RecipePage;","/home/miizoo/Desktop/ReactJS/livefood/src/views/recipe/TopicPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/recipe/TrendingPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/ListUserInProfile.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Recipe/ListRecipe.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Recipe/NewestRecipe.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/recipe/ResultRecipePace.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/images/icons/Google.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/LocationPage.js",["433","434","435","436"],"import React, {useEffect, useState} from \"react\";\nimport NavBar from \"../components/SideBar/LeftSideBar\";\nimport Page from \"../components/Page\";\nimport {db} from \"../firebase\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport {InputLabel, MenuItem, Select} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {MapPin as MapPinIcon} from \"react-feather\";\nimport {Link} from \"react-router-dom\";\nimport {Rating} from \"@material-ui/lab\";\nimport FavoriteRoundedIcon from \"@material-ui/icons/FavoriteRounded\";\nimport AccessTimeRoundedIcon from \"@material-ui/icons/AccessTimeRounded\";\nimport {handleUserFollow, handleUserUnfollow} from \"../hooks/services\";\nimport Button from \"@material-ui/core/Button\";\nimport LocationOnRoundedIcon from \"@material-ui/icons/LocationOnRounded\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 220,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    icon: {\n        color: \"#050505\"\n    },\n    wrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        maxHeight: \"300px\",\n        width: \"100%\"\n    },\n    none: {\n        width: \"100px\",\n        height: \"100px\",\n        borderColor: \"#262626\",\n        borderWidth: \"2px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderStyle: \"solid\",\n        borderRadius: \"50%\",\n        margin: \"50px 0 20px 0\"\n    },\n    button: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: \"150px\",\n        color: \"white\",\n        backgroundColor: \"#0095f6\",\n        \"&:hover\": {\n            backgroundColor: \"#0186db\",\n        },\n        textTransform: \"capitalize\",\n        margin: \"auto\"\n    },\n    buttonUnfollow: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: \"150px\",\n        color: \"#454444\",\n        // \"&:hover\": {\n        //     backgroundColor: \"#c3d6fa\",\n        // },\n        marginRight: \"15px\",\n        textTransform: \"capitalize\"\n    },\n}));\n\n\nexport default function LocationPage(props){\n    const {userLogged} = props;\n    const classes = useStyles();\n    const [listRestaurantCate, setListRestaurantCate] = useState([]);\n    const [restaurantCate, setRestaurantCate] = useState('');\n    const [userProvince, setUserProvince] = useState(\"\");\n    const [province, setProvince] = useState([]);\n    const [listRestaurant, setListRestaurant] = useState([]);\n    const [userLoggedData, setUserLoggedData] = useState({});\n\n    useEffect(() => {\n        if(userLogged){\n            setUserLoggedData({\n                uid: userLogged.uid,\n                photoURL: userLogged.photoURL,\n                displayName: userLogged.displayName\n            })\n        }\n    }, [userLogged])\n\n    useEffect(() => {\n        fetch('https://vapi.vnappmob.com/api/province/')\n            .then(res => res.json()).then(res => {\n            if (res.results && res.results.length > 0) {\n                setProvince(res.results)\n            }\n        });\n\n    }, []);\n\n\n    useEffect(() => {\n        const userRef = db.collection('users');\n        if(restaurantCate){\n            if(userProvince){\n                return userRef\n                    .where('accountType', '==', 'foodshop')\n                    .where('aboutRestaurant.modelId', '==', restaurantCate)\n                    .where('aboutRestaurant.locationId', '==', userProvince)\n                    .limit(20)\n                    .onSnapshot( snapshot => {\n                        setListRestaurant(snapshot.docs.map(doc => ({\n                            id: doc.id,\n                            data: doc.data(),\n                        })));\n                    })\n            }\n            else\n                return userRef\n                    .where('accountType', '==', 'foodshop')\n                    .where('aboutRestaurant.modelId', '==', restaurantCate)\n                    .limit(20)\n                    .onSnapshot( snapshot => {\n                        setListRestaurant(snapshot.docs.map(doc => ({\n                            id: doc.id,\n                            data: doc.data(),\n                        })));\n                    })\n        }\n        else{\n            if(userProvince){\n                return userRef\n                    .where('accountType', '==', 'foodshop')\n                    .where('aboutRestaurant.locationId', '==', userProvince)\n                    .limit(20)\n                    .onSnapshot( snapshot => {\n                        setListRestaurant(snapshot.docs.map(doc => ({\n                            id: doc.id,\n                            data: doc.data(),\n                        })));\n                    })\n            }\n            else\n                return userRef\n                    .where('accountType', '==', 'foodshop')\n                    .limit(20)\n                    .onSnapshot( snapshot => {\n                        setListRestaurant(snapshot.docs.map(doc => ({\n                            id: doc.id,\n                            data: doc.data(),\n                        })));\n                    })\n        }\n    }, [restaurantCate, userProvince])\n\n\n    useEffect(() => {\n        return db.collection('restaurantCategory')\n            .orderBy('title', 'asc')\n            .limit(20)\n            .get().then( snapshot => {\n                setListRestaurantCate(snapshot.docs.map(doc => ({\n                    id: doc.id,\n                    title: doc.data().title,\n                })));\n            })\n    }, [])\n    return (\n        <Page\n            title=\"LiveFood\"\n            className=\"app__bodyContainer\"\n        >\n            <NavBar userLogged={userLogged}/>\n            <div className=\"list-users\">\n                <div className=\"list-users__header\">\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                        <InputLabel id=\"restaurant_category_label\">Category</InputLabel>\n                        <Select\n                            labelId=\"restaurant_category_label\"\n                            id=\"restaurant_category\"\n                            value={restaurantCate}\n                            onChange={(event) => setRestaurantCate(event.target.value)}\n                            label=\"Category\"\n                        >\n                            <MenuItem value=\"\" >\n                                <em>None</em>\n                            </MenuItem>\n                            {\n                                listRestaurantCate.map(({id, title}) => (\n                                    <MenuItem key={id} value={id}>{title}</MenuItem>\n                                ))\n                            }\n                        </Select>\n                    </FormControl>\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                        <InputLabel id=\"restaurant_location_label\">Location</InputLabel>\n                        <Select\n                            native\n                            labelId=\"restaurant_location_label\"\n                            id=\"restaurant_location\"\n                            value={userProvince}\n                            onChange={event => setUserProvince(event.target.value)}\n                            label=\"Location\"\n                        >\n                            <option aria-label=\"None\" value=\"\" />\n                            {\n                                province?.map((doc) => (\n                                    <option key={doc.province_id} value={doc.province_id}>{doc.province_name}</option>\n                                ))\n                            }\n                        </Select>\n                    </FormControl>\n                </div>\n\n                {\n                    listRestaurant.length > 0 ? (\n                        <div className=\"list-users__container\">\n                            {\n                                listRestaurant.map(({id, data}) => (\n                                    <div key={id} className=\"list-users-item\">\n                                        <div className=\"list-users-wrap\">\n                                            <div className=\"inner-wrap\" style={{height: \"220px\"}}>\n                                                <Link to=\"\" className='text-link'>\n                                                    <img\n                                                        src={data?.photoURL} alt=\"\"/>\n                                                </Link>\n                                            </div>\n                                            <div className=\"tile-content\">\n                                                <div className=\"details\">\n                                                    <h2 className=\"title\" title={data?.displayName}>\n                                                        <Link to={`/profile/${id}`}>{data?.displayName}</Link>\n                                                        {\n                                                            data?.aboutRestaurant?.location ? (\n                                                                    <span className=\"user-location\">\n                                                                        {data?.aboutRestaurant?.address ?? \"\" }\n                                                                        {\" - \" + data?.aboutRestaurant?.location}\n                                                                    </span>\n                                                            ) : null\n                                                        }\n\n                                                    </h2>\n\n                                                    {\n                                                        id === userLogged.uid ? null : (\n                                                            <div className=\"follow-me\">\n                                                                {\n                                                                    data?.follower?.includes(userLogged.uid) ? (\n                                                                        <Button\n                                                                            variant=\"outlined\"\n                                                                            style={{textTransform: \"capitalize\"}}\n                                                                            className={classes.buttonUnfollow}\n                                                                            onClick={() => handleUserUnfollow(userLogged.uid, id)}\n                                                                        >\n                                                                            Unfollow\n                                                                        </Button>\n                                                                    ) : (\n                                                                        <Button\n                                                                            variant=\"contained\"\n                                                                            color=\"primary\"\n                                                                            style={{textTransform: \"capitalize\"}}\n                                                                            className={classes.button}\n                                                                            onClick={() => handleUserFollow(userLoggedData, id)}\n                                                                        >\n                                                                            Follow\n                                                                        </Button>\n                                                                    )\n                                                                }\n\n                                                            </div>\n                                                        )\n                                                    }\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))\n                            }\n                        </div>\n                    ) : (\n                        <div className={classes.wrapper}>\n                            <div className={classes.none}>\n                                <MapPinIcon\n                                    className={classes.icon}\n                                    size=\"40\"\n                                />\n                            </div>\n                            <h2 style={{paddingBottom: \"10px\"}}>No restaurant found !</h2>\n                        </div>\n                    )\n                }\n\n            </div>\n        </Page>\n    )\n}\n","/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/PostUtil.js",["437"],"import React, {useState} from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {Button, Modal} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {green} from \"@material-ui/core/colors\";\nimport {handleReportPost, handleDeletePost, handleUserUnfollow} from \"../../hooks/services\";\n\nfunction getModalStyle() {\n    const top = 50 ;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 300,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: '0',\n        borderRadius: \"8px\",\n        maxHeight: \"300px\",\n        \"&:focus\": {\n            outline: \"none\"\n        },\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    btnAction: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    btnNormal: {\n        color : \"#282626\",\n        minHeight: \"48px\",\n        width : \"100%\",\n        textTransform: \"capitalize\",\n        fontSize: \"16px\"\n    },\n    btnRed: {\n        color : \"#d8102a\",\n        minHeight: \"48px\",\n        width : \"100%\",\n        textTransform: \"capitalize\",\n        fontSize: \"16px\"\n    },\n    btnLabel: {\n        fontWeight: \"bold\"\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\n\n\nconst PostUtil = (props) => {\n    const {open, handleClose, uid, opponentID, postID, handleRemove, handleReport, isSave} = props;\n\n    const [modalStyle] = useState(getModalStyle);\n    const classes = useStyles();\n\n    let isYourPost  = false;\n    if(uid === opponentID){\n        isYourPost = true;\n    }\n\n    return (\n        <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n        >\n            <div style={modalStyle} className={classes.paper}>\n                <Divider />\n                {\n                    isYourPost ? (\n                        <>\n                            <div className={classes.btnAction}>\n                                <Button\n                                    classes={{\n                                        root: classes.btnRed,\n                                        label: classes.btnLabel,\n                                    }}\n                                    onClick={\n                                        () => {\n                                            handleDeletePost(postID);\n                                            handleRemove(postID);\n                                            handleClose(true);\n                                        }\n                                    }\n                                >\n                                    Delete\n                                </Button>\n                            </div>\n                            <Divider />\n\n                            <div className={classes.btnAction}>\n                                <Button\n                                    classes={{\n                                        root: classes.btnRed,\n                                        label: classes.btnLabel,\n                                    }}\n                                    onClick={\n                                        () => {\n                                            // handleUserUnfollow(uid, opponentID);\n                                            handleClose(true);\n                                        }\n                                    }\n                                >\n                                    Edit\n                                </Button>\n                            </div>\n                            <Divider />\n                        </>\n                    ) : (\n                        <>\n                            <div className={classes.btnAction}>\n                                <Button\n                                    classes={{\n                                        root: classes.btnRed,\n                                        label: classes.btnLabel,\n                                    }}\n                                    onClick={\n                                        () => {\n                                            handleReportPost(uid, postID);\n                                            handleRemove(postID);\n                                            handleClose(true);\n                                        }\n                                    }\n                                >\n                                    Report\n                                </Button>\n                            </div>\n                            <Divider />\n                            <div className={classes.btnAction}>\n                                <Button\n                                    classes={{\n                                        root: classes.btnRed,\n                                        label: classes.btnLabel,\n                                    }}\n                                    onClick={\n                                        () => {\n                                            handleUserUnfollow(uid, opponentID);\n                                            handleRemove(postID);\n                                            handleClose(true);\n                                        }\n                                    }\n                                >\n                                    Unfollow\n                                </Button>\n                            </div>\n                            <Divider />\n                        </>\n                    )\n                }\n\n\n                <div className={classes.btnAction}>\n                    <Button\n                        component={Link}\n                        to={`p/${postID}`}\n                        classes={{\n                            root: classes.btnNormal,\n                            label: classes.btnLabel,\n                        }}\n                    >\n                        Go to post\n                    </Button>\n                </div>\n                <Divider />\n\n                {\n                    !isSave ? (\n                        <>\n                            <div className={classes.btnAction}>\n                                <Button\n                                    classes={{\n                                        root: classes.btnNormal,\n                                        label: classes.btnLabel,\n                                    }}\n\n                                >\n                                    Save post\n                                </Button>\n                            </div>\n                            <Divider />\n                        </>\n                    ) : null\n                }\n\n                <div className={classes.btnAction}>\n                    <Button\n                        classes={{\n                            root: classes.btnNormal,\n                            label: classes.btnLabel,\n                        }}\n                        onClick={handleClose}\n                    >\n                        Cancel\n                    </Button>\n                </div>\n                <Divider />\n            </div>\n\n        </Modal>\n    )\n\n}\n\n\nexport default PostUtil","/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/CommentUtil.js",["438","439","440","441"],"import React, {useState} from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {Button, Modal} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {green} from \"@material-ui/core/colors\";\nimport {handleReportPost, handleDeletePost, handleUserUnfollow, handleDeleteComment} from \"../../hooks/services\";\n\nfunction getModalStyle() {\n    const top = 50 ;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 300,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: '0',\n        borderRadius: \"8px\",\n        maxHeight: \"300px\",\n        \"&:focus\": {\n            outline: \"none\"\n        },\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    btnAction: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    btnNormal: {\n        color : \"#282626\",\n        minHeight: \"48px\",\n        width : \"100%\",\n        textTransform: \"capitalize\",\n        fontSize: \"16px\"\n    },\n    btnRed: {\n        color : \"#d8102a\",\n        minHeight: \"48px\",\n        width : \"100%\",\n        textTransform: \"capitalize\",\n        fontSize: \"16px\"\n    },\n    btnLabel: {\n        fontWeight: \"bold\"\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\n\n\nconst CommentUtil = (props) => {\n    const {open, handleClose, postId, postUid, commentId, commentUid , userLogged} = props;\n    const [modalStyle] = useState(getModalStyle);\n    const classes = useStyles();\n\n    return (\n        <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n        >\n            <div style={modalStyle} className={classes.paper}>\n                <Divider />\n                {\n                    postUid === userLogged?.uid ? (\n                        <>\n                            <div className={classes.btnAction}>\n                                <Button\n                                    classes={{\n                                        root: classes.btnRed,\n                                        label: classes.btnLabel,\n                                    }}\n                                    onClick={\n                                        () => {\n                                            handleDeleteComment(postId, commentId);\n                                            handleClose(true);\n                                        }\n                                    }\n                                >\n                                    Delete\n                                </Button>\n                            </div>\n                            <Divider />\n                        </>\n                    ) : (\n                        <>\n                            {\n                                commentUid === userLogged.uid ? (\n                                    <div className={classes.btnAction}>\n                                        <Button\n                                            classes={{\n                                                root: classes.btnRed,\n                                                label: classes.btnLabel,\n                                            }}\n                                            onClick={\n                                                () => {\n                                                    handleDeleteComment(postId, commentId);\n                                                    handleClose(true);\n                                                }\n                                            }\n                                        >\n                                            Delete\n                                        </Button>\n                                    </div>\n                                ) : (\n                                    <div className={classes.btnAction}>\n                                        <Button\n                                            classes={{\n                                                root: classes.btnRed,\n                                                label: classes.btnLabel,\n                                            }}\n                                            // onClick={\n                                            //     () => {\n                                            //         handleReportPost(props.uid, props.id);\n                                            //         props.handleClose(true);\n                                            //     }\n                                            // }\n                                        >\n                                            Report\n                                        </Button>\n                                    </div>\n                                )\n                            }\n                            <Divider />\n                        </>\n                    )\n                }\n\n                <div className={classes.btnAction}>\n                    <Button\n                        classes={{\n                            root: classes.btnNormal,\n                            label: classes.btnLabel,\n                        }}\n                        onClick={props.handleClose}\n                    >\n                        Cancel\n                    </Button>\n                </div>\n                <Divider />\n            </div>\n\n        </Modal>\n    )\n\n}\n\n\nexport default CommentUtil","/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/Survey.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/ListUserLikePost.js",["442"],"/home/miizoo/Desktop/ReactJS/livefood/src/components/DefaultLayout.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/MainLayout.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/theme/typography.js",["443"],"export default {\n    h1: {\n        fontWeight: 500,\n        fontSize: 35,\n        letterSpacing: '-0.24px'\n    },\n    h2: {\n        fontWeight: 500,\n        fontSize: 29,\n        letterSpacing: '-0.24px'\n    },\n    h3: {\n        fontWeight: 500,\n        fontSize: 24,\n        letterSpacing: '-0.06px'\n    },\n    h4: {\n        fontWeight: 500,\n        fontSize: 20,\n        letterSpacing: '-0.06px'\n    },\n    h5: {\n        fontWeight: 500,\n        fontSize: 16,\n        letterSpacing: '-0.05px'\n    },\n    h6: {\n        fontWeight: 500,\n        fontSize: 14,\n        letterSpacing: '-0.05px'\n    },\n    overline: {\n        fontWeight: 500\n    }\n};\n",{"ruleId":"444","replacedBy":"445"},{"ruleId":"446","replacedBy":"447"},{"ruleId":"448","severity":1,"message":"449","line":424,"column":109,"nodeType":"450","endLine":425,"endColumn":85},{"ruleId":"448","severity":1,"message":"449","line":429,"column":108,"nodeType":"450","endLine":430,"endColumn":85},{"ruleId":"451","severity":1,"message":"452","line":1,"column":16,"nodeType":"453","messageId":"454","endLine":1,"endColumn":25},{"ruleId":"451","severity":1,"message":"455","line":1,"column":27,"nodeType":"453","messageId":"454","endLine":1,"endColumn":35},{"ruleId":"451","severity":1,"message":"456","line":6,"column":9,"nodeType":"453","messageId":"454","endLine":6,"endColumn":22},{"ruleId":"451","severity":1,"message":"457","line":14,"column":27,"nodeType":"453","messageId":"454","endLine":14,"endColumn":45},{"ruleId":"458","severity":1,"message":"459","line":93,"column":8,"nodeType":"460","endLine":93,"endColumn":44,"suggestions":"461"},{"ruleId":"448","severity":1,"message":"449","line":319,"column":125,"nodeType":"450","endLine":319,"endColumn":175},{"ruleId":"448","severity":1,"message":"449","line":320,"column":124,"nodeType":"450","endLine":320,"endColumn":173},{"ruleId":"451","severity":1,"message":"462","line":2,"column":8,"nodeType":"453","messageId":"454","endLine":2,"endColumn":15},{"ruleId":"451","severity":1,"message":"463","line":6,"column":17,"nodeType":"453","messageId":"454","endLine":6,"endColumn":25},{"ruleId":"451","severity":1,"message":"464","line":6,"column":36,"nodeType":"453","messageId":"454","endLine":6,"endColumn":45},{"ruleId":"458","severity":1,"message":"465","line":81,"column":8,"nodeType":"460","endLine":81,"endColumn":55,"suggestions":"466"},{"ruleId":"451","severity":1,"message":"467","line":7,"column":9,"nodeType":"453","messageId":"454","endLine":7,"endColumn":20},{"ruleId":"451","severity":1,"message":"468","line":8,"column":8,"nodeType":"453","messageId":"454","endLine":8,"endColumn":15},{"ruleId":"458","severity":1,"message":"469","line":83,"column":8,"nodeType":"460","endLine":83,"endColumn":45,"suggestions":"470"},{"ruleId":"451","severity":1,"message":"452","line":1,"column":16,"nodeType":"453","messageId":"454","endLine":1,"endColumn":25},{"ruleId":"451","severity":1,"message":"455","line":1,"column":27,"nodeType":"453","messageId":"454","endLine":1,"endColumn":35},{"ruleId":"458","severity":1,"message":"471","line":69,"column":8,"nodeType":"460","endLine":69,"endColumn":31,"suggestions":"472"},{"ruleId":"451","severity":1,"message":"473","line":78,"column":11,"nodeType":"453","messageId":"454","endLine":78,"endColumn":19},{"ruleId":"451","severity":1,"message":"474","line":3,"column":8,"nodeType":"453","messageId":"454","endLine":3,"endColumn":17},{"ruleId":"448","severity":1,"message":"449","line":54,"column":93,"nodeType":"450","endLine":55,"endColumn":69},{"ruleId":"448","severity":1,"message":"449","line":59,"column":92,"nodeType":"450","endLine":60,"endColumn":69},{"ruleId":"451","severity":1,"message":"452","line":1,"column":16,"nodeType":"453","messageId":"454","endLine":1,"endColumn":25},{"ruleId":"451","severity":1,"message":"475","line":2,"column":9,"nodeType":"453","messageId":"454","endLine":2,"endColumn":15},{"ruleId":"451","severity":1,"message":"476","line":2,"column":17,"nodeType":"453","messageId":"454","endLine":2,"endColumn":28},{"ruleId":"451","severity":1,"message":"477","line":2,"column":30,"nodeType":"453","messageId":"454","endLine":2,"endColumn":38},{"ruleId":"451","severity":1,"message":"478","line":2,"column":40,"nodeType":"453","messageId":"454","endLine":2,"endColumn":50},{"ruleId":"451","severity":1,"message":"479","line":2,"column":59,"nodeType":"453","messageId":"454","endLine":2,"endColumn":68},{"ruleId":"451","severity":1,"message":"480","line":4,"column":8,"nodeType":"453","messageId":"454","endLine":4,"endColumn":18},{"ruleId":"451","severity":1,"message":"481","line":7,"column":8,"nodeType":"453","messageId":"454","endLine":7,"endColumn":28},{"ruleId":"458","severity":1,"message":"482","line":206,"column":7,"nodeType":"460","endLine":206,"endColumn":40,"suggestions":"483"},{"ruleId":"451","severity":1,"message":"452","line":1,"column":16,"nodeType":"453","messageId":"454","endLine":1,"endColumn":25},{"ruleId":"451","severity":1,"message":"484","line":1,"column":27,"nodeType":"453","messageId":"454","endLine":1,"endColumn":33},{"ruleId":"451","severity":1,"message":"455","line":1,"column":35,"nodeType":"453","messageId":"454","endLine":1,"endColumn":43},{"ruleId":"451","severity":1,"message":"485","line":2,"column":9,"nodeType":"453","messageId":"454","endLine":2,"endColumn":21},{"ruleId":"451","severity":1,"message":"486","line":3,"column":9,"nodeType":"453","messageId":"454","endLine":3,"endColumn":13},{"ruleId":"451","severity":1,"message":"487","line":3,"column":15,"nodeType":"453","messageId":"454","endLine":3,"endColumn":17},{"ruleId":"451","severity":1,"message":"488","line":3,"column":19,"nodeType":"453","messageId":"454","endLine":3,"endColumn":26},{"ruleId":"451","severity":1,"message":"489","line":5,"column":8,"nodeType":"453","messageId":"454","endLine":5,"endColumn":14},{"ruleId":"451","severity":1,"message":"490","line":6,"column":8,"nodeType":"453","messageId":"454","endLine":6,"endColumn":16},{"ruleId":"451","severity":1,"message":"491","line":7,"column":9,"nodeType":"453","messageId":"454","endLine":7,"endColumn":13},{"ruleId":"451","severity":1,"message":"492","line":8,"column":8,"nodeType":"453","messageId":"454","endLine":8,"endColumn":18},{"ruleId":"451","severity":1,"message":"475","line":9,"column":8,"nodeType":"453","messageId":"454","endLine":9,"endColumn":14},{"ruleId":"451","severity":1,"message":"493","line":10,"column":9,"nodeType":"453","messageId":"454","endLine":10,"endColumn":25},{"ruleId":"451","severity":1,"message":"478","line":10,"column":27,"nodeType":"453","messageId":"454","endLine":10,"endColumn":37},{"ruleId":"451","severity":1,"message":"494","line":10,"column":39,"nodeType":"453","messageId":"454","endLine":10,"endColumn":44},{"ruleId":"451","severity":1,"message":"495","line":10,"column":46,"nodeType":"453","messageId":"454","endLine":10,"endColumn":52},{"ruleId":"451","severity":1,"message":"496","line":12,"column":8,"nodeType":"453","messageId":"454","endLine":12,"endColumn":25},{"ruleId":"451","severity":1,"message":"497","line":13,"column":8,"nodeType":"453","messageId":"454","endLine":13,"endColumn":15},{"ruleId":"451","severity":1,"message":"467","line":14,"column":9,"nodeType":"453","messageId":"454","endLine":14,"endColumn":20},{"ruleId":"451","severity":1,"message":"498","line":15,"column":8,"nodeType":"453","messageId":"454","endLine":15,"endColumn":16},{"ruleId":"451","severity":1,"message":"499","line":16,"column":8,"nodeType":"453","messageId":"454","endLine":16,"endColumn":16},{"ruleId":"451","severity":1,"message":"500","line":17,"column":9,"nodeType":"453","messageId":"454","endLine":17,"endColumn":14},{"ruleId":"451","severity":1,"message":"501","line":19,"column":8,"nodeType":"453","messageId":"454","endLine":19,"endColumn":16},{"ruleId":"451","severity":1,"message":"502","line":20,"column":8,"nodeType":"453","messageId":"454","endLine":20,"endColumn":19},{"ruleId":"451","severity":1,"message":"503","line":21,"column":8,"nodeType":"453","messageId":"454","endLine":21,"endColumn":14},{"ruleId":"451","severity":1,"message":"504","line":148,"column":12,"nodeType":"453","messageId":"454","endLine":148,"endColumn":22},{"ruleId":"451","severity":1,"message":"505","line":148,"column":24,"nodeType":"453","messageId":"454","endLine":148,"endColumn":36},{"ruleId":"451","severity":1,"message":"506","line":149,"column":11,"nodeType":"453","messageId":"454","endLine":149,"endColumn":18},{"ruleId":"451","severity":1,"message":"507","line":154,"column":11,"nodeType":"453","messageId":"454","endLine":154,"endColumn":23},{"ruleId":"451","severity":1,"message":"508","line":157,"column":11,"nodeType":"453","messageId":"454","endLine":157,"endColumn":23},{"ruleId":"451","severity":1,"message":"509","line":2,"column":15,"nodeType":"453","messageId":"454","endLine":2,"endColumn":23},{"ruleId":"451","severity":1,"message":"510","line":7,"column":8,"nodeType":"453","messageId":"454","endLine":7,"endColumn":18},{"ruleId":"451","severity":1,"message":"511","line":9,"column":8,"nodeType":"453","messageId":"454","endLine":9,"endColumn":25},{"ruleId":"458","severity":1,"message":"512","line":138,"column":8,"nodeType":"460","endLine":138,"endColumn":42,"suggestions":"513"},{"ruleId":"451","severity":1,"message":"455","line":1,"column":17,"nodeType":"453","messageId":"454","endLine":1,"endColumn":25},{"ruleId":"451","severity":1,"message":"494","line":6,"column":9,"nodeType":"453","messageId":"454","endLine":6,"endColumn":14},{"ruleId":"451","severity":1,"message":"452","line":1,"column":16,"nodeType":"453","messageId":"454","endLine":1,"endColumn":25},{"ruleId":"451","severity":1,"message":"485","line":15,"column":9,"nodeType":"453","messageId":"454","endLine":15,"endColumn":21},{"ruleId":"451","severity":1,"message":"514","line":20,"column":37,"nodeType":"453","messageId":"454","endLine":20,"endColumn":47},{"ruleId":"451","severity":1,"message":"491","line":3,"column":9,"nodeType":"453","messageId":"454","endLine":3,"endColumn":13},{"ruleId":"451","severity":1,"message":"515","line":4,"column":8,"nodeType":"453","messageId":"454","endLine":4,"endColumn":27},{"ruleId":"451","severity":1,"message":"516","line":5,"column":8,"nodeType":"453","messageId":"454","endLine":5,"endColumn":29},{"ruleId":"451","severity":1,"message":"517","line":14,"column":9,"nodeType":"453","messageId":"454","endLine":14,"endColumn":15},{"ruleId":"451","severity":1,"message":"517","line":10,"column":9,"nodeType":"453","messageId":"454","endLine":10,"endColumn":15},{"ruleId":"451","severity":1,"message":"515","line":11,"column":8,"nodeType":"453","messageId":"454","endLine":11,"endColumn":27},{"ruleId":"451","severity":1,"message":"516","line":12,"column":8,"nodeType":"453","messageId":"454","endLine":12,"endColumn":29},{"ruleId":"451","severity":1,"message":"518","line":15,"column":8,"nodeType":"453","messageId":"454","endLine":15,"endColumn":29},{"ruleId":"451","severity":1,"message":"519","line":69,"column":70,"nodeType":"453","messageId":"454","endLine":69,"endColumn":82},{"ruleId":"451","severity":1,"message":"491","line":4,"column":9,"nodeType":"453","messageId":"454","endLine":4,"endColumn":13},{"ruleId":"451","severity":1,"message":"520","line":7,"column":9,"nodeType":"453","messageId":"454","endLine":7,"endColumn":25},{"ruleId":"451","severity":1,"message":"521","line":7,"column":27,"nodeType":"453","messageId":"454","endLine":7,"endColumn":43},{"ruleId":"451","severity":1,"message":"457","line":7,"column":45,"nodeType":"453","messageId":"454","endLine":7,"endColumn":63},{"ruleId":"451","severity":1,"message":"474","line":16,"column":8,"nodeType":"453","messageId":"454","endLine":16,"endColumn":17},{"ruleId":"522","severity":1,"message":"523","line":1,"column":1,"nodeType":"524","endLine":35,"endColumn":3},"no-native-reassign",["525"],"no-negated-in-lhs",["526"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useCollection' is defined but never used.","'handleUserUnfollow' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authFollowingList', 'userLogged.uid', and 'userSnapshot'. Either include them or remove the dependency array.","ArrayExpression",["527"],"'NavItem' is defined but never used.","'ListIcon' is defined but never used.","'UsersIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'newPass' and 'rePass'. Either include them or remove the dependency array.",["528"],"'useDocument' is defined but never used.","'TimeAgo' is defined but never used.","React Hook useEffect has a missing dependency: 'userFollow'. Either include it or remove the dependency array.",["529"],"React Hook useEffect has a missing dependency: 'userSavedList'. Either include it or remove the dependency array.",["530"],"'loadMore' is assigned a value but never used.","'PropTypes' is defined but never used.","'Button' is defined but never used.","'CardContent' is defined but never used.","'Collapse' is defined but never used.","'IconButton' is defined but never used.","'TextField' is defined but never used.","'Typography' is defined but never used.","'VideoCallTwoToneIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'dishName'. Either include it or remove the dependency array.",["531"],"'useRef' is defined but never used.","'useAuthState' is defined but never used.","'auth' is defined but never used.","'db' is defined but never used.","'storage' is defined but never used.","'Avatar' is defined but never used.","'Skeleton' is defined but never used.","'Link' is defined but never used.","'CardHeader' is defined but never used.","'CircularProgress' is defined but never used.","'Modal' is defined but never used.","'Switch' is defined but never used.","'CancelTwoToneIcon' is defined but never used.","'Divider' is defined but never used.","'firebase' is defined but never used.","'Snackbar' is defined but never used.","'Alert' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'userLogged' is assigned a value but never used.","'setOpenSnack' is assigned a value but never used.","'classes' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'provider' is defined but never used.","'GoogleIcon' is defined but never used.","'checkFirebaseAuth' is defined but never used.","React Hook useEffect has missing dependencies: 'userFollowingList', 'userLogged.uid', and 'userSnapshot'. Either include them or remove the dependency array.",["532"],"'CameraIcon' is defined but never used.","'FavoriteRoundedIcon' is defined but never used.","'AccessTimeRoundedIcon' is defined but never used.","'Rating' is defined but never used.","'LocationOnRoundedIcon' is defined but never used.","'handleReport' is assigned a value but never used.","'handleReportPost' is defined but never used.","'handleDeletePost' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"533","fix":"534"},{"desc":"535","fix":"536"},{"desc":"537","fix":"538"},{"desc":"539","fix":"540"},{"desc":"541","fix":"542"},{"desc":"543","fix":"544"},"Update the dependencies array to be: [loading, authFollowingList?.length, authFollowingList, userSnapshot, userLogged.uid]",{"range":"545","text":"546"},"Update the dependencies array to be: [newPass, newPass.length, oldPass.length, rePass, rePass.length]",{"range":"547","text":"548"},"Update the dependencies array to be: [userFollow, userFollow.length, userLogged.uid]",{"range":"549","text":"550"},"Update the dependencies array to be: [userSavedList, userSavedList.length]",{"range":"551","text":"552"},"Update the dependencies array to be: [dishName.length, dishImg, price, dishName]",{"range":"553","text":"554"},"Update the dependencies array to be: [userFollowingList?.length, query, userFollowingList, userSnapshot, userLogged.uid]",{"range":"555","text":"556"},[3185,3221],"[loading, authFollowingList?.length, authFollowingList, userSnapshot, userLogged.uid]",[2043,2090],"[newPass, newPass.length, oldPass.length, rePass, rePass.length]",[2565,2602],"[userFollow, userFollow.length, userLogged.uid]",[2263,2286],"[userSavedList, userSavedList.length]",[5796,5829],"[dishName.length, dishImg, price, dishName]",[4365,4399],"[userFollowingList?.length, query, userFollowingList, userSnapshot, userLogged.uid]"]