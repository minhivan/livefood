[{"/home/miizoo/Desktop/ReactJS/livefood/src/index.js":"1","/home/miizoo/Desktop/ReactJS/livefood/src/App.js":"2","/home/miizoo/Desktop/ReactJS/livefood/src/firebase.js":"3","/home/miizoo/Desktop/ReactJS/livefood/src/routes.js":"4","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Chat.js":"5","/home/miizoo/Desktop/ReactJS/livefood/src/components/GlobalStyle/index.js":"6","/home/miizoo/Desktop/ReactJS/livefood/src/serviceWorker.js":"7","/home/miizoo/Desktop/ReactJS/livefood/src/app/store.js":"8","/home/miizoo/Desktop/ReactJS/livefood/src/features/userSlice.js":"9","/home/miizoo/Desktop/ReactJS/livefood/src/components/Page.js":"10","/home/miizoo/Desktop/ReactJS/livefood/src/components/MediaViewer/index.js":"11","/home/miizoo/Desktop/ReactJS/livefood/src/views/MessengerPage.js":"12","/home/miizoo/Desktop/ReactJS/livefood/src/views/HomePage.js":"13","/home/miizoo/Desktop/ReactJS/livefood/src/views/NotFoundPage.js":"14","/home/miizoo/Desktop/ReactJS/livefood/src/views/auth/SignUpPage.js":"15","/home/miizoo/Desktop/ReactJS/livefood/src/views/auth/SignInPage.js":"16","/home/miizoo/Desktop/ReactJS/livefood/src/views/account/UserProfilePage.js":"17","/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/LeftSideBar/index.js":"18","/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/LeftSideBar/NavItem.js":"19","/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/RightSideBar/index.js":"20","/home/miizoo/Desktop/ReactJS/livefood/src/views/account/EditAccountPage.js":"21","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/ProfileHeader.js":"22","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/AccountNavBar.js":"23","/home/miizoo/Desktop/ReactJS/livefood/src/theme/index.js":"24","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditAccount.js":"25","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditPassword.js":"26","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/ProfileNavBar.js":"27","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileFeed.js":"28","/home/miizoo/Desktop/ReactJS/livefood/src/features/chatSlice.js":"29","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Sidebar/SidebarChat.js":"30","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Sidebar/CreateNewChat.js":"31","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Message.js":"32","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/ChatInput.js":"33","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/index.js":"34","/home/miizoo/Desktop/ReactJS/livefood/src/views/SinglePage.js":"35","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileSaved.js":"36","/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExplorePage.js":"37","/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExplorePeoplePage.js":"38","/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExploreVideoPage.js":"39","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Post.js":"40","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditShop.js":"41","/home/miizoo/Desktop/ReactJS/livefood/src/hooks/getRecipientUser.js":"42","/home/miizoo/Desktop/ReactJS/livefood/src/hooks/services.js":"43","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Action.js":"44","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Content.js":"45","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Header.js":"46","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/RecipeData.js":"47","/home/miizoo/Desktop/ReactJS/livefood/src/components/MediaViewer/Preview.js":"48","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileMenuList.js":"49","/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/Popup.js":"50","/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/AddDishes.js":"51","/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/index.js":"52","/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/Stepper.js":"53","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditNotification.js":"54","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditAbout.js":"55","/home/miizoo/Desktop/ReactJS/livefood/src/views/auth/ForgotPassword.js":"56","/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/AlertPopup.js":"57","/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExplorePeopleItem.js":"58","/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExploreItem.js":"59","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/index.js":"60","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Search/index.js":"61","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Logo/index.js":"62","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Item/index.js":"63","/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/CommentInput.js":"64","/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/index.js":"65","/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/CommentDetails.js":"66","/home/miizoo/Desktop/ReactJS/livefood/src/views/recipe/RecipePage.js":"67","/home/miizoo/Desktop/ReactJS/livefood/src/views/recipe/TopicPage.js":"68","/home/miizoo/Desktop/ReactJS/livefood/src/views/recipe/TrendingPage.js":"69","/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/ListUserInProfile.js":"70","/home/miizoo/Desktop/ReactJS/livefood/src/components/Recipe/ListRecipe.js":"71","/home/miizoo/Desktop/ReactJS/livefood/src/components/Recipe/NewestRecipe.js":"72","/home/miizoo/Desktop/ReactJS/livefood/src/views/recipe/ResultRecipePace.js":"73","/home/miizoo/Desktop/ReactJS/livefood/src/images/icons/Google.js":"74","/home/miizoo/Desktop/ReactJS/livefood/src/views/LocationPage.js":"75","/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/PostUtil.js":"76","/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/CommentUtil.js":"77","/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/Survey.js":"78","/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/ListUserLikePost.js":"79","/home/miizoo/Desktop/ReactJS/livefood/src/components/DefaultLayout.js":"80","/home/miizoo/Desktop/ReactJS/livefood/src/components/MainLayout.js":"81","/home/miizoo/Desktop/ReactJS/livefood/src/theme/typography.js":"82","/home/miizoo/Desktop/ReactJS/livefood/src/views/LandingPage.js":"83","/home/miizoo/Desktop/ReactJS/livefood/src/hooks/scrollToTop.js":"84","/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/AddVideo.js":"85","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileVideo.js":"86","/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/EditPost.js":"87","/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/OpenRating.js":"88","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileVoteRating.js":"89"},{"size":674,"mtime":1616998952304,"results":"90","hashOfConfig":"91"},{"size":2037,"mtime":1621337641624,"results":"92","hashOfConfig":"91"},{"size":1157,"mtime":1618332345707,"results":"93","hashOfConfig":"91"},{"size":4452,"mtime":1621308414636,"results":"94","hashOfConfig":"91"},{"size":4889,"mtime":1619785183629,"results":"95","hashOfConfig":"91"},{"size":797,"mtime":1616998797535,"results":"96","hashOfConfig":"91"},{"size":5796,"mtime":1615795454946,"results":"97","hashOfConfig":"91"},{"size":262,"mtime":1617122372343,"results":"98","hashOfConfig":"91"},{"size":468,"mtime":1617121688821,"results":"99","hashOfConfig":"91"},{"size":625,"mtime":1615968337340,"results":"100","hashOfConfig":"91"},{"size":23613,"mtime":1621228105576,"results":"101","hashOfConfig":"91"},{"size":3269,"mtime":1619687274089,"results":"102","hashOfConfig":"91"},{"size":754,"mtime":1621336651788,"results":"103","hashOfConfig":"91"},{"size":1488,"mtime":1616779633942,"results":"104","hashOfConfig":"91"},{"size":8319,"mtime":1620796125986,"results":"105","hashOfConfig":"91"},{"size":8454,"mtime":1620882095931,"results":"106","hashOfConfig":"91"},{"size":4403,"mtime":1621324156641,"results":"107","hashOfConfig":"91"},{"size":5924,"mtime":1621333833530,"results":"108","hashOfConfig":"91"},{"size":2348,"mtime":1620147385445,"results":"109","hashOfConfig":"91"},{"size":9522,"mtime":1621227300654,"results":"110","hashOfConfig":"91"},{"size":2959,"mtime":1619871669807,"results":"111","hashOfConfig":"91"},{"size":16418,"mtime":1621317936286,"results":"112","hashOfConfig":"91"},{"size":5009,"mtime":1619836847297,"results":"113","hashOfConfig":"91"},{"size":664,"mtime":1620698534894,"results":"114","hashOfConfig":"91"},{"size":17800,"mtime":1620186764172,"results":"115","hashOfConfig":"91"},{"size":6518,"mtime":1620922113321,"results":"116","hashOfConfig":"91"},{"size":4602,"mtime":1620927032158,"results":"117","hashOfConfig":"91"},{"size":3107,"mtime":1621309824841,"results":"118","hashOfConfig":"91"},{"size":821,"mtime":1617387901510,"results":"119","hashOfConfig":"91"},{"size":4563,"mtime":1619420195325,"results":"120","hashOfConfig":"91"},{"size":5607,"mtime":1619931487570,"results":"121","hashOfConfig":"91"},{"size":1796,"mtime":1619546645994,"results":"122","hashOfConfig":"91"},{"size":5031,"mtime":1620919687978,"results":"123","hashOfConfig":"91"},{"size":5019,"mtime":1621336651772,"results":"124","hashOfConfig":"91"},{"size":3380,"mtime":1620496930753,"results":"125","hashOfConfig":"91"},{"size":3768,"mtime":1621309799446,"results":"126","hashOfConfig":"91"},{"size":6919,"mtime":1621335783716,"results":"127","hashOfConfig":"91"},{"size":709,"mtime":1620027664401,"results":"128","hashOfConfig":"91"},{"size":3813,"mtime":1621137252070,"results":"129","hashOfConfig":"91"},{"size":3583,"mtime":1621336651760,"results":"130","hashOfConfig":"91"},{"size":7417,"mtime":1620922047539,"results":"131","hashOfConfig":"91"},{"size":155,"mtime":1617010171560,"results":"132","hashOfConfig":"91"},{"size":6383,"mtime":1621006043836,"results":"133","hashOfConfig":"91"},{"size":7695,"mtime":1620880128247,"results":"134","hashOfConfig":"91"},{"size":6238,"mtime":1621220872528,"results":"135","hashOfConfig":"91"},{"size":2917,"mtime":1621220216428,"results":"136","hashOfConfig":"91"},{"size":4540,"mtime":1621096502353,"results":"137","hashOfConfig":"91"},{"size":2328,"mtime":1619664366876,"results":"138","hashOfConfig":"91"},{"size":6099,"mtime":1621309791258,"results":"139","hashOfConfig":"91"},{"size":16054,"mtime":1621220016726,"results":"140","hashOfConfig":"91"},{"size":10756,"mtime":1620186593895,"results":"141","hashOfConfig":"91"},{"size":5052,"mtime":1621099237890,"results":"142","hashOfConfig":"91"},{"size":26845,"mtime":1621098602840,"results":"143","hashOfConfig":"91"},{"size":7421,"mtime":1620959546555,"results":"144","hashOfConfig":"91"},{"size":14752,"mtime":1621339317736,"results":"145","hashOfConfig":"91"},{"size":5518,"mtime":1620707093768,"results":"146","hashOfConfig":"91"},{"size":1643,"mtime":1619876828158,"results":"147","hashOfConfig":"91"},{"size":7581,"mtime":1620894218315,"results":"148","hashOfConfig":"91"},{"size":3259,"mtime":1621335594032,"results":"149","hashOfConfig":"91"},{"size":1091,"mtime":1620880930652,"results":"150","hashOfConfig":"91"},{"size":3468,"mtime":1620287257157,"results":"151","hashOfConfig":"91"},{"size":741,"mtime":1616172292428,"results":"152","hashOfConfig":"91"},{"size":12970,"mtime":1620922436116,"results":"153","hashOfConfig":"91"},{"size":9094,"mtime":1621311000536,"results":"154","hashOfConfig":"91"},{"size":2244,"mtime":1621164720274,"results":"155","hashOfConfig":"91"},{"size":3833,"mtime":1621226301232,"results":"156","hashOfConfig":"91"},{"size":7351,"mtime":1621005376405,"results":"157","hashOfConfig":"91"},{"size":4119,"mtime":1621005376397,"results":"158","hashOfConfig":"91"},{"size":2792,"mtime":1621005380253,"results":"159","hashOfConfig":"91"},{"size":6630,"mtime":1621181761890,"results":"160","hashOfConfig":"91"},{"size":2953,"mtime":1621096458297,"results":"161","hashOfConfig":"91"},{"size":1845,"mtime":1621096425386,"results":"162","hashOfConfig":"91"},{"size":4731,"mtime":1621097131988,"results":"163","hashOfConfig":"91"},{"size":1584,"mtime":1615966706650,"results":"164","hashOfConfig":"91"},{"size":13315,"mtime":1620894411381,"results":"165","hashOfConfig":"91"},{"size":7882,"mtime":1621179596017,"results":"166","hashOfConfig":"91"},{"size":5769,"mtime":1621182192472,"results":"167","hashOfConfig":"91"},{"size":16555,"mtime":1620802481496,"results":"168","hashOfConfig":"91"},{"size":7974,"mtime":1621181813613,"results":"169","hashOfConfig":"91"},{"size":1076,"mtime":1615825508670,"results":"170","hashOfConfig":"91"},{"size":350,"mtime":1621006976692,"results":"171","hashOfConfig":"91"},{"size":648,"mtime":1620698512195,"results":"172","hashOfConfig":"91"},{"size":653,"mtime":1620960705973,"results":"173","hashOfConfig":"91"},{"size":343,"mtime":1621148696785,"results":"174","hashOfConfig":"91"},{"size":13729,"mtime":1621221250347,"results":"175","hashOfConfig":"91"},{"size":6876,"mtime":1621309811694,"results":"176","hashOfConfig":"91"},{"size":19599,"mtime":1621219531848,"results":"177","hashOfConfig":"91"},{"size":10500,"mtime":1621315116823,"results":"178","hashOfConfig":"91"},{"size":6562,"mtime":1621331817953,"results":"179","hashOfConfig":"91"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},"14bgf45",{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"182"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"182"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"182"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"182"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"182"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"182"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"182"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"182"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"182"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"182"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"182"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"182"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"182"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"182"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"182"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"182"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"182"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"182"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"182"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"182"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"182"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"182"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"182"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"182"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"182"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"182"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"182"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"182"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"182"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"182"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"182"},"/home/miizoo/Desktop/ReactJS/livefood/src/index.js",[],["390","391"],"/home/miizoo/Desktop/ReactJS/livefood/src/App.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/firebase.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/routes.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Chat.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/GlobalStyle/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/serviceWorker.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/app/store.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/features/userSlice.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Page.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/MediaViewer/index.js",["392","393","394"],"import React, {useEffect, useState} from \"react\";\nimport {Button, CardContent, Collapse, IconButton, Modal, useTheme} from \"@material-ui/core\";\nimport CancelTwoToneIcon from \"@material-ui/icons/CancelTwoTone\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {Link} from \"react-router-dom\";\nimport Divider from '@material-ui/core/Divider';\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport {Rating, ToggleButton} from \"@material-ui/lab\";\nimport FavoriteRoundedIcon from \"@material-ui/icons/FavoriteRounded\";\nimport FavoriteBorderTwoToneIcon from \"@material-ui/icons/FavoriteBorderTwoTone\";\nimport ModeCommentOutlinedIcon from \"@material-ui/icons/ModeCommentOutlined\";\nimport BookmarkBorderOutlinedIcon from \"@material-ui/icons/BookmarkBorderOutlined\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport clsx from \"clsx\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport ListComment from \"../Comments\";\nimport BookmarkRoundedIcon from \"@material-ui/icons/BookmarkRounded\";\nimport {handleSavePost, handleUnSavedPost, handleLikePost, handleDislikePost} from \"../../hooks/services\";\nimport CommentInput from \"../Comments/CommentInput\";\nimport ListUserLikePost from \"../Popup/ListUserLikePost\";\nimport {db} from \"../../firebase\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport MoreHorizRoundedIcon from \"@material-ui/icons/MoreHorizRounded\";\nimport PostUtil from \"../Popup/PostUtil\";\nimport EditPost from \"../Popup/EditPost\";\n\n\n\n\nfunction getModalStyle() {\n    const top = 50 ;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        fontSize: \"0.875rem\"\n    },\n    label: {\n        paddingLeft: \"10px\"\n    },\n    paper: {\n        position: 'absolute',\n        maxWidth: 950,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        \"&:focus\": {\n            outline: \"none\"\n        },\n        maxHeight: \"600px\",\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        overflow: \"hidden\",\n        borderRadius: \"16px\"\n    },\n    // modalHeader: {\n    //     display: \"flex\",\n    //     justifyContent: \"flex-start\",\n    // },\n    buttonClose: {\n        position: \"absolute\",\n        left: \"0\",\n        top: \"0\"\n    },\n    imgHolder: {\n        width: \"600px\",\n        paddingBottom: \"100%\",\n        position: \"relative\",\n        overflow : \"hidden\",\n        backgroundColor: \"rgb(232, 231, 224)\"\n    },\n    img: {\n        objectFit: \"contain\",\n        height: \"100%\",\n        left: \"0\",\n        position: \"absolute\",\n        top: \"0\",\n        width: \"100%\",\n    },\n    leftPanel: {\n        height: \"100%\",\n        maxWidth: \"600px\",\n        position: \"relative\"\n    },\n    rightPanel: {\n        width: \"350px\",\n        height: \"100%\",\n        position: \"relative\"\n    },\n    captionText: {\n        whiteSpace: \"pre-line\",\n        lineHeight: \"26px\",\n\n    },\n    modalBody: {\n        height: \"auto\"\n    },\n    displayLike: {\n        padding: \"0 0 20px 20px\",\n    },\n    likeButton: {\n        border: \"0\",\n        backgroundColor: \"none\",\n        borderRadius: \"50%\",\n        '&:hover': {\n            color: 'red',\n        }\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    paragraph: {\n        lineHeight: \"26px\",\n        textAlign: \"justify\",\n        whiteSpace: \"pre-line\",\n        fontSize: \"0.875rem\"\n    },\n    paragraphHead: {\n        fontWeight: \"600\",\n        fontSize: \"0.875rem\",\n        marginBottom: \"10px\",\n        padding: \"5px 0\",\n        textTransform: \"uppercase\",\n        borderBottom : \"1px solid #000\"\n    },\n    selected: {\n        backgroundColor: \"unset !important\"\n    },\n    commentContainer: {\n        marginTop: \"auto\",\n        padding: \"10px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n    },\n    cmtButtonLabel: {\n        fontWeight: \"bold\",\n        textTransform: \"capitalize\",\n        fontSize: \"14px\"\n    },\n    direction: {\n        minHeight: \"auto\"\n    },\n    data: {\n        overflowY: \"auto\"\n    },\n    likesCount: {\n        cursor: \"pointer\",\n        '&:hover': {\n            textDecoration: \"underline\",\n        }\n    },\n    buttonNext: {\n        position: \"absolute\",\n        top: \"50%\",\n        right: \"10px\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        backgroundColor: \"#fff\",\n        '&:hover': {\n            backgroundColor: \"#fff\"\n        },\n\n    },\n    buttonBack: {\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"10px\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        backgroundColor: \"#fff\",\n        '&:hover': {\n            backgroundColor: \"#fff\"\n        },\n    }\n}));\n\nfunction MediaViewer(props){\n\n    const {open, handleClose, postId, post, postAuthor, userLogged} = props;\n    const classes = useStyles();\n    const [modalStyle] = useState(getModalStyle);\n    const [selected, setSelected] = useState(false);\n    const [expanded, setExpanded] = useState(true);\n    const [saveSelected, setSaveSelected] = useState(false);\n    const [openLikesList, setOpenLikesList] = useState(false);\n    const [isReadMore, setIsReadMore] = useState(true);\n    const [userLoggedData, setUserLoggedData] = useState({});\n    const [postSnapshot] = useDocument(postId && db.collection('posts').doc(postId));\n    const [openUtil, setOpenUtil] = useState(false);\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [openEdit, setOpenEdit] = useState(false);\n\n    const maxSteps = post?.media?.length;\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleClickUtil = () => {\n        setOpenUtil(true);\n    };\n\n    const handleCloseUtil = () => {\n        setOpenUtil(false);\n    };\n\n    const handleCloseEdit = () => {\n        setOpenEdit(false);\n    };\n    const handleOpenEdit = () => {\n        setOpenEdit(true)\n    }\n\n\n    useEffect(() => {\n        if(userLogged){\n            setUserLoggedData({\n                uid: userLogged.uid,\n                photoURL: userLogged.photoURL,\n                displayName: userLogged.displayName\n            })\n        }\n    }, [userLogged])\n\n    const handleOpenLikesList = () => {\n        setOpenLikesList(true);\n    }\n\n    const handleCloseLikesList = () => {\n        setOpenLikesList(false);\n    }\n\n    const toggleReadMore = () => {\n        setIsReadMore(!isReadMore);\n    };\n\n\n    dayjs.extend(relativeTime);\n    let postCreated  = null;\n\n    if(post?.timestamp){\n        postCreated = new Date(post?.timestamp.seconds * 1000).toLocaleString();\n    }\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    // Handle like and dislike action\n    const likePost = () => {\n        setSelected(true);\n        handleLikePost(postId, userLoggedData, post.uid)\n    }\n\n    const dislikePost = () => {\n        setSelected(false);\n        handleDislikePost(postId, userLogged.uid, post.uid)\n    }\n\n    const savePost = () => {\n        // Save post id to user data, and push to post data\n        setSaveSelected(true);\n        handleSavePost(postId, userLogged.uid);\n    }\n\n    const unsavedPost = () => {\n        // Save post id to user data, and push to post data\n        setSaveSelected(false);\n        handleUnSavedPost(postId, userLogged.uid);\n    }\n\n    useEffect(() => {\n        if(userLogged){\n            if(typeof postSnapshot?.data()?.likeBy !== 'undefined' && postSnapshot?.data()?.likeBy.includes(userLogged.uid)){\n                setSelected(true);\n            }\n            if(typeof postSnapshot?.data()?.saveBy !== 'undefined' && postSnapshot?.data()?.saveBy.includes(userLogged.uid)){\n                setSaveSelected(true);\n            }\n        }\n    }, [postSnapshot, userLogged])\n\n    return (\n        <Modal\n            className={classes.root}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n        >\n            <div style={modalStyle} className={classes.paper}>\n                <div className={classes.leftPanel}>\n                    {\n                        post?.media?.length > 0 ? (\n                            <>\n                                {\n                                    post?.media[activeStep]?.type === \"video/mp4\" ? (\n                                        <div className={classes.imgHolder}>\n                                            <video controls className={classes.img} muted=\"muted\" onClick={e => e.target.play()}>\n                                                <source src={post?.media[activeStep]?.mediaPath} type=\"video/mp4\"/>\n                                            </video>\n                                        </div>\n                                    ) : (\n                                        <div className={classes.imgHolder}>\n                                            <img src={post?.media[activeStep]?.mediaPath} alt=\"\" className={classes.img}/>\n                                        </div>\n                                    )\n                                }\n                                {\n                                    post?.media?.length > 1 ? (\n                                        <>\n                                            <IconButton onClick={handleNext} aria-label=\"Next\" disabled={activeStep === maxSteps - 1} className={classes.buttonNext}>\n                                                <KeyboardArrowRight />\n                                            </IconButton>\n\n                                            <IconButton onClick={handleBack} disabled={activeStep === 0} className={classes.buttonBack} aria-label=\"Back\">\n                                                <KeyboardArrowLeft />\n                                            </IconButton>\n                                        </>\n                                    ) : null\n                                }\n                            </>\n                        ) : <Skeleton animation=\"wave\" variant=\"rect\" className={classes.media} />\n                    }\n                    <div className={classes.buttonClose}>\n                        <IconButton aria-label=\"Cancel\" color=\"inherit\" onClick={handleClose} >\n                            <CancelTwoToneIcon />\n                        </IconButton>\n                    </div>\n                </div>\n                <Divider orientation=\"vertical\" flexItem />\n                <div className={classes.rightPanel}>\n                    <div className=\"review__data\">\n                        {/* Card header */}\n                        <div className={classes.modalHeader}>\n                            <CardHeader\n                                avatar={\n                                    <Avatar alt={postAuthor?.displayName} src={postAuthor?.photoURL}/>\n                                }\n                                title={\n                                    <Link to={`/profile/${postAuthor?.uid}`} style={{fontWeight: \"bold\"}}>{postAuthor?.displayName}</Link>\n                                }\n                                subheader={dayjs(postCreated).fromNow()}\n                                action={\n                                    <IconButton aria-label=\"settings\" onClick={handleClickUtil}>\n                                        <MoreHorizRoundedIcon />\n                                    </IconButton>\n                                }\n                            />\n                        </div>\n                        <Divider />\n\n                        <div className={classes.data}>\n                            {/* Card body */}\n                            <div className={classes.modalBody}>\n                                <div className=\"post__caption\">\n                                    {\n                                        post.caption.length > 50 ? (\n                                            <span className={classes.captionText} >\n                                                {\n                                                    isReadMore ? post.caption.slice(0, 50) : post.caption}\n                                                <span onClick={toggleReadMore} style={{fontWeight: \"bold\", cursor: \"pointer\", color: \"#8e8e8e\"}}>\n                                                    {isReadMore ? \"...read more\" : null\n                                                    }\n                                            </span>\n                                            </span>\n                                        ) : post.caption\n                                    }\n                                </div>\n                            </div>\n                            <Divider />\n\n                            {/* Card action */}\n                            <CardActions disableSpacing>\n                                {\n                                    userLogged ? (\n                                        <div className=\"post__button\">\n                                            <div className=\"action__like\">\n                                                <ToggleButton\n                                                    value=\"check\"\n                                                    selected={selected}\n                                                    classes={{\n                                                        root: classes.likeButton,\n                                                        selected: classes.selected,\n                                                    }}\n                                                    onClick={() => {\n                                                        if(!selected) likePost();\n                                                        else dislikePost();\n                                                    }}\n                                                >\n                                                    {\n                                                        selected ? <FavoriteRoundedIcon style={{color: \"red\"}}/> : <FavoriteBorderTwoToneIcon />\n                                                    }\n                                                </ToggleButton>\n\n                                            </div>\n                                            <div className=\"action__comment\">\n                                                <IconButton aria-label=\"comment\">\n                                                    <ModeCommentOutlinedIcon/>\n                                                </IconButton>\n                                            </div>\n                                            <div className=\"action__share\">\n                                                <ToggleButton\n                                                    value=\"check\"\n                                                    selected={saveSelected}\n                                                    // className={classes.likeButton}\n                                                    classes={{\n                                                        root: classes.likeButton,\n                                                        selected: classes.selected,\n                                                    }}\n                                                    onClick={() => {\n                                                        if(!saveSelected) savePost();\n                                                        else unsavedPost();\n                                                    }}\n                                                >\n                                                    {\n                                                        saveSelected ? <BookmarkRoundedIcon style={{color: \"black\"}}/> : <BookmarkBorderOutlinedIcon />\n                                                    }\n                                                </ToggleButton>\n                                            </div>\n                                        </div>\n                                    ) : null\n\n                                }\n\n                                {\n                                    post?.data ? (\n                                        <div className=\"action__expand\">\n                                            <IconButton\n                                                className={clsx(classes.expand, {\n                                                    [classes.expandOpen]: expanded,\n                                                })}\n                                                onClick={handleExpandClick}\n                                                aria-expanded={expanded}\n                                                aria-label=\"show more\"\n                                            >\n                                                <ExpandMoreIcon />\n                                            </IconButton>\n                                        </div>\n                                    ) : null\n                                }\n\n\n                            </CardActions>\n\n                            {/* Like count */}\n                            {\n                                postSnapshot?.data()?.likeCount > 0 ? (\n                                    <div className={classes.displayLike}>\n                                        <span className={classes.likesCount} onClick={handleOpenLikesList}><b>{postSnapshot?.data()?.likeCount.toLocaleString()} {postSnapshot?.data()?.likeCount  === 1 ? 'Like' : 'Likes'}</b></span>\n                                    </div>\n                                ) : null\n                            }\n                            <Divider />\n\n                            {/*Posts*/}\n                            {\n                                post?.data ? (\n                                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit style={{minHeight: \"auto\"}}>\n                                        <>\n                                            <CardContent className=\"recipe_layout__content-left\">\n                                                <Typography paragraph className={classes.paragraphHead} style={{display: \"flex\", lineHeight: \"30px\"}}>Rating:\n                                                    <Rating style={{marginLeft: \"5px\"}} name=\"read-only\" value={post.rating} precision={0.1} readOnly />\n                                                </Typography>\n                                                <div className=\"recipe_layout__facts\">\n                                                    <div className=\"recipe-facts__info\">\n                                                        <div className=\"recipe-facts__details recipe-facts__prepare\"><span\n                                                            className=\"recipe-facts__title\">Prepare in:</span> <span>{post?.data?.prepTime} {post?.data?.prepUnit}</span></div>\n                                                        <div className=\"recipe-facts__details recipe-facts__cooking\"><span\n                                                            className=\"recipe-facts__title\">Cook in:</span> <span\n                                                            className=\"theme-color\">{post?.data?.cookTime} {post?.data?.cookUnit}</span></div>\n                                                    </div>\n                                                    <div className=\"recipe-facts__info\">\n                                                        <div className=\"recipe-facts__details recipe-facts__servings\"><span\n                                                            className=\"recipe-facts__title\">Serves:</span> <span\n                                                            className=\"theme-color\">{post?.data?.serve}</span></div>\n                                                    </div>\n                                                </div>\n                                                <Typography paragraph className={classes.paragraphHead} >Category: <Link style={{textDecoration: \"underline\"}} to={`/recipe/topic/${post?.data?.category?.toLowerCase()}`}>{post?.data?.category}</Link></Typography>\n                                                <Typography paragraph className={classes.paragraphHead}>Ingredients:</Typography>\n                                                <Typography paragraph className={classes.paragraph}>{post?.data?.ingredient}</Typography>\n                                            </CardContent>\n                                            <CardContent className=\"recipe_layout__content-right\">\n                                                <Typography paragraph className={classes.paragraphHead}>Direction:</Typography>\n                                                <Typography paragraph className={classes.paragraph}>{post?.data?.direction}</Typography>\n                                            </CardContent>\n                                        </>\n                                        <Divider />\n                                    </Collapse>\n                                ) : null\n                            }\n\n                            {/* Comment*/}\n                            <ListComment postId={postId} isPopup={`true`} commentsCount={postSnapshot?.data()?.commentsCount}/>\n\n                        </div>\n                        {\n                            userLogged ? (\n                                <CommentInput user={userLogged} postId={postId} type={post.type} path={'preview'}  postAuthor={post.uid}/>\n                            ) : null\n                        }\n                        {\n                            openLikesList ? (\n                                <ListUserLikePost open={openLikesList} handleClose={handleCloseLikesList} userLogged={userLogged} postLike={postSnapshot?.data()?.likeBy} likesCount={postSnapshot?.data()?.likeCount}/>\n                            ) : null\n                        }\n                        {\n                            userLogged && openUtil ? (\n                                <PostUtil open={openUtil} handleClose={handleCloseUtil} handleOpenEdit={handleOpenEdit} uid={userLogged.uid} opponentID={post.uid} postID={postId} isSave={saveSelected} />\n                            ) : null\n                        }\n                        {\n                            openEdit ? (\n                                <EditPost open={openEdit} handleClose={handleCloseEdit} post={post} postId={postId} />\n                            ) : null\n                        }\n                    </div>\n                </div>\n            </div>\n        </Modal>\n    )\n}\nexport default MediaViewer","/home/miizoo/Desktop/ReactJS/livefood/src/views/MessengerPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/HomePage.js",["395"],"import React, {useEffect} from \"react\";\nimport Page from \"../components/Page\";\nimport RightSideBar from \"../components/SideBar/RightSideBar\";\nimport NewFeed from \"../components/Posts\";\nimport NavBar from \"../components/SideBar/LeftSideBar\";\nimport {Navigate} from \"react-router-dom\";\n\n\n\nconst HomePage = (props) => {\n    window.scroll({top: 0, left: 0});\n\n    if (!props.userLogged){\n        return <Navigate to=\"/explore\"/>\n    }\n\n    return (\n        <Page\n            title=\"LiveFood\"\n            className=\"app__bodyContainer\"\n        >\n            <NavBar userLogged={props.userLogged} />\n            <NewFeed userLogged={props.userLogged}/>\n            <RightSideBar userLogged={props.userLogged}/>\n        </Page>\n    )\n}\n\nexport default HomePage;","/home/miizoo/Desktop/ReactJS/livefood/src/views/NotFoundPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/auth/SignUpPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/auth/SignInPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/account/UserProfilePage.js",["396","397"],"import React, {useEffect, useState} from \"react\";\nimport Page from \"../../components/Page\";\nimport {db} from \"../../firebase\";\nimport ProfileHeader from \"../../components/Profile/ProfileHeader\";\nimport {useParams} from \"react-router\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport ProfileVideo from \"../../components/Profile/Content/ProfileVideo\";\nimport ProfileNavBar from \"../../components/Profile/ProfileNavBar\";\nimport {Divider} from \"@material-ui/core\";\n\nimport ProfileFeed from \"../../components/Profile/Content/ProfileFeed\";\nimport ProfileSaved from \"../../components/Profile/Content/ProfileSaved\";\nimport ProfileMenuList from \"../../components/Profile/Content/ProfileMenuList\";\nimport pic from \"../../images/Background/undraw_page_not_found_su7k.svg\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport ProfileVoteRating from \"../../components/Profile/Content/ProfileVoteRating\";\n\n\nfunction content(action, id, userLogged, userSnapshot){\n    switch (action){\n        case \"feed\":\n            return <ProfileFeed uid={id} userLogged={userLogged} type=\"post\"/>\n        case \"channel\":\n            return <ProfileVideo uid={id} userLogged={userLogged} type=\"video\"/>\n        case \"saved\":\n            return <ProfileSaved uid={id} userLogged={userLogged} type=\"saved\"/>\n        case \"dishes\":\n            return <ProfileMenuList uid={id} userLogged={userLogged} userSnapshot={userSnapshot} type=\"dishes\"/>\n        case \"vote\":\n            return <ProfileVoteRating uid={id} userLogged={userLogged} userSnapshot={userSnapshot} type=\"vote\"/>\n        default:\n            return <></>\n    }\n}\n\nconst useStyles = makeStyles((theme) => ({\n\n    wrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        maxHeight: \"300px\",\n        width: \"100%\"\n    },\n    redirect: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        textAlign: \"center\",\n        paddingTop: \"20px\"\n    },\n    details: {\n        padding: \"20px 0\"\n    },\n\n    img: {\n        width: \"320px\",\n        display: \"inline-block\",\n        maxWidth: \"100%\",\n        marginTop: \"50px\"\n    },\n    imgHolder: {\n        textAlign: \"center\"\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\n\nconst UserProfilePage = (props) => {\n    const {userLogged} = props;\n    let { id } = useParams();\n    const classes = useStyles();\n    const [userData, loading] = useDocument(id && db.collection('users').doc(id));\n    const userSnapshot = userData?.data();\n\n    return(\n\n        <Page\n            title={`${userSnapshot?.displayName} | LiveFood`}\n            className=\"app__bodyContainer\"\n        >\n            {\n                loading ? (\n                    <Backdrop className={classes.backdrop} open={loading} >\n                        <CircularProgress color=\"inherit\" />\n                    </Backdrop>\n                ) : (\n                    userSnapshot ? (\n                        <div className=\"profile\">\n                            {/* User profile */}\n                            <ProfileHeader userSnapshot={userSnapshot} count={userData?.data()?.post?.length} userLogged={userLogged}/>\n                            {/*  User content  */}\n                            <Divider />\n                            <ProfileNavBar userSnapshot={userSnapshot}/>\n                            <Divider />\n                            {content(props.pagePath, id, userLogged)}\n                        </div>\n                    ) : (\n                        <>\n                            <div className={classes.wrapper}>\n                                <div className={classes.imgHolder}>\n                                    <img src={pic} alt=\"404\" className={classes.img}/>\n                                </div>\n                                <div className={classes.details}>\n                                    <h1>This page doesn’t exist</h1>\n                                    <p>Please check your URL or return to LiveFood home.</p>\n                                </div>\n                            </div>\n                        </>\n                    )\n                )\n\n            }\n\n        </Page>\n    )\n}\n\nexport default UserProfilePage","/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/LeftSideBar/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/LeftSideBar/NavItem.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/RightSideBar/index.js",["398","399","400","401","402","403","404","405"],"import React, {useEffect, useState} from \"react\";\nimport '../RightSideBar.css';\n\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {Button, Hidden, makeStyles, TextField} from \"@material-ui/core\";\nimport {blue} from \"@material-ui/core/colors\";\nimport {db} from \"../../../firebase\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport {Link} from \"react-router-dom\";\nimport {handleUserFollow, handleUserUnfollow} from \"../../../hooks/services\";\nimport firebase from \"firebase\";\nimport {MessageCircle as CameraIcon} from \"react-feather\";\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    root: {\n        width: \"100%\",\n    },\n    icon: {\n        color: \"#050505\",\n        margin: \"20px\"\n    },\n    wrapper: {\n        padding: \"20px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        maxHeight: \"200px\",\n        width: \"100%\"\n    },\n    labelButton: {\n        fontSize: \"14px\",\n        textTransform : \"capitalize\",\n    },\n    displayName: {\n        maxWidth: \"120px\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n    }\n}));\n\n\nfunction RightSideBar(props) {\n    const classes = useStyles();\n    const [users, setUsers] = useState([])\n    const { userLogged } = props;\n    const [chat, setChat] = useState([]);\n\n    const userRef = userLogged?.uid && db.collection('users').doc(userLogged.uid);\n    const [userSnapshot, loading] = useDocument(userRef);\n    const authFollowingList = userSnapshot?.data()?.following;\n\n    const [userLoggedData, setUserLoggedData] = useState({});\n\n    useEffect(() => {\n        if(userLogged){\n            setUserLoggedData({\n                uid: userLogged.uid,\n                photoURL: userLogged.photoURL,\n                displayName: userLogged.displayName\n            })\n        }\n    }, [userLogged])\n\n    // List user\n    useEffect(() => {\n        var followingList = {};\n        if(typeof authFollowingList !== 'undefined' && authFollowingList?.length >= 0){\n            followingList = userSnapshot.data().following\n            userLogged.uid && followingList.push(userLogged.uid);\n            return db.collection(\"users\")\n                .limit(10)\n                .get().then(snapshot => {\n                    let data = [];\n                    snapshot.forEach(function(doc) {\n                        // doc.data() is never undefined for query doc snapshots\n                        if(!followingList.includes(doc.id)){\n                            data.push({id: doc.id, opponent: doc.data()})\n                        }\n                    });\n                    setUsers(data);\n                })\n        }else{\n             return db.collection(\"users\")\n                .where(firebase.firestore.FieldPath.documentId() ,'!=' , userLogged?.uid )\n                .limit(4)\n                 .get().then(snapshot => {\n                    setUsers(snapshot.docs.map(doc => ({\n                        id: doc.id,\n                        opponent: doc.data(),\n                    })));\n                })\n        }\n    }, [loading, authFollowingList?.length])\n\n    return(\n        <Hidden mdDown>\n            <div className=\"app__rightSideBar\">\n                <div className=\"sideBar__container\">\n                    {/* Chat to sasimi */}\n                    {/*<div className=\"trending__container sideBar__containerBlock\">*/}\n                    {/*    <div className=\"trending__header bottomDivider padding-10-20\">*/}\n                    {/*        <h2>Chat to Sasimi ?</h2>*/}\n                    {/*        <IconButton aria-label=\"comment\" >*/}\n                    {/*            <SettingsOutlinedIcon />*/}\n                    {/*        </IconButton>*/}\n                    {/*    </div>*/}\n                    {/*    <div className=\"trending__content bottomDivider\">*/}\n                    {/*        <div className=\"chat__container\">*/}\n                    {/*            /!*<div className=\"chat__content\">*!/*/}\n                    {/*            /!*    <div className=\"chat__message false\">*!/*/}\n                    {/*            /!*        <div className=\"chat__details\"><span*!/*/}\n                    {/*            /!*            className=\"makeStyles-chat-36\">hi broo</span></div>*!/*/}\n                    {/*            /!*    </div>*!/*/}\n                    {/*            /!*</div>*!/*/}\n                    {/*            /!*<div className=\"chat__content\">*!/*/}\n                    {/*            /!*    <div className=\"chat__message sender\">*!/*/}\n                    {/*            /!*        <div className=\"chat__details\"><span*!/*/}\n                    {/*            /!*            className=\"makeStyles-chat-36\">whatsup  asd asd asd asd asd asda sdasd asda sdasd asda dasda sd</span></div>*!/*/}\n                    {/*            /!*    </div>*!/*/}\n                    {/*            /!*</div>*!/*/}\n                    {/*            <div className={classes.wrapper}>*/}\n                    {/*                <div className={classes.none}>*/}\n                    {/*                    <CameraIcon*/}\n                    {/*                        className={classes.icon}*/}\n                    {/*                        size=\"40\"*/}\n                    {/*                    />*/}\n                    {/*                </div>*/}\n                    {/*                <h4 style={{paddingBottom: \"10px\"}}>Chat to Sasimi now</h4>*/}\n                    {/*            </div>*/}\n                    {/*            <div className=\"makeStyles-bottom-20\" />*/}\n                    {/*        </div>*/}\n                    {/*    </div>*/}\n                    {/*    <div role=\"button\" className=\"padding-10-20 show-more right-chat-input\">*/}\n                    {/*        <TextField*/}\n                    {/*            className=\"right-chat-input__holder\"*/}\n                    {/*            placeholder=\"What do you want ?\"*/}\n                    {/*            value={chat}*/}\n                    {/*            onChange={event => setChat(event.target.value)}*/}\n                    {/*            InputProps={{ disableUnderline: true}}*/}\n                    {/*            size=\"small\"*/}\n                    {/*        />*/}\n                    {/*        <Button variant=\"contained\">*/}\n                    {/*            Send*/}\n                    {/*        </Button>*/}\n                    {/*    </div>*/}\n                    {/*</div>*/}\n\n                    {/* Suggest user */}\n                    <div className=\"suggest__container sideBar__containerBlock\">\n                        <div className=\"suggest__header padding-20 bottomDivider\">\n                            <h2>Who to follow</h2>\n                        </div>\n                        {\n                            users ? (users.slice(0,4).map(({id, opponent}) => (\n                                <div key={id} className=\"suggest__content  bottomDivider\">\n                                    <CardHeader\n                                        classes={{\n                                            title: classes.displayName\n                                        }}\n                                        className=\"suggest__user\"\n                                        avatar={\n                                            <Avatar className={classes.avatar} aria-label={opponent.displayName} src={opponent.photoURL} />\n                                        }\n                                        title={\n                                            <Link to={`profile/${id}`}>{opponent.displayName}</Link>\n                                        }\n                                        subheader={opponent.fullName}\n                                    />\n                                    <Button\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        className=\"followBtn\"\n                                        classes={{\n                                            label: classes.labelButton\n                                        }}\n                                        onClick={() => handleUserFollow(userLoggedData, opponent.uid)}\n                                    >\n                                        Follow\n                                    </Button>\n                                </div>\n                            ))) : (\n                                <>\n                                    <div className={classes.root}>\n                                        <Skeleton variant=\"rect\" height={300} />\n                                    </div>\n                                </>\n                            )\n                        }\n\n                        <div role=\"button\" className=\"padding-20 show-more\">\n                            <Link to=\"/explore/people\">\n                                <span className=\"\" style={{fontSize: \"1.2rem\"}}>Show more</span>\n                            </Link>\n\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </Hidden>\n\n\n    )\n}\n\nexport default RightSideBar;","/home/miizoo/Desktop/ReactJS/livefood/src/views/account/EditAccountPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/ProfileHeader.js",["406","407","408"],"import React, {useEffect, useState} from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport {Link} from \"react-router-dom\";\nimport {db} from \"../../firebase\";\nimport {handleUserFollow, handleUserUnfollow} from \"../../hooks/services\";\nimport AccessTimeRoundedIcon from '@material-ui/icons/AccessTimeRounded';\nimport { blue } from '@material-ui/core/colors';\nimport firebase from \"firebase\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListUserInProfile from \"../Popup/ListUserInProfile\";\nimport LocationOnRoundedIcon from '@material-ui/icons/LocationOnRounded';\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport MapRoundedIcon from '@material-ui/icons/MapRounded';\nimport OpenRating from \"../Popup/OpenRating\";\nimport {Rating} from \"@material-ui/lab\";\nimport Typography from \"@material-ui/core/Typography\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        borderRadius: \"16px\",\n    },\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    userPhoto: {\n        width: \"120px\",\n        height: \"120px\",\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    bioDetails: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        display: \"flex\",\n        alignItems: \"center\",\n        // flex: \"1\"\n    },\n    bioAvt: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        display: \"flex\",\n        alignItems: \"flex-start\",\n    },\n    button: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: \"150px\",\n        color: \"white\",\n        backgroundColor: \"#0095f6\",\n        \"&:hover\": {\n            backgroundColor: \"#0186db\",\n        },\n        textTransform: \"capitalize\"\n    },\n    buttonUnfollow: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: \"150px\",\n        color: \"#454444\",\n        // \"&:hover\": {\n        //     backgroundColor: \"#c3d6fa\",\n        // },\n        marginRight: \"15px\",\n        textTransform: \"capitalize\"\n    },\n    displayName: {\n        maxWidth: \"120px\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        display: \"inline-block\"\n    },\n    opening: {\n        display: \"flex\",\n        alignItems: \"center\",\n        color: \"#65676B\",\n    },\n    about: {\n        padding: \"20px 0\",\n        display: \"flex\",\n        gap: \"10px\"\n    },\n    bioContent: {\n        padding: \"20px 0\"\n    },\n    voteRating : {\n        display: \"flex\",\n        alignItems: \"center\",\n        paddingTop: \"15px\"\n    },\n    viewMoreRating: {\n        paddingLeft: \"5px\",\n        color: \"#0288d1\",\n        \"&:hover\": {\n            color: \"#054063\",\n            transition: \"0.2s all ease\"\n        },\n    }\n}));\n\n\nconst ProfileHeader = ({isAuthProfile, userSnapshot, count, userLogged,  ...rest}) => {\n    const classes = useStyles();\n    const [userFollowing, setUserFollowing] = useState([]);\n    const [userFollower, setUserFollower] = useState([]);\n    const [openFollower, setOpenFollower] = useState(false);\n    const [openFollowing, setOpenFollowing] = useState(false);\n    const [openRating, setOpenRating] = useState(false);\n    const [authData] = useDocument(userLogged && db.collection('users').doc(userLogged.uid));\n    const authFollowingList = authData?.data()?.following;\n    const [userLoggedData, setUserLoggedData] = useState({});\n\n\n    const handleOpenRating = () => {\n        setOpenRating(true);\n    }\n\n    const handleCloseRating = () => {\n        setOpenRating(false);\n    }\n\n    const handleOpenFollower = () => {\n        setOpenFollower(true);\n    }\n\n    const handleCloseFollower = () => {\n        setOpenFollower(false);\n    }\n\n    const handleOpenFollowing = () => {\n        setOpenFollowing(true);\n    }\n\n    const handleCloseFollowing = () => {\n        setOpenFollowing(false);\n    }\n\n    const handleLoadMore = (type, length) => {\n        if(type === `1`){\n            return db.collection(\"users\")\n                .where(firebase.firestore.FieldPath.documentId(), 'in', userSnapshot.following.slice(length,length+9))\n                .get().then(snapshot => {\n                    const temp = snapshot.docs.map((doc => ({\n                        id: doc.id,\n                        data: doc.data(),\n                    })))\n\n                    setUserFollowing([...userFollowing, ...temp]);\n                })\n        }\n        else{\n            return db.collection(\"users\")\n                .where(firebase.firestore.FieldPath.documentId(), 'in', userSnapshot.follower.slice(length,length+9))\n                .get().then(snapshot => {\n                    const temp = snapshot.docs.map((doc => ({\n                        id: doc.id,\n                        data: doc.data(),\n                    })))\n\n                    setUserFollower([...userFollower, ...temp]);\n                })\n        }\n    }\n\n    useEffect(() => {\n        if(userLogged){\n            setUserLoggedData({\n                uid: userLogged.uid,\n                photoURL: userLogged.photoURL,\n                displayName: userLogged.displayName\n            })\n        }\n    }, [userLogged])\n\n    // Your data\n    useEffect(() => {\n        if(typeof userSnapshot?.follower !== 'undefined' && userSnapshot?.follower?.length > 0){\n            db.collection(\"users\")\n                .where(firebase.firestore.FieldPath.documentId(), 'in', userSnapshot.follower.slice(0,9))\n                .get().then(snapshot => {\n                setUserFollower(\n                    snapshot.docs.map((doc => ({\n                        id: doc.id,\n                        data: doc.data(),\n                    })))\n                );\n            })\n        }\n        if(typeof userSnapshot?.following !== 'undefined' && userSnapshot?.following?.length > 0){\n\n            db.collection(\"users\")\n                .where(firebase.firestore.FieldPath.documentId(), 'in', userSnapshot.following.slice(0,9))\n                .get().then(snapshot => {\n                setUserFollowing(\n                    snapshot.docs.map((doc => ({\n                        id: doc.id,\n                        data: doc.data(),\n                    })))\n                );\n            })\n        }\n\n    }, [userSnapshot])\n\n\n    return (\n        <div className=\"profile__header\">\n            <div className=\"profile__bio\">\n                <div className={classes.bioAvt}>\n                    {\n                        userSnapshot? (\n                            <Avatar alt={userSnapshot?.displayName} src={userSnapshot?.photoURL} className={classes.userPhoto}/>\n                        ): (\n                            <Skeleton animation=\"wave\" variant=\"circle\" width={120} height={120} />\n                        )\n                    }\n\n                </div>\n                <div className={classes.bioDetails}>\n                    <div className=\"share-title-container\">\n                        {/* User bio */}\n                        <h2 className=\"share-title\">{userSnapshot?.displayName}</h2>\n                        <h1 className=\"share-sub-title\">{userSnapshot?.fullName ?? ''}</h1>\n                        {\n                            userLogged ? (\n                                userSnapshot?.uid === userLogged.uid ? (\n                                    <div className=\"share-follow-container\">\n                                        {/* Checking if followed */}\n                                        <Link to=\"/account/edit\">\n                                            <Button\n                                                variant=\"contained\"\n                                                className={classes.button}\n                                            >\n                                                Edit profile\n                                            </Button>\n                                        </Link>\n                                    </div>\n                                ) : (\n                                    <div className=\"share-follow-container\">\n                                        {/* Checking if followed */}\n                                        {\n                                            userSnapshot?.follower?.includes(userLogged.uid) ? (\n                                                <Button\n                                                    variant=\"outlined\"\n                                                    className={classes.buttonUnfollow}\n                                                    onClick={() => handleUserUnfollow(userLogged.uid, userSnapshot.uid)}\n                                                >\n                                                    Unfollow\n                                                </Button>\n                                            ) : (\n                                                <Button\n                                                    variant=\"contained\"\n                                                    className={classes.button}\n                                                    onClick={() => handleUserFollow(userLoggedData, userSnapshot.uid)}\n                                                >\n                                                    Follow\n                                                </Button>\n                                            )\n                                        }\n                                        <Button\n                                            variant=\"contained\"\n                                            className={classes.button}\n                                        >\n                                            Message\n                                        </Button>\n\n                                    </div>\n                                )\n                            ) : null\n                        }\n\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"profile__about\">\n                <div className={classes.countInfo}>\n                    <Divider />\n                    {/* Count info */}\n                    <h2 className=\"count-infos\">\n                        <div className=\"number\"><strong title=\"Likes\">{ count ?? '0'}</strong><span\n                            className=\"unit\">Post</span></div>\n                        <div className=\"number\"><strong title=\"Following\">{userSnapshot?.followingCount ?? \"0\"}</strong><a className=\"unit\" onClick={handleOpenFollowing}>Following</a></div>\n                        <div className=\"number\"><strong title=\"Followers\">{userSnapshot?.followerCount ?? \"0\"}</strong><a className=\"unit\" onClick={handleOpenFollower}>Follower</a></div>\n                    </h2>\n                    <Divider />\n                </div>\n                <div className={classes.bioContent}>\n                    {\n                        userSnapshot?.bio ? (\n                            <h2 className=\"share-desc mt10\">\n                                {userSnapshot.bio}\n                            </h2>\n                        ) : null\n                    }\n                    {\n                        userSnapshot?.profileLink ? (\n                            <div className=\"share-links\">\n                                <a href={userSnapshot.profileLink}>{userSnapshot.profileLink}</a>\n                            </div>\n                        ) : null\n                    }\n                    {\n                        userSnapshot?.aboutRestaurant ? (\n                            <>\n                                {\n                                    userSnapshot?.voteRating ? (\n                                        <div className={classes.voteRating}>\n                                            <Rating name=\"read-only\" value={userSnapshot?.voteRating} precision={0.1} readOnly />\n                                            <Link to={`/profile/vote/${userSnapshot?.uid}`}>\n                                                <span  className={classes.viewMoreRating}> {userSnapshot?.voteCount} reviews from LiveFood</span>\n                                            </Link>\n                                        </div>\n                                    ) : null\n                                }\n                                <div className={classes.about}>\n                                    {\n                                        userSnapshot?.aboutRestaurant?.opening ? (\n                                            <h4 className={classes.opening}>\n                                                <AccessTimeRoundedIcon style={{marginRight: \"5px\"}}/>\n                                                Opening :\n                                                <span style={{marginLeft: \"5px\"}}>{userSnapshot?.aboutRestaurant?.opening} - {userSnapshot?.aboutRestaurant?.closed}</span>\n                                            </h4>\n                                        ) : null\n                                    }\n                                    {\n                                        userSnapshot?.aboutRestaurant?.location ? (\n                                            <h4 className={classes.opening}>\n                                                <LocationOnRoundedIcon style={{marginRight: \"5px\"}}/>\n                                                Location :\n                                                <span style={{marginLeft: \"5px\"}}>{userSnapshot?.aboutRestaurant?.location}</span>\n                                            </h4>\n                                        ) : null\n                                    }\n                                </div>\n                                {\n                                    userSnapshot?.aboutRestaurant?.address ? (\n                                        <h4 className={classes.opening} style={{paddingBottom: \"20px\"}}>\n                                            <MapRoundedIcon style={{marginRight: \"5px\"}}/>\n                                            Address :\n                                            <span style={{marginLeft: \"5px\"}}>{userSnapshot?.aboutRestaurant?.address}</span>\n                                        </h4>\n                                    ) : null\n                                }\n                                <Divider />\n                            </>\n                        ) : null\n                    }\n                </div>\n\n\n                {\n                    userLogged ? (\n                        userSnapshot?.accountType === \"foodshop\" && userLogged.uid !== userSnapshot?.uid ? (\n                            <Button\n                                style={{width: \"150px\", margin: \"auto\"}}\n                                variant=\"contained\"\n                                className={classes.button}\n                                onClick={handleOpenRating}\n                            >\n                                Vote\n                            </Button>\n                        ) : null\n                    ) : null\n                }\n\n            </div>\n            {\n                openFollowing ? (\n                    <ListUserInProfile open={openFollowing} handleClose={handleCloseFollowing} data={userFollowing} type={`1`} userLogged={userLogged} authFollowingList={authFollowingList} countUser={userSnapshot?.followingCount} handleLoadMore={handleLoadMore}/>\n                ) : null\n            }\n            {\n                openFollower ? (\n                    <ListUserInProfile open={openFollower} handleClose={handleCloseFollower} data={userFollower} type={`2`} userLogged={userLogged} authFollowingList={authFollowingList} countUser={userSnapshot?.followerCount} handleLoadMore={handleLoadMore}/>\n                ) : null\n            }\n            {\n                openRating ? (\n                    <OpenRating open={openRating} handleClose={handleCloseRating} userLogged={userLogged} shopId={userSnapshot?.uid} voteRating={userSnapshot?.voteRating}/>\n                ) : null\n            }\n        </div>\n    )\n}\n\nexport default ProfileHeader;","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/AccountNavBar.js",["409","410","411"],"import React from \"react\";\nimport NavItem from \"../SideBar/LeftSideBar/NavItem\";\nimport {Button, List, ListItem} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {NavLink as RouterLink} from \"react-router-dom\";\nimport {List as ListIcon, Users as UsersIcon} from \"react-feather\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport {db} from \"../../firebase\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    list: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: \"0\"\n    },\n    item: {\n        display: 'flex',\n        paddingTop: 0,\n        paddingBottom: 0,\n        borderBottom: \"1px solid rgb(235, 238, 240)\",\n\n    },\n    button: {\n        color: theme.palette.text.secondary,\n        fontWeight: theme.typography.fontWeightMedium,\n        justifyContent: 'flex-start',\n        letterSpacing: 0,\n        padding: '10px 15px',\n        textTransform: 'none',\n        width: '100%',\n    },\n    icon: {\n        marginRight: theme.spacing(1),\n        color: \"#050505\"\n    },\n    title: {\n        fontWeight: \"600\",\n        fontSize: \"1rem\",\n        paddingLeft: \"10px\",\n        color: \"#65676B\",\n    },\n    active: {\n        color: theme.palette.primary.main,\n        '& $title': {\n            fontWeight: 600,\n            color: theme.palette.primary.main,\n        },\n        '& $icon': {\n            color: theme.palette.primary.main,\n        }\n    }\n}));\n\n\nconst AccountNavBar = (props) => {\n    const classes = useStyles();\n    const { userLogged } = props;\n\n    const [userData] = useDocument(userLogged.uid && db.collection('users').doc(userLogged.uid));\n    const userSnapshot = userData?.data()\n\n\n\n    return (\n        <List className={classes.list}>\n            <ListItem\n                className={classes.item}\n                disableGutters\n            >\n                <Button\n                    activeClassName={classes.active}\n                    className={classes.button}\n                    component={RouterLink}\n                    to={`/account/edit`}\n                >\n                    <span className={classes.title}>Edit profile</span>\n                </Button>\n            </ListItem>\n            {\n                props.userLogged?.providerData[0]?.providerId === \"password\" ? (\n                    <ListItem\n                        className={classes.item}\n                        disableGutters\n                    >\n                        <Button\n                            activeClassName={classes.active}\n                            className={classes.button}\n                            component={RouterLink}\n                            to={`/account/password/change`}\n                        >\n                    <span className={classes.title}>\n                    Change Password\n                </span>\n                        </Button>\n                    </ListItem>\n                ) : null\n            }\n\n            <ListItem\n                className={classes.item}\n                disableGutters\n            >\n                <Button\n                    activeClassName={classes.active}\n                    className={classes.button}\n                    component={RouterLink}\n                    to={`/account/setting/notifications`}\n                >\n                    <span className={classes.title}>\n                    Notifications\n                </span>\n                </Button>\n            </ListItem>\n\n            {\n                userSnapshot?.accountType === \"foodshop\" ? (\n                    <>\n                        <ListItem\n                            className={classes.item}\n                            disableGutters\n                        >\n                            <Button\n                                activeClassName={classes.active}\n                                className={classes.button}\n                                component={RouterLink}\n                                to={`/account/shop/about`}\n                            >\n                            <span className={classes.title}>\n                                About\n                            </span>\n                            </Button>\n                        </ListItem>\n                        <ListItem\n                            className={classes.item}\n                            disableGutters\n                        >\n                            <Button\n                                activeClassName={classes.active}\n                                className={classes.button}\n                                component={RouterLink}\n                                to={`/account/shop/edit`}\n                            >\n                            <span className={classes.title}>\n                                Restaurant Menu\n                            </span>\n                            </Button>\n                        </ListItem>\n\n                    </>\n                ) : null\n            }\n\n        </List>\n    )\n}\n\nexport default AccountNavBar","/home/miizoo/Desktop/ReactJS/livefood/src/theme/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditAccount.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditPassword.js",["412"],"import React, {useEffect, useState} from \"react\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport firebase from \"firebase\";\nimport AlertPopup from \"../../Popup/AlertPopup\";\nimport {blue} from \"@material-ui/core/colors\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n        width: 100,\n        height: 100,\n        margin: \"0 20px\",\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    avatarHolder: {\n        padding: \"16px 32px\"\n    },\n    holder: {\n        display: \"flex\",\n        padding: \"16px\"\n    },\n    changePhoto: {\n        color: \"#0095f6\",\n        padding: 0,\n        textTransform: \"capitalize\"\n    },\n    displayName: {\n        fontSize: 18\n    },\n    label: {\n        flex: \"0 0 25%\",\n        textAlign: \"right\",\n    },\n    input: {\n        paddingLeft: 20,\n        width: \"60%\",\n        float: \"left\"\n    },\n    inputField: {\n        width: \"100%\",\n        padding: \"0 8px\",\n        height: \"32px\",\n        fontSize: \"16px\",\n        color: \"#262626\",\n        border: \"1px solid rgba(var(--ca6,219,219,219),1)\"\n\n    },\n    submit: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"20px\"\n    },\n}));\n\nconst EditPassword = (props) => {\n    const {userLogged, setOpenSnack} = props;\n    const [oldPass, setOldPass] = useState('');\n    const [newPass, setNewPass] = useState('');\n    const [rePass, setRePass] = useState('');\n    const [disable, setDisable] = useState(true);\n    const [open, setOpen] = useState(false);\n    const [message, setMessage] = useState('')\n\n\n    useEffect(() => {\n        if(oldPass.length >= 8 && newPass.length >= 8 && rePass.length >= 8){\n            if(rePass === newPass){\n                setDisable(false);\n            }\n        }else {\n            setDisable(true)\n        }\n    }, [newPass.length, oldPass.length, rePass.length])\n\n    // auth.sendPasswordResetEmail(\"minhmuofficial@gmail.com\").then(function() {\n    //     // Email sent.\n    //     console.log(\"true\")\n    // }).catch(function(error) {\n    //     // An error happened.\n    //     console.log(error)\n    // });\n\n    const handleClosePopup = (event) => {\n        setOpen(false);\n    };\n\n    const handleChangePassword = () => {\n        var user = firebase.auth().currentUser;\n\n        user.updatePassword(newPass).then(function() {\n            // Update successful.\n            setOpenSnack(true)\n            setRePass('');\n            setNewPass('');\n            setOldPass('');\n        }).catch(function(error) {\n            // An error happened.\n            setOpen(true);\n            setMessage(error.message)\n            console.log(error)\n        });\n    }\n    const classes = useStyles();\n\n    return(\n        <article className=\"edit_account__content\">\n            <div className={classes.profile}>\n                <CardHeader\n                    className={classes.avatarHolder}\n                    avatar={\n                        userLogged?.uid ? (\n                            <Avatar className={classes.avatar} alt={userLogged.displayName} src={userLogged.photoURL}/>\n                        ):(\n                            <Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />\n                        )\n                    }\n                    title={\n                        userLogged?.uid ? (\n                            <Link to={`profile/${userLogged.uid}`} className={classes.displayName}>{userLogged.displayName}</Link>\n                        ) : (\n                            <Skeleton animation=\"wave\" height={10} width=\"30%\" style={{ marginBottom: 6 }} />\n                        )\n                    }\n                />\n            </div>\n            <form method=\"POST\">\n                <div className={classes.holder}>\n                    <aside className={classes.label}>\n                        <label htmlFor=\"pepOld\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Old Password</label>\n                    </aside>\n                    <div className={classes.input}>\n                        <input\n                            className={classes.inputField}\n                            value={oldPass}\n                            onChange={event => setOldPass(event.target.value)}\n                            aria-required=\"false\" id=\"pepOld\"  type=\"password\"\n                        />\n\n                    </div>\n                </div>\n\n                <div className={classes.holder}>\n                    <aside className={classes.label}>\n                        <label htmlFor=\"pepNewPassword\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>New Password</label>\n                    </aside>\n                    <div className={classes.input}>\n                        <input\n                            className={classes.inputField}\n                            value={newPass}\n                            onChange={event => setNewPass(event.target.value)}\n                            aria-required=\"false\" id=\"pepNewPassword\"  type=\"password\"\n                        />\n                    </div>\n                </div>\n\n                <div className={classes.holder}>\n                    <aside className={classes.label}>\n                        <label htmlFor=\"pepConfirm\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Confirm</label>\n                    </aside>\n                    <div className={classes.input}>\n                        <input\n                            className={classes.inputField}\n                            value={rePass}\n                            onChange={event => setRePass(event.target.value)}\n                            aria-required=\"false\" id=\"pepConfirm\" type=\"password\"\n                        />\n\n                    </div>\n                </div>\n\n                <div className={classes.submit}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={disable}\n                        onClick={handleChangePassword}\n                    >\n                        Change\n                    </Button>\n                </div>\n\n            </form>\n            <AlertPopup open={open} handleClose={handleClosePopup} title=\"LiveFood\" message={message}/>\n\n        </article>\n    )\n}\n\nexport default EditPassword","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/ProfileNavBar.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileFeed.js",["413"],"import React, {useEffect, useState} from \"react\";\n// import {useAuthState} from \"react-firebase-hooks/auth\";\nimport { db} from \"../../../firebase\";\nimport ExploreItem from \"../../Explore/ExploreItem\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Camera as CameraIcon} from \"react-feather\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        color: \"#050505\"\n    },\n    wrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        maxHeight: \"300px\",\n        width: \"100%\"\n    },\n    none: {\n        width: \"100px\",\n        height: \"100px\",\n        borderColor: \"#262626\",\n        borderWidth: \"2px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderStyle: \"solid\",\n        borderRadius: \"50%\",\n        margin: \"50px 0 20px 0\"\n    }\n\n}));\n\n\n\n\nconst ProfileFeed = ({uid, userLogged}) => {\n    const classes = useStyles();\n    const [feed, setFeed] = useState([]);\n\n    useEffect(() => {\n        return db.collection('posts')\n            .where('uid', '==', uid)\n            .orderBy('timestamp', 'desc')\n            .limit(12)\n            .get().then(snapshot => {\n                let temp = []\n                snapshot.forEach(data => {\n                    var userProfile = {};\n                    data.data().user.get().then( author => {\n                        Object.assign(userProfile, author.data());\n                    })\n                    temp.push({id: data.id, post: data.data(), postAuthor: userProfile })\n                })\n                setFeed(temp);\n            })\n\n    }, [uid]);\n\n    return(\n        <div className=\"explore__root\" style={{paddingTop: \"20px\" , marginBottom: \"50px\"}}>\n\n                {\n                    feed.length > 0 ? (\n                        <div className=\"explore__container\" style={{padding: \"0\"}} >\n                            {\n                                feed.map(({id, post, postAuthor}) => (\n                                    <ExploreItem\n                                        key={id}\n                                        postId={id}\n                                        post={post}\n                                        postAuthor={postAuthor}\n                                        userLogged={userLogged}\n                                    />\n                                ))\n                            }\n                        </div>\n\n                    ) : (\n                        <div className={classes.wrapper}>\n                            <div className={classes.none}>\n                                <CameraIcon\n                                    className={classes.icon}\n                                    size=\"40\"\n                                />\n                            </div>\n                            <h2 style={{paddingBottom: \"10px\"}}>No Posts Yet</h2>\n                        </div>\n                    )\n                }\n\n        </div>\n    )\n}\n\nexport default ProfileFeed","/home/miizoo/Desktop/ReactJS/livefood/src/features/chatSlice.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Sidebar/SidebarChat.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Sidebar/CreateNewChat.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Message.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/ChatInput.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/index.js",["414","415","416"],"import React, {useEffect, useState} from \"react\";\nimport Upload from \"../Upload\";\nimport Post from \"./Post\";\nimport { db } from \"../../firebase\";\nimport {Compass as CompassIcon} from \"react-feather\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        color: \"#050505\"\n    },\n    wrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        maxHeight: \"300px\",\n        width: \"100%\"\n    },\n    none: {\n        width: \"100px\",\n        height: \"100px\",\n        borderColor: \"#262626\",\n        borderWidth: \"2px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderStyle: \"solid\",\n        borderRadius: \"50%\",\n        margin: \"50px 0 20px 0\"\n    }\n}));\n\nexport default function NewFeed(props){\n    const classes = useStyles();\n    const {userLogged} = props;\n    const [posts, setPosts] = useState([]);\n    const userRef = userLogged && db.collection('users').doc(userLogged.uid);\n    const [userSnapshot] = useDocument(userRef);\n    const [limit, setLimit] = useState(5);\n    const [lastVisible, setLastVisible] = useState('');\n    let userFollow = userSnapshot?.data()?.following;\n\n    //Get post\n    useEffect( () => {\n        if(typeof userFollow !== 'undefined' && userFollow.length > 0){\n            userFollow.push(userLogged.uid);\n            const unsubscribe = db.collection('posts')\n                .orderBy('timestamp', \"desc\")\n                .limit(limit)\n                .onSnapshot((snapshot) => {\n                    let data = [];\n                    snapshot.forEach((doc) => {\n                        if(userFollow.includes(doc.data().uid)){\n                            data.push({id: doc.id, post: doc.data()})\n                        }\n                    })\n                    setPosts(data);\n                    setLastVisible(snapshot.docs[snapshot.docs.length-1]);\n                })\n            return () => {\n                unsubscribe();\n            }\n        }\n        else{\n            const unsubscribe = db.collection('posts')\n                .where('uid', '==', userLogged.uid)\n                .orderBy('timestamp', \"desc\")\n                .limit(limit)\n                .onSnapshot( snapshot => {\n                    setPosts(snapshot.docs.map(doc => ({\n                        id: doc.id,\n                        post: doc.data(),\n                    })));\n                    setLastVisible(snapshot.docs[snapshot.docs.length-1]);\n                })\n\n            return () => {\n                unsubscribe();\n            }\n        }\n    }, [userFollow?.length, userLogged?.uid]);\n\n\n    function handleRemove(id) {\n        const newList = posts.filter((item) => item.id !== id);\n        setPosts(newList);\n    }\n\n\n    //\n    // window.onscroll = function () {\n    //     if(window.scrollY + window.innerHeight >=\n    //         document.documentElement.scrollHeight){\n    //         loadMore()\n    //     }\n    // }\n    // //\n    // const loadMore = () => {\n    //     if(lastVisible){\n    //         setLimit(limit => limit + 10);\n    //     }\n    //     console.log(lastVisible)\n    //     console.log(limit);\n    // }\n\n\n    return(\n        <div className=\"app__post\">\n            {\n                userLogged ? (\n                    <Upload userLogged={userLogged}/>\n                ) : null\n            }\n            {\n                posts?.length > 0 ? (\n                    posts.map(({id, post, postAuthor }) => (\n                        <Post\n                            key={id}\n                            id={id}\n                            post={post}\n                            userLogged={userLogged}\n                            handleRemove={() => handleRemove(id)}\n                        />\n                    ))\n                ) : (\n                    <div className={classes.wrapper}>\n                        <div className={classes.none}>\n                            <CompassIcon\n                                className={classes.icon}\n                                size=\"40\"\n                            />\n                        </div>\n                        <h2 style={{paddingBottom: \"10px\"}}>Start Explore Yourself</h2>\n                        <p style={{paddingBottom: \"20px\"}}>Or just creating your own post.</p>\n\n                        <Link to=\"/explore\">\n                            <Button\n                                style={{textTransform: \"capitalize\", fontSize: \"16px\"}}\n                                color=\"primary\"\n                                variant=\"contained\"\n                            >\n                                Explore\n                            </Button>\n                        </Link>\n\n                    </div>\n                )\n            }\n        </div>\n    )\n}","/home/miizoo/Desktop/ReactJS/livefood/src/views/SinglePage.js",["417","418"],"import React, {useEffect, useState} from \"react\";\nimport Page from \"../components/Page\";\n// import {makeStyles} from \"@material-ui/core/styles\";\nimport RightSideBar from \"../components/SideBar/RightSideBar\";\nimport Post from \"../components/Posts/Post\";\nimport NavBar from \"../components/SideBar/LeftSideBar\";\nimport {db} from \"../firebase\";\nimport {useParams} from \"react-router\";\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport pic from \"../images/Background/undraw_page_not_found_su7k.svg\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    wrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        maxHeight: \"300px\",\n        width: \"100%\"\n    },\n    redirect: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        textAlign: \"center\",\n        paddingTop: \"20px\"\n    },\n    details: {\n        padding: \"20px 0\"\n    },\n    title: {\n        color: \"#ffffff\",\n    },\n    img: {\n        width: \"320px\",\n        display: \"inline-block\",\n        maxWidth: \"100%\",\n        marginTop: \"50px\"\n    },\n    imgHolder: {\n        textAlign: \"center\"\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\n\nconst SinglePage = (props) => {\n    const classes = useStyles();\n    let { id } = useParams();\n    const [postSnapshot, loading] = useDocument(db.collection(\"posts\").doc(id));\n\n\n    return (\n        <Page\n            title=\"LiveFood\"\n            className=\"app__bodyContainer\"\n        >\n            <NavBar userLogged={props.userLogged}/>\n            <div className=\"app__post\">\n                {\n                    loading ? (\n                        <Backdrop className={classes.backdrop} open={loading} >\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n                    ) : (\n                        postSnapshot?.data() ? (\n                            <Post\n                                key={postSnapshot.id}\n                                id={postSnapshot.id}\n                                post={postSnapshot.data()}\n                                isSinglePage={true}\n                            />\n                        ) : (\n                            <>\n                                <div className={classes.wrapper}>\n                                    <div className={classes.imgHolder}>\n                                        <img src={pic} alt=\"404\" className={classes.img}/>\n                                    </div>\n                                    <div className={classes.details}>\n                                        <h1>This page doesn’t exist</h1>\n                                        <p>Please check your URL or return to LiveFood home.</p>\n                                    </div>\n                                </div>\n                            </>\n                        )\n                    )\n                }\n\n\n            </div>\n            {\n                props.userLogged ? (\n                    <RightSideBar userLogged={props.userLogged}/>\n                ) : null\n            }\n        </Page>\n    )\n}\n\nexport default SinglePage;","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileSaved.js",["419"],"import React, {useEffect, useState} from \"react\";\n// import {useAuthState} from \"react-firebase-hooks/auth\";\n// import {db} from \"../../../firebase\";\nimport {Bookmark as BookmarkIcon} from \"react-feather\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {db} from \"../../../firebase\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport firebase from \"firebase\";\nimport ExploreItem from \"../../Explore/ExploreItem\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        color: \"#050505\"\n    },\n    wrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        maxHeight: \"300px\",\n        width: \"100%\"\n    },\n    none: {\n        width: \"100px\",\n        height: \"100px\",\n        borderColor: \"#262626\",\n        borderWidth: \"2px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderStyle: \"solid\",\n        borderRadius: \"50%\",\n        margin: \"50px 0 20px 0\"\n    }\n\n}));\n\nconst ProfileSaved = ({uid, userLogged}) => {\n    const classes = useStyles();\n    const [savedPost, setSavedPost] = useState([]);\n\n    const userRef = db.collection('users').doc(uid);\n    const [userSnapshot] = useDocument(userRef);\n\n    let userSavedList = userSnapshot?.data()?.postSave;\n\n    useEffect(() => {\n        window.scroll({top: 0, left: 0, behavior: 'smooth' });\n\n        if(typeof userSavedList !== 'undefined'){\n            if(userSavedList.length > 0){\n                db.collection('posts')\n                    .where(firebase.firestore.FieldPath.documentId(), 'in', userSavedList)\n                    .limit(12)\n                    .get().then(async snapshot => {\n                        let temp = []\n                        snapshot.forEach(data => {\n                            var userProfile = {};\n                            data.data().user.get().then( author => {\n                                Object.assign(userProfile, author.data());\n                            })\n                            temp.push({id: data.id, post: data.data(), authorProfile: userProfile })\n                        })\n                        setSavedPost(temp);\n                    })\n            }\n        }\n    }, [userSavedList?.length]);\n\n    return(\n        <div className=\"explore__root\" style={{paddingTop: \"20px\" , marginBottom: \"50px\"}}>\n\n                {\n                    savedPost.length > 0 ? (\n                        <div className=\"explore__container\" style={{padding: \"0\"}}>\n                            {\n                                savedPost.map(({id, post, authorProfile}) => (\n                                    <ExploreItem\n                                        key={id}\n                                        postId={id}\n                                        post={post}\n                                        postAuthor={authorProfile}\n                                        userLogged={userLogged}\n                                    />\n                                ))\n                            }\n                        </div>\n                    ) : (\n                        <div className={classes.wrapper}>\n                            <div className={classes.none}>\n                                <BookmarkIcon\n                                    className={classes.icon}\n                                    size=\"40\"\n                                />\n                            </div>\n                            <h2 style={{paddingBottom: \"10px\"}}>Start Saving</h2>\n                            <p>Save photos and videos to your collection.</p>\n                        </div>\n                    )\n                }\n\n        </div>\n    )\n}\n\nexport default ProfileSaved","/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExplorePage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExplorePeoplePage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExploreVideoPage.js",["420"],"import React, {useEffect, useState} from \"react\";\nimport Page from \"../../components/Page\";\nimport {db} from \"../../firebase\";\nimport {Video as VideoIcon} from \"react-feather\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport ExploreItem from \"../../components/Explore/ExploreItem\";\nimport NavBar from \"../../components/SideBar/LeftSideBar\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        color: \"#050505\"\n    },\n    wrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        maxHeight: \"300px\",\n        width: \"100%\"\n    },\n    none: {\n        width: \"100px\",\n        height: \"100px\",\n        borderColor: \"#262626\",\n        borderWidth: \"2px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderStyle: \"solid\",\n        borderRadius: \"50%\",\n        margin: \"50px 0 20px 0\"\n    }\n}));\n\n\n\nconst ExploreVideo = (props) => {\n    const classes = useStyles();\n    const {userLogged} = props;\n    const [exploreVid, setExploreVid] = useState([]);\n    window.scroll({top: 0, left: 0, behavior: 'smooth' });\n\n    useEffect(() => {\n        window.scroll({top: 0, left: 0, behavior: 'smooth' });\n\n        let postVideos = db.collection('posts');\n        postVideos\n            .where('type', '==', 'video')\n            .orderBy('timestamp', 'desc')\n            .limit(20)\n            .get().then(snapshot => {\n                let tempVid = []\n                snapshot.forEach(data => {\n                    var userProfile = {};\n                    data.data().user.get().then( author => {\n                        Object.assign(userProfile, author.data());\n                    })\n                    tempVid.push({id: data.id, post: data.data(), authorProfile: userProfile })\n                })\n                setExploreVid(tempVid);\n            })\n\n    }, []);\n\n\n    return (\n        <Page\n            title=\"Watch | LiveFood\"\n            className=\"app__bodyContainer\"\n        >\n            <div className=\"explore__root\">\n                <NavBar userLogged={userLogged}/>\n                <div className=\"explore__masonry-container\">\n                    {\n                        exploreVid.length > 0 ? (\n                            <div className=\"explore__masonry\" id=\"list_explore\">\n                                {\n                                    exploreVid.map(({id, post, authorProfile}) => (\n                                        <ExploreItem\n                                            key={id}\n                                            postId={id}\n                                            post={post}\n                                            postAuthor={authorProfile}\n                                            userLogged={userLogged}\n                                            masonry={true}\n                                        />\n                                    ))\n                                }\n                            </div>\n                        ) : (\n                            <div className={classes.wrapper}>\n                                <div className={classes.none}>\n                                    <VideoIcon\n                                        className={classes.icon}\n                                        size=\"40\"\n                                    />\n                                </div>\n                                <h2 style={{paddingBottom: \"10px\"}}>Start Record Video</h2>\n                                <p>Creating videos to our collection.</p>\n                            </div>\n                        )\n                    }\n                </div>\n            </div>\n\n        </Page>\n    )\n}\n\nexport default ExploreVideo;","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Post.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditShop.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/hooks/getRecipientUser.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/hooks/services.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Action.js",["421"],"import React, {useEffect, useState} from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from 'prop-types';\nimport {handleDislikePost, handleLikePost, handleSavePost, handleUnSavedPost} from \"../../hooks/services\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {ToggleButton} from \"@material-ui/lab\";\nimport FavoriteRoundedIcon from \"@material-ui/icons/FavoriteRounded\";\nimport FavoriteBorderTwoToneIcon from \"@material-ui/icons/FavoriteBorderTwoTone\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ModeCommentOutlinedIcon from \"@material-ui/icons/ModeCommentOutlined\";\nimport BookmarkRoundedIcon from \"@material-ui/icons/BookmarkRounded\";\nimport BookmarkBorderOutlinedIcon from \"@material-ui/icons/BookmarkBorderOutlined\";\n\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport ListUserLikePost from \"../Popup/ListUserLikePost\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    action: {\n        borderTop: \"1px solid rgba(var(--b6a,219,219,219),1)\",\n        justifyContent: \"space-between\"\n    },\n    actionButton: {\n        border: \"0\",\n        backgroundColor: \"none\",\n        borderRadius: \"50%\",\n        color: \"rgba(0, 0, 0, 0.54)\",\n        '&:hover': {\n            color: 'black',\n        }\n    },\n    selected: {\n        backgroundColor: \"unset !important\"\n    },\n    displayLike: {\n        padding: \"0 0 20px 20px\",\n        borderBottom: \"1px solid rgba(var(--b6a,219,219,219),1)\"\n    },\n    likesCount: {\n        cursor: \"pointer\",\n        '&:hover': {\n            textDecoration: \"underline\",\n        }\n    }\n\n\n}));\n\n\n\nexport default function PostAction({postId, post, expanded, setExpanded, handleFocus, userLogged}){\n    const classes = useStyles();\n    const [selected, setSelected] = useState(false);\n    const [saveSelected, setSaveSelected] = useState(false);\n    const [openLikesList, setOpenLikesList] = useState(false);\n    const [userLoggedData, setUserLoggedData] = useState({});\n\n    useEffect(() => {\n        if(userLogged){\n            setUserLoggedData({\n                uid: userLogged.uid,\n                photoURL: userLogged.photoURL,\n                displayName: userLogged.displayName\n            })\n        }\n    }, [userLogged])\n\n    const handleOpenLikesList = () => {\n        setOpenLikesList(true);\n    }\n\n    const handleCloseLikesList = () => {\n        setOpenLikesList(false);\n    }\n\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    // Handle like and dislike action\n    const likePost = () => {\n        setSelected(true);\n        handleLikePost(postId, userLoggedData, post.uid)\n    }\n\n    const dislikePost = () => {\n        setSelected(false);\n        handleDislikePost(postId, userLogged.uid)\n    }\n\n    const savePost = () => {\n        // Save post id to user data, and push to post data\n        setSaveSelected(true);\n        handleSavePost(postId, userLogged.uid);\n    }\n\n    const unsavedPost = () => {\n        // Save post id to user data, and push to post data\n        setSaveSelected(false);\n        handleUnSavedPost(postId, userLogged.uid);\n    }\n\n    useEffect(() => {\n        if(typeof post?.likeBy !== 'undefined' && post?.likeBy?.includes(userLogged.uid)){\n            setSelected(true);\n        }\n\n        if(typeof post?.saveBy !== 'undefined' && post?.saveBy?.includes(userLogged.uid)){\n            setSaveSelected(true);\n        }\n    }, [post?.likeBy, post?.saveBy, userLogged.uid])\n\n\n    return(\n        <>\n            <CardActions disableSpacing className={classes.action}>\n                <div className=\"post__button\">\n                    <div className=\"action__like\">\n                        <ToggleButton\n                            value=\"check\"\n                            selected={selected}\n                            // className={classes.likeButton}\n                            classes={{\n                                root: classes.actionButton,\n                                selected: classes.selected,\n                            }}\n                            onClick={() => {\n                                if(!selected) likePost();\n                                else dislikePost();\n                            }}\n                        >\n                            {\n                                selected ? <FavoriteRoundedIcon style={{color: \"red\"}}/> : <FavoriteBorderTwoToneIcon />\n                            }\n                        </ToggleButton>\n                    </div>\n                    <div className=\"action__comment\">\n                        <IconButton aria-label=\"comment\" onClick={handleFocus}>\n                            <ModeCommentOutlinedIcon/>\n                        </IconButton>\n                    </div>\n                    <div className=\"action__share\">\n                        <ToggleButton\n                            value=\"check\"\n                            selected={saveSelected}\n                            // className={classes.likeButton}\n                            classes={{\n                                root: classes.actionButton,\n                                selected: classes.selected,\n                            }}\n                            onClick={() => {\n                                if(!saveSelected) savePost();\n                                else unsavedPost();\n                            }}\n                        >\n                            {\n                                saveSelected ? <BookmarkRoundedIcon style={{color: \"black\"}}/> : <BookmarkBorderOutlinedIcon />\n                            }\n                        </ToggleButton>\n                        {/*<IconButton aria-label=\"share\">*/}\n                        {/*\t<BookmarkBorderOutlinedIcon />*/}\n                        {/*</IconButton>*/}\n                    </div>\n                </div>\n                {\n                     post?.data ? (\n                        <div className=\"action__expand\">\n                            <IconButton\n                                className={clsx(classes.expand, {\n                                    [classes.expandOpen]: expanded,\n                                })}\n                                onClick={handleExpandClick}\n                                aria-expanded={expanded}\n                                aria-label=\"show more\"\n                            >\n                                <ExpandMoreIcon />\n                            </IconButton>\n                        </div>\n                    ) : null\n                }\n            </CardActions>\n\n            {\n                post?.likeCount > 0 ? (\n                    <div className={classes.displayLike}>\n                        <span className={classes.likesCount} onClick={handleOpenLikesList}><b>{post?.likeCount?.toLocaleString()} {post?.likeCount === 1 ? 'Like' : 'Likes'}</b></span>\n                    </div>\n                ) : null\n            }\n\n            {\n                openLikesList ? (\n                    <ListUserLikePost open={openLikesList} handleClose={handleCloseLikesList} userLogged={userLogged} postLike={post?.likeBy} likesCount={post?.likeCount}/>\n                ) : null\n            }\n        </>\n    )\n}\n\n// PostAction.propTypes = {\n//     postId: PropTypes.string.isRequired,\n//     uid: PropTypes.string.isRequired,\n//     postLike: PropTypes.array,\n//     postSave: PropTypes.array,\n// };","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Content.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Header.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/RecipeData.js",["422","423"],"import React from \"react\";\nimport {CardContent, Collapse} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport {Rating} from \"@material-ui/lab\";\nimport LocalPrintshopRoundedIcon from '@material-ui/icons/LocalPrintshopRounded';\nimport {Link} from \"react-router-dom\";\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    paragraph: {\n        lineHeight: \"26px\",\n        textAlign: \"justify\",\n        whiteSpace: \"pre-line\",\n        fontSize: \"14px\"\n    },\n    paragraphHead: {\n        fontWeight: \"600\",\n        fontSize: \"1rem\",\n        marginBottom: \"10px\",\n        padding: \"5px 0\",\n        textTransform: \"uppercase\",\n        borderBottom : \"1px solid #000\"\n    }\n}));\n\n\nexport default function PostRecipeData({postId, postData, expanded, rating}){\n    const classes = useStyles();\n\n    return(\n        <>\n            {\n                !!postData ? (\n                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit >\n                        <div className=\"recipe_layout\">\n                            <CardContent className=\"recipe_layout__content-left\">\n                                {\n                                    rating ? (\n                                        <Typography paragraph className={classes.paragraphHead} style={{display: \"flex\", lineHeight: \"30px\"}}>Rating:\n                                            <Rating style={{marginLeft: \"5px\"}} name=\"read-only\" value={rating} precision={0.1} readOnly />\n                                        </Typography>\n                                    ) : null\n                                }\n\n                                <div className=\"recipe_layout__facts\">\n                                    <div className=\"recipe-facts__info\">\n                                        <div className=\"recipe-facts__details recipe-facts__prepare\"><span\n                                            className=\"recipe-facts__title\">Prepare:</span> <span>{postData?.prepTime} {postData?.prepUnit}</span></div>\n                                        <div className=\"recipe-facts__details recipe-facts__cooking\"><span\n                                            className=\"recipe-facts__title\">Cook:</span> <a\n                                            className=\"theme-color\">{postData?.cookTime} {postData?.cookUnit}</a></div>\n                                    </div>\n                                    <div className=\"recipe-facts__info\">\n                                        <div className=\"recipe-facts__details recipe-facts__servings\"><span\n                                            className=\"recipe-facts__title\">Serves:</span> <a\n                                            className=\"theme-color\">{postData?.serve}</a></div>\n                                    </div>\n                                </div>\n                                <Typography paragraph className={classes.paragraphHead} >Category: <Link style={{textDecoration: \"underline\"}} to={`/recipe/topic/${postData?.category?.toLowerCase()}`}>{postData?.category}</Link></Typography>\n                                <Typography paragraph className={classes.paragraphHead}>Ingredients:</Typography>\n                                <Typography paragraph className={classes.paragraph}>{postData?.ingredient}</Typography>\n                            </CardContent>\n                            <CardContent className=\"recipe_layout__content-right\">\n                                <Typography paragraph className={classes.paragraphHead}>Direction:</Typography>\n                                <Typography paragraph className={classes.paragraph}>{postData?.direction}</Typography>\n                                <Typography\n                                    paragraph\n                                    className={classes.paragraphHead}\n                                    style={{display: \"flex\", gap: \"5px\"}}\n                                >\n                                    <LocalPrintshopRoundedIcon />Print Recipe\n                                </Typography>\n                            </CardContent>\n                        </div>\n                        <Divider />\n                    </Collapse>\n                ) : null\n            }\n        </>\n    )\n}\n\n\nPostRecipeData.propTypes = {\n    postId: PropTypes.string,\n    postData: PropTypes.object,\n    expanded: PropTypes.bool,\n    rating: PropTypes.number\n};","/home/miizoo/Desktop/ReactJS/livefood/src/components/MediaViewer/Preview.js",["424","425","426","427","428","429","430"],"import React, {useEffect, useState} from \"react\";\nimport {Button, CardContent, Collapse, IconButton, Modal, TextField} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction getModalStyle() {\n    const top = 50 ;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        fontSize: \"0.875rem\"\n    },\n    paper: {\n        position: 'absolute',\n        maxWidth: 950,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        \"&:focus\": {\n            outline: \"none\"\n        },\n        maxHeight: \"600px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        overflow: \"hidden\",\n        borderRadius: \"16px\"\n    },\n    imgHolder: {\n        width: \"600px\",\n        position: \"relative\",\n        overflow : \"hidden\",\n        backgroundColor: \"rgb(232, 231, 224)\",\n        maxHeight: \"490px\"\n    },\n    img: {\n        objectFit: \"contain\",\n        height: \"100%\",\n        width: \"100%\",\n    },\n    details: {\n        backgroundColor: \"rgba(0,0,0,.8)\",\n        color: \"#fff\",\n        padding: \"20px\",\n        minHeight: \"\"\n    }\n}));\n\nfunction Previewer({data, open, handleClose}){\n    const classes = useStyles();\n    const [modalStyle] = useState(getModalStyle);\n\n\n    return (\n        <Modal\n            className={classes.root}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n        >\n            <div style={modalStyle} className={classes.paper}>\n                <div className={classes.imgHolder}>\n                    <img src={data?.mediaUrl} alt=\"\" className={classes.img}/>\n                </div>\n                <div className={classes.details}>\n                    <h2 id=\"simple-modal-title\">{data?.dishName}</h2>\n                    <p id=\"simple-modal-description\" style={{fontWeight: \"bold\", paddingTop: \"10px\"}}>\n                        {new Intl.NumberFormat().format(data?.price)} đ\n                    </p>\n                </div>\n            </div>\n        </Modal>\n    )\n}\nexport default Previewer","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileMenuList.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/Popup.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/AddDishes.js",["431"],"import React, {useEffect, useState} from \"react\";\nimport {\n    Badge,\n    Button,\n    CircularProgress,\n    IconButton,\n    Modal,\n    TextField\n} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport CancelTwoToneIcon from \"@material-ui/icons/CancelTwoTone\";\nimport PhotoCameraTwoToneIcon from \"@material-ui/icons/PhotoCameraTwoTone\";\nimport {green} from \"@material-ui/core/colors\";\nimport {db, storage} from \"../../firebase\";\nimport firebase from \"firebase\";\nimport NumberFormat from 'react-number-format';\n\nfunction getModalStyle() {\n    const top = 50 ;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        fontSize: \"0.875rem\"\n    },\n    paper: {\n        position: 'absolute',\n        width: 600,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 3, 3),\n        borderRadius: \"16px\",\n        maxHeight: \"calc(100vh - 70px)\",\n        \"&:focus\": {\n            outline: \"none\"\n        },\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    modalHeader: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"10px 0 20px 0\",\n        borderBottom: \"1px solid #39CCCC\"\n    },\n    buttonClose: {\n        position: \"fixed\",\n        right: \"20px\",\n        top: \"17px\"\n    },\n    buttonDisable: {\n        color: \"#bcc0c4 !important\",\n        backgroundColor : \"#e4e6eb !important\"\n    },\n    input: {\n        display: \"none\"\n    },\n    reviewImg: {\n        width: \"100%\",\n        objectFit: \"contain\",\n        boxShadow: \"0px 0px 2px 0px rgba(21,12,12,0.9)\",\n        borderRadius: \"max(0px, min(8px, calc((100vw - 4px - 100%) * 9999))) / 8px\"\n    },\n    inputText: {\n        width: \"100%\",\n        padding: \"10px 0\",\n        minHeight: \"100px\",\n        fontFamily: \"'Quicksand', sans-serif\"\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    buttonRemove: {\n        position: \"absolute\",\n        top: \"0px\",\n        right: \"0\"\n    },\n    value: {\n        display: \"flex\",\n        padding: \"20px 0\"\n    }\n}));\n\nfunction NumberFormatCustom(props) {\n    const { inputRef, onChange, ...other } = props;\n\n    return (\n        <NumberFormat\n            {...other}\n            getInputRef={inputRef}\n            onValueChange={(values) => {\n                onChange({\n                    target: {\n                        name: props.name,\n                        value: values.value,\n                    },\n                });\n            }}\n            thousandSeparator\n            isNumericString\n        />\n    );\n}\n\n\n\nfunction AddDishes({open, handleClose, setOpenSnack, userLogged}){\n    const classes = useStyles();\n    const [modalStyle] = useState(getModalStyle);\n    const [dishName, setDishName] = useState('');\n    const [dishImg, setDishImg] = useState('');\n    const [price, setPrice] = useState('');\n    const [disable, setDisable] = useState(true);\n    const [loading, setLoading] = useState(false);\n    const [progress, setProgress] = useState(0);\n\n\n    // const [values, setValues] = React.useState(0);\n\n    const handleChangePrice = (event) => {\n        setPrice(event.target.value);\n    };\n    // console.log(new Intl.NumberFormat().format(price))\n\n    const handleUpload = () => {\n        const imageName = Math.floor(Date.now()).toString()+dishImg.name;\n        const uploadTask = storage.ref(`media/${userLogged.uid}/${imageName}`).put(dishImg);\n        uploadTask.on(\n            \"state_changed\",\n            (snapshot => {\n                const progressData = Math.round(\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                );\n                setProgress(progressData);\n                setLoading(true);\n            }),\n            (error => {\n                console.log(error);\n            }),\n            () => {\n                storage\n                    .ref(`media/${userLogged.uid}/`)\n                    .child(imageName)\n                    .getDownloadURL()\n                    .then(url => {\n                        db.collection(\"users\").doc(userLogged.uid).collection(\"menu\").add({\n                            price: price,\n                            dishName: dishName,\n                            mediaUrl: url,\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                        })\n                            .then(function(docRef) {\n                                console.log(\"Document written with ID: \", docRef.id);\n                            })\n                            .catch(function(error) {\n                                console.error(\"Error adding document: \", error);\n                            });\n\n                        setOpenSnack(true);\n                        handleClose(true);\n                        setDishImg(\"\");\n                        setDishName(\"\");\n                        setPrice(\"\");\n                        setLoading(false);\n                        setProgress(0);\n                    })\n            }\n        )\n    }\n\n\n    const handleChange = (event) => {\n        if(event.target.files[0]){\n            setDishImg(event.target.files[0]);\n        }\n    }\n\n    const removeImage = () => {\n        setDishImg('');\n    }\n\n\n    useEffect(() => {\n        if(dishName.length > 0 && dishImg && price){            setDisable(false);\n\n            if(!/^\\s+$/.test(dishName) && price > 0){\n                setDisable(false);\n            }\n        }else {\n            setDisable(true)\n        }\n    },[dishName.length, dishImg, price])\n\n\n    return (\n        <Modal\n            className={classes.root}\n            open={open}\n            onClose={handleClose}\n        >\n            <div style={modalStyle} className={classes.paper}>\n                <div className={classes.modalHeader}>\n                    <h2>Add your own dish</h2>\n                    <div className={classes.buttonClose}>\n                        <IconButton aria-label=\"Cancel\" color=\"inherit\" onClick={handleClose} >\n                            <CancelTwoToneIcon />\n                        </IconButton>\n                    </div>\n                </div>\n\n                <div className=\"popup__caption\">\n                    <div className={classes.value}>\n                        <TextField\n                            required\n                            label=\"Dish Title\"\n                            fullWidth variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            value={dishName}\n                            onChange={event => setDishName(event.target.value)}\n\n                        />\n\n                        <TextField\n                            label=\"Price\"\n                            value={price}\n                            style = {{maxWidth: \"150px\", marginLeft: \"20px\"}}\n                            onChange={handleChangePrice}\n                            name=\"price\"\n                            id=\"price\"\n                            InputProps={{\n                                inputComponent: NumberFormatCustom,\n                            }}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            variant=\"outlined\"\n                        />\n\n                        {/*<TextField*/}\n                        {/*    required*/}\n                        {/*    style = {{maxWidth: \"150px\", marginLeft: \"20px\"}}*/}\n                        {/*    type=\"number\"*/}\n                        {/*    label=\"Price\"*/}\n                        {/*    InputLabelProps={{*/}\n                        {/*        shrink: true,*/}\n                        {/*    }}*/}\n                        {/*    InputProps={{ inputProps: { min: 0 } }}*/}\n                        {/*    value={price}*/}\n                        {/*    onChange={event => {setPrice(event.target.value)}}*/}\n                        {/*    variant=\"outlined\"*/}\n                        {/*/>*/}\n\n                    </div>\n                    {\n                        dishImg ? (\n                            <div className=\"popup__review\">\n                                <>\n                                    <img className={classes.reviewImg} src={window.URL.createObjectURL(dishImg)} alt=\"\" />\n                                    <div className={classes.buttonRemove}>\n                                        <IconButton aria-label=\"Cancel\" color=\"inherit\" onClick={removeImage} >\n                                            <CancelTwoToneIcon />\n                                        </IconButton>\n                                    </div>\n                                </>\n                            </div>\n                        ) : null\n                    }\n\n                </div>\n\n                <div className=\"popup__picker\">\n                    <h3 style={{textTransform: \"inherit\", fontSize: \"1rem\", letterSpacing: \"0\"}}>Upload picture of your dish</h3>\n                    <div className=\"popup__iconPicker\">\n                        <div>\n                            <input accept=\"image/*\" type=\"file\" onChange={handleChange} onClick={e => (e.target.value = null)} id=\"icon-button-file\" className={classes.input}/>\n\n                            <label htmlFor=\"icon-button-file\" className=\"upload__pickerButton\">\n                                <IconButton color=\"inherit\" component=\"span\" >\n                                    <Badge color=\"secondary\">\n                                        <PhotoCameraTwoToneIcon className={classes.popIcon}/>\n                                    </Badge>\n                                </IconButton>\n                            </label>\n\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"upload__button\">\n                    <Button\n                        classes={{\n                            disabled: classes.buttonDisable\n                        }}\n                        type=\"submit\"\n                        onClick={handleUpload}\n                        disabled={disable}\n                    >\n                        POST\n                    </Button>\n                    {loading && <CircularProgress value={progress} size={24} className={classes.buttonProgress} /> }\n                </div>\n            </div>\n        </Modal>\n    )\n}\nexport default AddDishes","/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/Stepper.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditNotification.js",["432","433","434","435","436"],"import React from \"react\";\n// import {useAuthState} from \"react-firebase-hooks/auth\";\n// import {auth, db, storage} from \"../../../firebase\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n// import Avatar from \"@material-ui/core/Avatar\";\n// import Skeleton from \"@material-ui/lab/Skeleton\";\n// import {Link} from \"react-router-dom\";\n// import CardHeader from \"@material-ui/core/CardHeader\";\n// import Button from \"@material-ui/core/Button\";\n// import {CircularProgress, IconButton, Modal, Switch} from \"@material-ui/core\";\n// import {green} from \"@material-ui/core/colors\";\n// import CancelTwoToneIcon from \"@material-ui/icons/CancelTwoTone\";\n// import Divider from \"@material-ui/core/Divider\";\n// import {useDocument} from \"react-firebase-hooks/firestore\";\n// import firebase from \"firebase\";\n// import Snackbar from \"@material-ui/core/Snackbar\";\n// import {Alert} from \"@material-ui/lab\";\nimport {blue, green} from \"@material-ui/core/colors\";\n// import MenuItem from '@material-ui/core/MenuItem';\n// import FormControl from '@material-ui/core/FormControl';\n// import Select from '@material-ui/core/Select';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n        width: 100,\n        height: 100,\n        margin: \"0 20px\",\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    avatarHolder: {\n        padding: \"16px 32px\",\n    },\n    holder: {\n        display: \"flex\",\n        padding: \"16px\"\n    },\n    changePhoto: {\n        color: \"#0095f6\",\n        padding: 0,\n        textTransform: \"capitalize\",\n    },\n    displayName: {\n        fontSize: 18,\n        fontWeight: \"bold\"\n    },\n    label: {\n        flex: \"0 0 25%\",\n        textAlign: \"right\",\n        paddingTop: \"5px\"\n    },\n    input: {\n        paddingLeft: 20,\n        width: \"60%\",\n        float: \"left\"\n    },\n    inputField: {\n        width: \"100%\",\n        padding: \"0 8px\",\n        height: \"32px\",\n        fontSize: \"16px\",\n        color: \"#262626\",\n        border: \"1px solid rgba(var(--ca6,219,219,219),1)\"\n\n    },\n    description: {\n        padding: \"10px 0\"\n    },\n    descriptionText: {\n        textOverflow: \"ellipsis\",\n        textAlign: \"justify\",\n        color: \"#8e8e8e\",\n        fontSize: \"12px\",\n    },\n    inputText: {\n        fontSize: \"16px\",\n        height: 60,\n        padding: \"6px 10px\",\n        resize: \"vertical\",\n        border: \"1px solid rgba(var(--ca6,219,219,219),1)\",\n        width: \"100%\"\n    },\n    formControl: {\n        margin: 0,\n        width: \"100%\",\n        height: \"32px\"\n    },\n    submit: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"20px\"\n    },\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 3, 3),\n        borderRadius: \"8px\",\n        maxHeight: \"300px\",\n        \"&:focus\": {\n            outline: \"none\"\n        },\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    modalHeader: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"10px 0 20px 0\",\n    },\n    btnAction: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    buttonClose: {\n        position: \"fixed\",\n        right: \"20px\",\n        top: \"17px\"\n    },\n    btnUpload: {\n        color : \"#0095f6\",\n        minHeight: \"48px\",\n        width : \"100%\",\n    },\n    btnRemove: {\n        color : \"#d8102a\",\n        minHeight: \"48px\",\n        width : \"100%\",\n    },\n    btnLabel: {\n        fontWeight: \"bold\"\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\n\nconst EditNotification = (props) => {\n    const {userLogged, setOpenSnack} = props;\n    const classes = useStyles();\n    const [state, setState] = React.useState(false);\n\n\n\n    const handleChange = (event) => {\n        setState((state) => !state);\n    };\n    const handleSubmit = (event) => {\n        event.preventDefault();\n    }\n\n    console.log(state);\n    return(\n        <article className=\"edit_account__content\" style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n            <h3>This section still on develop mode</h3>\n            {/*<form method=\"POST\" onSubmit={event => event.preventDefault()}>*/}\n            {/*    <div className={classes.holder}>*/}\n            {/*        <aside className={classes.label}>*/}\n            {/*            <label htmlFor=\"comments\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Comments</label>*/}\n            {/*        </aside>*/}\n            {/*        <div className={classes.input}>*/}\n            {/*            <Switch*/}\n            {/*                checked={state}*/}\n            {/*                onChange={handleChange}*/}\n            {/*                inputProps={{ 'aria-label': 'secondary checkbox' }}*/}\n            {/*                id=\"comments\"*/}\n            {/*            />*/}\n\n            {/*            <div className={classes.description}>*/}\n            {/*                <span className={classes.descriptionText}>Someone commented: \"Nice shot!\"</span>*/}\n            {/*            </div>*/}\n            {/*        </div>*/}\n            {/*    </div>*/}\n\n            {/*    <div className={classes.holder}>*/}\n            {/*        <aside className={classes.label}>*/}\n            {/*            <label htmlFor=\"request\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Follow Requests</label>*/}\n            {/*        </aside>*/}\n            {/*        <div className={classes.input}>*/}\n            {/*            <Switch*/}\n            {/*                checked={state}*/}\n            {/*                onChange={handleChange}*/}\n            {/*                inputProps={{ 'aria-label': 'secondary checkbox' }}*/}\n            {/*                id=\"request\"*/}\n            {/*            />*/}\n\n            {/*            <div className={classes.description}>*/}\n            {/*                <span className={classes.descriptionText}>Someone started to follow you</span>*/}\n            {/*            </div>*/}\n            {/*        </div>*/}\n            {/*    </div>*/}\n\n            {/*    <div className={classes.holder}>*/}\n            {/*        <aside className={classes.label}>*/}\n            {/*            <label htmlFor=\"email\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Feedback Email</label>*/}\n            {/*        </aside>*/}\n            {/*        <div className={classes.input}>*/}\n            {/*            <Switch*/}\n            {/*                checked={state}*/}\n            {/*                onChange={handleChange}*/}\n            {/*                inputProps={{ 'aria-label': 'secondary checkbox' }}*/}\n            {/*                id=\"email\"*/}\n            {/*            />*/}\n\n            {/*            <div className={classes.description}>*/}\n            {/*                <span className={classes.descriptionText}>Give feedback on our app</span>*/}\n            {/*            </div>*/}\n            {/*        </div>*/}\n            {/*    </div>*/}\n\n            {/*    <div className={classes.submit}>*/}\n            {/*        <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Update</Button>*/}\n            {/*    </div>*/}\n\n            {/*</form>*/}\n\n        </article>\n\n    )\n}\n\nexport default EditNotification","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditAbout.js",["437","438","439"],"/home/miizoo/Desktop/ReactJS/livefood/src/views/auth/ForgotPassword.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/AlertPopup.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExplorePeopleItem.js",["440"],"import React, {useEffect, useState} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport {db} from \"../../firebase\";\nimport Button from \"@material-ui/core/Button\";\nimport { useDocument} from \"react-firebase-hooks/firestore\";\nimport {Link, useLocation} from \"react-router-dom\";\nimport {handleUserFollow, handleUserUnfollow} from \"../../hooks/services\";\nimport {blue} from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n        marginLeft: \"10px\",\n        borderRadius: \"16px\",\n        padding: 0,\n        boxShadow: \"0px 0px 5px 0px #ddc4c4bf\",\n        overflow: \"hidden\"\n    },\n    inline: {\n        display: 'inline',\n    },\n    listItem: {\n        paddingTop: \"15px\",\n        paddingBottom: \"15px\",\n        borderBottom: \"1px solid #0000001f\",\n        \"&:hover\": {\n            backgroundColor: \"rgba(38, 50, 56, 0.04)\",\n        },\n    },\n    button: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: \"150px\",\n        color: \"white\",\n        backgroundColor: \"#0095f6\",\n        \"&:hover\": {\n            backgroundColor: \"#0186db\",\n        },\n        marginRight: \"15px\",\n        textTransform: \"capitalize\"\n    },\n    buttonUnfollow: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: \"150px\",\n        color: \"#454444\",\n        marginRight: \"15px\",\n        textTransform: \"capitalize\",\n    },\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    name: {\n        fontWeight: \"bold\",\n        \"&:hover\": {\n            textDecoration: \"underline\"\n        },\n    },\n    container: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(1, 1fr)\",\n        width: \"100%\",\n        maxWidth: \"990px\",\n        marginLeft: \"16px\"\n    }\n}));\n\n\nexport default function ExplorePeopleItem(props) {\n    const classes = useStyles();\n    const [users, setUsers] = useState([])\n    const {userLogged} = props;\n    const userRef = userLogged && db.collection('users').doc(userLogged.uid);\n    const [userSnapshot] = useDocument(userRef);\n    const [userLoggedData, setUserLoggedData] = useState({});\n    let query = new URLSearchParams(useLocation().search).get(\"q\");\n    let userFollowingList = userSnapshot?.data()?.following;\n    let userFollowerList = userSnapshot?.data()?.follower;\n\n\n    useEffect(() => {\n        if(userLogged){\n            setUserLoggedData({\n                uid: userLogged.uid,\n                photoURL: userLogged.photoURL,\n                displayName: userLogged.displayName\n            })\n        }\n    }, [userLogged])\n\n\n    // List user\n    useEffect(() => {\n        if(typeof userFollowingList !== 'undefined' && userFollowingList?.length > 0){\n            var followingList;\n            followingList = userSnapshot.data().following\n            userLogged.uid && followingList.push(userLogged.uid);\n            return db.collection(\"users\")\n                .get().then(snapshot => {\n                    let data = [];\n                    snapshot.forEach(function(doc) {\n                        // doc.data() is never undefined for query doc snapshots\n                        if(!followingList.includes(doc.id)){\n                            data.push({id: doc.id, user: doc.data()})\n                        }\n                    });\n                    setUsers(data);\n                })\n        }\n        else{\n            return db.collection(\"users\")\n                .where('uid' ,'!=' , userLogged.uid )\n                .get().then(snapshot => {\n                    setUsers(snapshot.docs.map(doc => ({\n                        id: doc.id,\n                        user: doc.data(),\n                    })));\n                })\n        }\n\n\n    }, [userFollowingList?.length, query])\n\n\n    // check if user followed\n    const checkFollowed = (userFollowingList, uid) => {\n        let rs = false;\n        if(typeof userFollowingList !== 'undefined' ){\n            rs = userFollowingList.includes(uid);\n        }\n        return rs;\n    }\n\n\n    const checkOpponentFollowYou = (userFollowerList, uid) => {\n        let rs = false;\n        if(typeof userFollowerList !== 'undefined' ){\n            rs = userFollowerList.includes(uid);\n        }\n        return rs;\n    }\n\n    return (\n        <div className={classes.container} >\n            <List className={classes.root}>\n                {\n                    users?.map(({id, user}) => (\n                        <ListItem key={id} alignItems=\"center\" className={classes.listItem}>\n                            <ListItemAvatar>\n                                <Avatar className={classes.avatar} alt=\"\" src={user.photoURL} />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={\n                                    <Link to={`/profile/${user?.uid}`} className={classes.name}>{user?.displayName}</Link>\n                                    }\n                                secondary={\n                                    <Typography\n                                        component=\"span\"\n                                        variant=\"body2\"\n                                        className={classes.inline}\n                                        color=\"textPrimary\"\n                                    >\n                                        Full name\n                                        -   {checkOpponentFollowYou(userFollowerList, id) ? \"Follow you\" : \" Suggested for you\"}\n                                    </Typography>\n                                }\n                            />\n\n                            {\n                                checkFollowed(userFollowingList, id) ? (\n                                    <Button\n                                        variant=\"outlined\"\n                                        style={{textTransform: \"capitalize\"}}\n                                        className={classes.buttonUnfollow}\n                                        onClick={() => handleUserUnfollow(userLogged.uid, id)}\n                                    >\n                                        Unfollow\n                                    </Button>\n                                ) : (\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        style={{textTransform: \"capitalize\"}}\n                                        className={classes.button}\n                                        onClick={() => handleUserFollow(userLoggedData, id)}\n                                    >\n                                        Follow\n                                    </Button>\n                                )\n                            }\n                        </ListItem>\n                    ))\n                }\n\n            </List>\n        </div>\n    );\n}","/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExploreItem.js",["441"],"import React, { useState} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport MediaViewer from \"../MediaViewer\";\nimport {\n    Play as PlayIcon,\n    Copy as CopyIcon\n} from \"react-feather\";\n// import {Modal} from \"@material-ui/core\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    imgContainer: {\n        width: \"100%\",\n        height: \"100%\"\n    },\n    img: {\n        objectFit: \"cover\",\n        width: \"100%\",\n        height: \"100%\",\n        minHeight: \"220px\",\n        cursor: \"pointer\",\n    },\n    icon: {\n        color: \"#050505\",\n    },\n    none: {\n        width: \"35px\",\n        height: \"35px\",\n        borderColor: \"#a5a0a0\",\n        borderWidth: \"1px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderStyle: \"solid\",\n        borderRadius: \"50%\",\n        position: \"absolute\",\n        top: \"10px\",\n        right: \"10px\",\n        zIndex: \"99\",\n        backgroundColor: \"#fff\"\n    }\n}));\n\n\nexport default function ExploreItem(props) {\n\n    const {postId, post, userLogged, postAuthor, masonry, aos} = props;\n\n    const classes = useStyles();\n    // const [postPic, setPostPic] = useState([]);\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n\n\n    return (\n        <div className={`explore__gridSmall ${masonry ? \"explore__masonry-item\" : \"\"}`} key={postId} data-aos={aos}>\n            {\n                post?.media[0]?.type === \"video/mp4\" ? (\n                    <>\n                        <video\n                            className={classes.img}\n                               // muted=\"muted\"\n                            onClick={() => handleOpen()}\n                        >\n                            <source src={post?.media[0]?.mediaPath} type=\"video/mp4\"/>\n                        </video>\n                        <div className={classes.none}>\n                            <PlayIcon\n                                className={classes.icon}\n                                size=\"15\"\n                            />\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <img\n                            alt=\"\"\n                            className={classes.img}\n                            onClick={() => handleOpen()}\n                            src={post?.media[0]?.mediaPath}\n                        />\n                        {\n                            post?.media.length >= 2  ? (\n                                <div className={classes.none}>\n                                    <CopyIcon\n                                        className={classes.icon}\n                                        size=\"15\"\n                                    />\n                                </div>\n                            ) : null\n                        }\n                    </>\n                )\n            }\n            {\n                open ? (\n                    <MediaViewer userLogged={userLogged} open={open} postId={postId} post={post} postAuthor={postAuthor} handleClose={handleClose}  />\n                ) : null\n            }\n        </div>\n    );\n}","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Search/index.js",["442"],"import React, {useEffect, useState} from \"react\";\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Hidden} from \"@material-ui/core\";\nimport {createSearchParams, useLocation, useNavigate} from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme) => ({\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(\"#f2f2f2\", 0.7),\n        '&:hover': {\n            backgroundColor: fade(\"#ded9d9\", 0.7),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        height: '30px',\n        [theme.breakpoints.up('sm')]: {\n            width: '20ch',\n            '&:focus': {\n                width: '30ch',\n            },\n        },\n    },\n}));\n\n\nfunction HeaderSearch() {\n    const classes = useStyles();\n    const [query, setQuery] = useState(\"\")\n    const navigate = useNavigate();\n\n    const location = useLocation().pathname;\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        if(query){\n            if(location !== \"/explore/people\"){\n                navigate({\n                    pathname: \"/recipe/search\",\n                    search: `?${createSearchParams({\n                        q: query.toLowerCase()\n                    })}`\n                });\n            }\n            else{\n                navigate({\n                    pathname: location,\n                    search: `?${createSearchParams({\n                        q: query.toLowerCase()\n                    })}`\n                });\n            }\n        }\n    }\n\n    // useEffect(() => {\n    //     if(!query){\n    //         navigate({\n    //             pathname: location\n    //         });\n    //     }\n    // }, [query])\n\n    return (\n        <Hidden smDown>\n            <div className=\"header__search\" onSubmit={handleSubmit}>\n                <form action=\"\" method=\"GET\">\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            name=\"search\"\n                            value={query}\n                            onChange={event => setQuery(event.target.value)}\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </div>\n                </form>\n\n            </div>\n        </Hidden>\n    )\n}\n\nexport default HeaderSearch\n","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Logo/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Item/index.js",["443","444"],"import React, {useEffect, useState} from \"react\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {Badge, MenuItem, MenuList, Popover} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Link} from \"react-router-dom\";\nimport ExploreTwoToneIcon from '@material-ui/icons/ExploreTwoTone';\nimport NotificationsActiveTwoToneIcon from '@material-ui/icons/NotificationsActiveTwoTone';\nimport { makeStyles} from \"@material-ui/core/styles\";\nimport EmailTwoToneIcon from '@material-ui/icons/EmailTwoTone';\n// import {useAuthState} from \"react-firebase-hooks/auth\";\nimport {auth, db} from \"../../../firebase\";\nimport HomeTwoToneIcon from '@material-ui/icons/HomeTwoTone';\nimport Divider from \"@material-ui/core/Divider\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {\n    User as UserIcon,\n    Bookmark as BookmarkIcon,\n    Settings as SettingIcon,\n    LogOut as LogoutIcon, Camera as CameraIcon,\n    Bell as BellIcon\n} from 'react-feather';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport {handleSeenNotification} from \"../../../hooks/services\";\nimport {blue} from \"@material-ui/core/colors\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        height: \"28px\",\n        width: \"28px\",\n        color: \"#00000099\"\n    },\n    active: {\n        color: \"#3f51b5\",\n    },\n    popupNoti: {\n        minHeight: 300,\n        zIndex: 99999\n    },\n    userPopover: {\n        width: \"400px\"\n    },\n    userPopoverItem: {\n        padding: \"10px 20px\"\n    },\n    iconBtn: {\n        marginRight: theme.spacing(1),\n        color: \"#050505\",\n    },\n    iconBtnCircle: {\n        marginRight: theme.spacing(1),\n        color: \"#050505\",\n        border: \"1px solid\",\n        borderRadius: \"50%\",\n    },\n    root: {\n        width: '350px',\n        backgroundColor: theme.palette.background.paper,\n        maxHeight: \"calc(100vh - 100px)\",\n        overflowY: \"auto\",\n        minHeight: \"200px\",\n        padding: \"8px\"\n    },\n    inline: {\n        display: 'inline',\n    },\n    notFoundIcon: {\n        color: \"#050505\"\n    },\n    wrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        width: \"100%\"\n    },\n    none: {\n        width: \"50px\",\n        height: \"50px\",\n        borderColor: \"#262626\",\n        borderWidth: \"2px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderStyle: \"solid\",\n        borderRadius: \"50%\",\n        margin: \"50px 0 20px 0\"\n    },\n    notiItem: {\n        maxHeight: \"100px\",\n        borderRadius: \" 8px\",\n        \"&:hover\": {\n            backgroundColor: \"rgba(38, 50, 56, 0.1)\",\n        },\n    },\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n        cursor: \"pointer\"\n    },\n}));\n\n\nfunction MenuHeader(props) {\n    const classes = useStyles();\n    const [messCount, setMessCount] = useState(0);\n    const {userLogged} = props;\n\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n    const [anchorElNotice, setAnchorElNotice] = useState(null);\n    const openNotice = Boolean(anchorElNotice);\n    const idNotice = openNotice ? 'simple-popper' : undefined;\n    const [notifications, setNotifications] = useState([])\n    // day ago\n    dayjs.extend(relativeTime);\n\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleNotice = (event) => {\n        setAnchorElNotice(anchorElNotice ? null : event.currentTarget);\n    }\n    const handleCloseNotice = () => {\n        setAnchorElNotice(null);\n    };\n\n\n    useEffect(() => {\n        var query = db.collection(\"conversations\");\n        userLogged && query\n            .where('users', 'array-contains', userLogged.email)\n            .where('isSeen', '==', false)\n            .where('lastSend', '!=', userLogged.email)\n            .onSnapshot((snapshot) => {\n                setMessCount(snapshot.size);\n            });\n    }, [userLogged])\n\n    useEffect(() => {\n        const unsubscribe = db.collection('users').doc(userLogged.uid).collection(\"notifications\")\n            .orderBy('timestamp', 'desc')\n            .limit(30)\n            .onSnapshot(snapshot => {\n                setNotifications(snapshot.docs.map((doc => ({\n                    id: doc.id,\n                    data: doc.data(),\n                }))))\n            })\n        return () => {\n            unsubscribe();\n        }\n    }, [userLogged])\n\n\n    const countNoti = notifications.filter(function(item){\n        return item.data.status === \"unread\";\n    }).length; // 6\n\n    return(\n        <div className=\"menuHeader\">\n            <div className=\"menuIcon\">\n                <Link to=\"/\">\n                    <IconButton color=\"inherit\">\n                        <Badge color=\"secondary\">\n                            <HomeTwoToneIcon className={classes.icon} />\n                        </Badge>\n                    </IconButton>\n                </Link>\n\n                <Link to=\"/explore/news\">\n                    <IconButton color=\"inherit\" >\n                        <Badge color=\"secondary\" >\n                            <ExploreTwoToneIcon className={classes.icon} />\n                        </Badge>\n                    </IconButton>\n                </Link>\n\n                <Link to={{\n                    pathname: `/messages`,\n                    state: { users: userLogged }\n                }}>\n                    <IconButton aria-label=\"4 new messages\" color=\"inherit\" >\n                        <Badge badgeContent={messCount} max={20} color=\"error\">\n                            <EmailTwoToneIcon className={classes.icon}/>\n                        </Badge>\n                    </IconButton>\n                </Link>\n\n                <IconButton aria-label=\"11 new notifications\" color=\"inherit\" onClick={handleNotice}>\n                    <Badge color=\"error\" badgeContent={countNoti} max={20}>\n                        <NotificationsActiveTwoToneIcon className={classes.icon}/>\n                    </Badge>\n                </IconButton>\n\n                <Popover\n                    disableScrollLock\n                    id={idNotice}\n                    open={openNotice}\n                    anchorEl={anchorElNotice}\n                    onClose={handleCloseNotice}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                >\n                    <List className={classes.root}>\n                        {\n                            notifications.length > 0  ? (\n                                notifications.map(({id, data}) => (\n                                    <ListItem alignItems=\"center\" className={classes.notiItem} key={id}>\n                                        <ListItemAvatar>\n                                            <Link to={`/profile/${data?.uid}`} >\n                                                <Avatar alt={data?.displayName} src={data?.avatar} />\n                                            </Link>\n                                        </ListItemAvatar>\n                                        <Link\n                                            to={data?.path}\n                                            style={{flex: \"1 1 auto\", paddingRight: \"10px\"}}\n                                            onClick={() => {\n                                                handleSeenNotification(userLogged.uid, id);\n                                                handleCloseNotice();\n                                            }}\n                                        >\n                                            <ListItemText\n                                                primary={\n                                                    <React.Fragment>\n                                                        <span style={{fontWeight: \"bold\", marginRight: \"5px\"}}>{data?.from}</span>\n                                                        <span>{data?.message}</span>\n                                                    </React.Fragment>\n                                                }\n                                                secondary={\n                                                    dayjs(new Date(data?.timestamp.seconds * 1000).toLocaleString()).fromNow()\n                                                }\n                                            />\n                                        </Link>\n                                        {\n                                            data?.status === \"unread\" ? (\n                                                <div id=\"new\" className=\"style-scope ytd-notification-renderer \"/>\n                                            ) : null\n                                        }\n\n                                    </ListItem>\n                                ))\n                            ) : (\n                                <div className={classes.wrapper}>\n                                    <div className={classes.none}>\n                                        <BellIcon\n                                            className={classes.notFoundIcon}\n                                            size=\"20\"\n                                        />\n                                    </div>\n                                    <h2 style={{paddingBottom: \"10px\"}}>You're up to head</h2>\n                                </div>\n                            )\n                        }\n                    </List>\n                </Popover>\n\n                <IconButton onClick={handleClick}>\n                    <Avatar alt={userLogged?.displayName} src={userLogged?.photoURL} className={classes.avatar}/>\n                </IconButton>\n                <Popover\n                    className={classes.userPopover}\n                    disableScrollLock\n                    id={id}\n                    open={open}\n                    anchorEl={anchorEl}\n                    onClose={handleClose}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                >\n                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" style={{padding: \"0\", minWidth: 200}} >\n                        <Link to={{pathname:`/profile/${userLogged?.uid}`}} >\n                            <MenuItem onClick={handleClose} className={classes.userPopoverItem}>\n                                <UserIcon\n                                    className={classes.iconBtnCircle}\n                                    size=\"15\"\n                                />\n                                Profile\n                            </MenuItem>\n                        </Link>\n                        <Link to={{pathname:`/profile/saved/${userLogged?.uid}`}} >\n                            <MenuItem onClick={handleClose} className={classes.userPopoverItem}>\n                                <BookmarkIcon\n                                    className={classes.iconBtn}\n                                    size=\"15\"\n                                />\n                                Save\n                            </MenuItem>\n                        </Link>\n                        <Link to={{pathname:`/account/edit`}} >\n                            <MenuItem onClick={handleClose} className={classes.userPopoverItem}>\n                                <SettingIcon\n                                    className={classes.iconBtn}\n                                    size=\"15\"\n                                />\n                                Setting\n                            </MenuItem>\n                        </Link>\n                        <Divider />\n                        <MenuItem onClick={() => auth.signOut()} className={classes.userPopoverItem}>\n                            <LogoutIcon\n                                className={classes.iconBtn}\n                                size=\"15\"\n                            />\n                            Logout\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        </div>\n    )\n}\n\nexport default MenuHeader\n\n","/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/CommentInput.js",["445"],"import React, {useState} from \"react\";\nimport {Box, Popover, TextField} from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {db} from \"../../firebase\";\nimport firebase from \"firebase\";\nimport Button from \"@material-ui/core/Button\";\nimport {Rating} from \"@material-ui/lab\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport SentimentSatisfiedRoundedIcon from \"@material-ui/icons/SentimentSatisfiedRounded\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Picker} from \"emoji-mart\";\n\nconst labels = {\n    1: 'Useless',\n    2: 'Poor',\n    3: 'Ok',\n    4: 'Good',\n    5: 'Excellent',\n};\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        flexDirection: \"column\",\n        width: \"100%\",\n    },\n    rating: {\n        display: 'flex',\n        paddingLeft: \"15px\",\n        alignItems: \"center\",\n    },\n    resize: {\n        fontSize: \"14px\",\n        lineHeight: \"22px\",\n    },\n    iconPicker: {\n        padding: \"15px\"\n    }\n});\n\nexport default function CommentInput({user, postId, type, path, refInput, postAuthor}){\n\n    const classes = useStyles();\n    const [value, setValue] = React.useState('');\n    const [hover, setHover] = React.useState(-1);\n    const [comment, setComment] = useState('');\n    const postRef = db.collection('posts').doc(postId);\n    const [postSnapshot] = useDocument(postRef);\n    let rating = postSnapshot?.data()?.rating\n\n    const checkEmpty = (string) => {\n        let rs = true\n        if(string.length > 0 && !/^\\s+$/.test(string)){\n            rs=false\n        }\n        return rs;\n    }\n\n    const [anchorElPicker, setAnchorElPicker] = useState(null);\n\n    const openEmoji = Boolean(anchorElPicker);\n    const id = openEmoji ? 'simple-popover-picker' : undefined;\n\n    const handleClickEmoji = (event) => {\n        setAnchorElPicker(event.currentTarget);\n    }\n    const handleCloseEmoji = () => {\n        setAnchorElPicker(null);\n    };\n    const addEmoji = (event) => {\n        let emoji = event.native;\n        setComment(comment + emoji);\n    }\n\n    const checkingKeypress = (event) => {\n        if(event.key === \"Enter\"){\n            if(!event.shiftKey){\n\n                postComment(event)\n            }\n        }\n    }\n\n\n    const postComment = (event) => {\n        event.preventDefault();\n        if(comment && !checkEmpty(comment)){\n            if(value){\n                if(typeof rating == 'undefined'){\n                    db.collection(\"posts\").doc(postId).update({\n                        rating: value\n                    })\n                }\n                else{\n                    let avg = parseFloat((parseFloat(rating) + parseFloat(value)) / 2);\n                    db.collection(\"posts\").doc(postId).update({\n                        rating: avg\n                    })\n                }\n\n                db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n                    text: comment,\n                    user: db.doc('users/' + user.uid),\n                    uid: user.uid,\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                    rating: value\n                }).then(() => {\n                    db.collection('posts').doc(postId).update({\n                        commentsCount: firebase.firestore.FieldValue.increment(1)\n                    })\n                    if(postAuthor !== user?.uid) {\n                        postAuthor && db.collection('users').doc(postAuthor).collection(\"notifications\").add({\n                            reference: \"post\",\n                            type : \"comment\",\n                            message: \"rating on your post\",\n                            from : user.displayName,\n                            avatar: user.photoURL,\n                            uid: user.uid,\n                            path : \"/p/\" + postId,\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                            status: \"unread\"\n                        })\n                    }\n                })\n            }\n            else {\n                db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n                    text: comment,\n                    user: db.doc('users/' + user.uid),\n                    uid: user.uid,\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                }).then(() => {\n                    db.collection('posts').doc(postId).update({\n                        commentsCount: firebase.firestore.FieldValue.increment(1)\n                    })\n                    if(postAuthor !== user?.uid) {\n                        postAuthor && db.collection('users').doc(postAuthor).collection(\"notifications\").add({\n                            reference: \"post\",\n                            type : \"comment\",\n                            message: \"commented on your post\",\n                            from : user.displayName,\n                            avatar: user.photoURL,\n                            opponentId: user.uid,\n                            path : \"/p/\" + postId,\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                            status: \"unread\"\n                        })\n                    }\n                });\n            }\n            setComment('');\n        }\n    }\n\n    return(\n        <>\n\n            <div className={`commentContainer ${path === \"preview\" ? \"commentViewer\" : \"\"}`}>\n                {\n                    path === \"preview\" ? null : <Avatar alt={user?.displayName} src={user?.photoURL} />\n                }\n                <div className={classes.root}>\n                    {\n                        type ==='recipe' && comment && postAuthor !== user?.uid ? (\n                            <div className={classes.rating}>\n                                <Rating\n                                    name=\"hover-feedback\"\n                                    value={value}\n                                    precision={1}\n                                    onChange={(event, newValue) => {\n                                        setValue(newValue);\n                                    }}\n                                    onChangeActive={(event, newHover) => {\n                                        setHover(newHover);\n                                    }}\n                                />\n                                {value !== null && <Box ml={2}>{labels[hover !== -1 ? hover : value]}</Box>}\n                            </div>\n                        ) : null\n                    }\n\n                    <form onSubmit={postComment} autoComplete=\"off\">\n                        <TextField\n                            onKeyPress={event => checkingKeypress(event)}\n                            rowsMax={4}\n                            multiline\n                            ref={refInput}\n                            className=\"comment__input\"\n                            placeholder=\"Leave a comment ... \"\n                            value={comment}\n                            onChange={event => setComment(event.target.value)}\n                            InputProps={{\n                                disableUnderline: true,\n                                classes: {\n                                    input: classes.resize,\n                                }}}\n                        />\n                        <IconButton className={classes.iconPicker} aria-label=\"Add \" onClick={handleClickEmoji}>\n                            <SentimentSatisfiedRoundedIcon />\n                        </IconButton>\n                        {\n                            openEmoji ? (\n                                <Popover\n                                    id={id}\n                                    open={openEmoji}\n                                    anchorEl={anchorElPicker}\n                                    onClose={handleCloseEmoji}\n                                    anchorOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'left',\n                                    }}\n                                    transformOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'center',\n                                    }}\n                                >\n                                    <Picker\n                                        onSelect={addEmoji}\n                                        title=\"Livefood\"\n                                    />\n                                </Popover>\n\n                            ) : null\n                        }\n                        {/*<Button variant=\"contained\" disabled={checkEmpty(comment)} onClick={postComment} style={{textTransform: \"capitalize\"}}>*/}\n                        {/*    Post*/}\n                        {/*</Button>*/}\n                    </form>\n                </div>\n\n            </div>\n        </>\n    )\n}\n\n","/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/CommentDetails.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/recipe/RecipePage.js",["446","447","448","449"],"import React, {useEffect, useState} from \"react\";\nimport Page from \"../../components/Page\";\nimport {Link} from \"react-router-dom\";\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\nimport AccessTimeRoundedIcon from '@material-ui/icons/AccessTimeRounded';\nimport Divider from \"@material-ui/core/Divider\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport {db} from \"../../firebase\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {Camera as CameraIcon} from \"react-feather\";\nimport {Rating} from \"@material-ui/lab\";\nimport ListRecipe from \"../../components/Recipe/ListRecipe\";\nimport NewestRecipe from \"../../components/Recipe/NewestRecipe\";\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        width: \"40%\"\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    icon: {\n        color: \"#050505\"\n    },\n    wrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        maxHeight: \"300px\",\n        width: \"100%\"\n    },\n    none: {\n        width: \"100px\",\n        height: \"100px\",\n        borderColor: \"#262626\",\n        borderWidth: \"2px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderStyle: \"solid\",\n        borderRadius: \"50%\",\n        margin: \"50px 0 20px 0\"\n    },\n    rating: {\n        display: \"flex\",\n        alignItems: \"center\",\n        width: \"100%\"\n    }\n}));\n\nconst RecipePage = (props) => {\n    const classes = useStyles();\n    const [type, setType] = React.useState('newest');\n    const [newest, setNewest] = useState([]);\n    const [listRecipe, setListRecipe] = useState([]);\n    const [cate] = useCollection(db.collection(\"category\"))\n\n    const handleChange = (event) => {\n        setType(event.target.value);\n    };\n\n    useEffect( () => {\n        // Set newest\n        db.collection('posts')\n            .where('type', '==', 'recipe')\n            .orderBy('timestamp', \"desc\")\n            .limit(2)\n            .get().then(async snapshot => {\n                const track = await Promise.all(\n                    snapshot.docs.map(async doc => ({\n                        id: doc.id,\n                        post: doc.data(),\n                        postAuthor: await Promise.resolve(doc.data().user.get().then( author => {\n                            return author.data();\n                        }))\n                    })));\n                setNewest(track);\n        })\n\n        // Set all post\n        if(type === 'newest'){\n            db.collection('posts')\n                .where('type', '==', 'recipe')\n                .orderBy('timestamp', \"desc\")\n                .limit(12)\n                .get().then(async snapshot => {\n                    const tracking = await Promise.all(\n                        snapshot.docs.map(async doc => ({\n                            id: doc.id,\n                            post: doc.data(),\n                            postAuthor: await Promise.resolve(doc.data().user.get().then( author => {\n                                return author.data();\n                            }))\n                        }))\n                    )\n                    setListRecipe(tracking);\n            })\n        }\n        else{\n            db.collection('posts')\n                .where('type', '==', 'recipe')\n                .where('data.category', '==', type.toLowerCase())\n                .orderBy('timestamp', \"desc\")\n                .limit(12)\n                .get().then(async snapshot => {\n                    const tracking = await Promise.all(\n                        snapshot.docs.map(async doc => ({\n                            id: doc.id,\n                            post: doc.data(),\n                            postAuthor: await Promise.resolve(doc.data().user.get().then( author => {\n                                return author.data();\n                            }))\n                        }))\n                    )\n                    setListRecipe(tracking);\n            })\n        }\n\n    },[type]);\n\n\n    return (\n        <Page\n            title=\"Recipes | LiveFood\"\n            className=\"app__bodyContainer\"\n        >\n            <div className=\"recipe__page\">\n                <div className=\"recipe__heading\">\n                    <h1>Recipes</h1>\n                    <div className=\"feature-content\">\n                        {\n                            newest.length > 0 ? (\n                                (newest.map( ({id, post, postAuthor}) => (\n                                    <NewestRecipe key={id} id={id} post={post} postAuthor={postAuthor}/>\n                                ))\n                            )) : null\n                        }\n                    </div>\n                </div>\n                <Divider />\n                <div className=\"recipe__content\">\n                    <FormControl className={classes.formControl}>\n                        <Select\n                            style={{fontWeight: \"bold\", textTransform: \"uppercase\"}}\n                            fullWidth\n                            value={type}\n                            onChange={handleChange}\n                        >\n                            <MenuItem value={'newest'} style={{fontWeight: \"bold\", textTransform: \"uppercase\"}}>Newest</MenuItem>\n                            {\n                                cate?.docs?.map((doc) => (\n                                    <MenuItem key={doc.id} value={doc.data().title} style={{fontWeight: \"bold\", textTransform: \"uppercase\"}}>{doc.data().title}</MenuItem>\n                                ))\n                            }\n\n                        </Select>\n                    </FormControl>\n                    <div className=\"list-recipe\">\n                            {\n                                listRecipe.length > 0 ? (\n                                    <div className=\"list-recipe-grid\" style={{gridGap: \"24px\"}}>\n                                        {\n                                            listRecipe.map(({id, post, postAuthor}) => (\n                                                <ListRecipe key={id} id={id} post={post} postAuthor={postAuthor}/>\n                                            ))\n                                        }\n                                    </div>\n                                ) : (\n                                    <div className={classes.wrapper}>\n                                        <div className={classes.none}>\n                                            <CameraIcon\n                                                className={classes.icon}\n                                                size=\"40\"\n                                            />\n                                        </div>\n                                        <h2 style={{paddingBottom: \"10px\"}}>No Posts Found</h2>\n                                    </div>\n                                )\n                            }\n                    </div>\n                </div>\n            </div>\n        </Page>\n    )\n}\n\nexport default RecipePage;","/home/miizoo/Desktop/ReactJS/livefood/src/views/recipe/TopicPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/recipe/TrendingPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/ListUserInProfile.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Recipe/ListRecipe.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Recipe/NewestRecipe.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/recipe/ResultRecipePace.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/images/icons/Google.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/LocationPage.js",["450","451","452","453"],"import React, {useEffect, useState} from \"react\";\nimport NavBar from \"../components/SideBar/LeftSideBar\";\nimport Page from \"../components/Page\";\nimport {db} from \"../firebase\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport {InputLabel, MenuItem, Select} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {MapPin as MapPinIcon} from \"react-feather\";\nimport {Link} from \"react-router-dom\";\nimport {Rating} from \"@material-ui/lab\";\nimport FavoriteRoundedIcon from \"@material-ui/icons/FavoriteRounded\";\nimport AccessTimeRoundedIcon from \"@material-ui/icons/AccessTimeRounded\";\nimport {handleUserFollow, handleUserUnfollow} from \"../hooks/services\";\nimport Button from \"@material-ui/core/Button\";\nimport LocationOnRoundedIcon from \"@material-ui/icons/LocationOnRounded\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 220,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    icon: {\n        color: \"#050505\"\n    },\n    wrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        maxHeight: \"300px\",\n        width: \"100%\"\n    },\n    none: {\n        width: \"100px\",\n        height: \"100px\",\n        borderColor: \"#262626\",\n        borderWidth: \"2px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderStyle: \"solid\",\n        borderRadius: \"50%\",\n        margin: \"50px 0 20px 0\"\n    },\n    button: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: \"150px\",\n        color: \"white\",\n        backgroundColor: \"#0095f6\",\n        \"&:hover\": {\n            backgroundColor: \"#0186db\",\n        },\n        textTransform: \"capitalize\",\n        margin: \"auto\"\n    },\n    buttonUnfollow: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: \"150px\",\n        color: \"#454444\",\n        // \"&:hover\": {\n        //     backgroundColor: \"#c3d6fa\",\n        // },\n        marginRight: \"15px\",\n        textTransform: \"capitalize\"\n    },\n}));\n\n\nexport default function LocationPage(props){\n    const {userLogged} = props;\n    const classes = useStyles();\n    const [listRestaurantCate, setListRestaurantCate] = useState([]);\n    const [restaurantCate, setRestaurantCate] = useState('');\n    const [userProvince, setUserProvince] = useState(\"\");\n    const [province, setProvince] = useState([]);\n    const [listRestaurant, setListRestaurant] = useState([]);\n    const [userLoggedData, setUserLoggedData] = useState({});\n\n    useEffect(() => {\n        if(userLogged){\n            setUserLoggedData({\n                uid: userLogged.uid,\n                photoURL: userLogged.photoURL,\n                displayName: userLogged.displayName\n            })\n        }\n    }, [userLogged])\n\n    useEffect(() => {\n        fetch('https://vapi.vnappmob.com/api/province/')\n            .then(res => res.json()).then(res => {\n            if (res.results && res.results.length > 0) {\n                setProvince(res.results)\n            }\n        });\n\n    }, []);\n\n\n    useEffect(() => {\n        const userRef = db.collection('users');\n        if(restaurantCate){\n            if(userProvince){\n                return userRef\n                    .where('accountType', '==', 'foodshop')\n                    .where('aboutRestaurant.modelId', '==', restaurantCate)\n                    .where('aboutRestaurant.locationId', '==', userProvince)\n                    .limit(20)\n                    .onSnapshot( snapshot => {\n                        setListRestaurant(snapshot.docs.map(doc => ({\n                            id: doc.id,\n                            data: doc.data(),\n                        })));\n                    })\n            }\n            else\n                return userRef\n                    .where('accountType', '==', 'foodshop')\n                    .where('aboutRestaurant.modelId', '==', restaurantCate)\n                    .limit(20)\n                    .onSnapshot( snapshot => {\n                        setListRestaurant(snapshot.docs.map(doc => ({\n                            id: doc.id,\n                            data: doc.data(),\n                        })));\n                    })\n        }\n        else{\n            if(userProvince){\n                return userRef\n                    .where('accountType', '==', 'foodshop')\n                    .where('aboutRestaurant.locationId', '==', userProvince)\n                    .limit(20)\n                    .onSnapshot( snapshot => {\n                        setListRestaurant(snapshot.docs.map(doc => ({\n                            id: doc.id,\n                            data: doc.data(),\n                        })));\n                    })\n            }\n            else\n                return userRef\n                    .where('accountType', '==', 'foodshop')\n                    .limit(20)\n                    .onSnapshot( snapshot => {\n                        setListRestaurant(snapshot.docs.map(doc => ({\n                            id: doc.id,\n                            data: doc.data(),\n                        })));\n                    })\n        }\n    }, [restaurantCate, userProvince])\n\n\n    useEffect(() => {\n        return db.collection('restaurantCategory')\n            .orderBy('title', 'asc')\n            .limit(20)\n            .get().then( snapshot => {\n                setListRestaurantCate(snapshot.docs.map(doc => ({\n                    id: doc.id,\n                    title: doc.data().title,\n                })));\n            })\n    }, [])\n    return (\n        <Page\n            title=\"LiveFood\"\n            className=\"app__bodyContainer\"\n        >\n            <NavBar userLogged={userLogged}/>\n            <div className=\"list-users\">\n                <div className=\"list-users__header\">\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                        <InputLabel id=\"restaurant_category_label\">Category</InputLabel>\n                        <Select\n                            labelId=\"restaurant_category_label\"\n                            id=\"restaurant_category\"\n                            value={restaurantCate}\n                            onChange={(event) => setRestaurantCate(event.target.value)}\n                            label=\"Category\"\n                        >\n                            <MenuItem value=\"\" >\n                                <em>None</em>\n                            </MenuItem>\n                            {\n                                listRestaurantCate.map(({id, title}) => (\n                                    <MenuItem key={id} value={id}>{title}</MenuItem>\n                                ))\n                            }\n                        </Select>\n                    </FormControl>\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                        <InputLabel id=\"restaurant_location_label\">Location</InputLabel>\n                        <Select\n                            native\n                            labelId=\"restaurant_location_label\"\n                            id=\"restaurant_location\"\n                            value={userProvince}\n                            onChange={event => setUserProvince(event.target.value)}\n                            label=\"Location\"\n                        >\n                            <option aria-label=\"None\" value=\"\" />\n                            {\n                                province?.map((doc) => (\n                                    <option key={doc.province_id} value={doc.province_id}>{doc.province_name}</option>\n                                ))\n                            }\n                        </Select>\n                    </FormControl>\n                </div>\n\n                {\n                    listRestaurant.length > 0 ? (\n                        <div className=\"list-users__container\">\n                            {\n                                listRestaurant.map(({id, data}) => (\n                                    <div key={id} className=\"list-users-item\">\n                                        <div className=\"list-users-wrap\">\n                                            <div className=\"inner-wrap\" style={{height: \"220px\"}}>\n                                                <Link to=\"\" className='text-link'>\n                                                    <img\n                                                        src={data?.photoURL} alt=\"\"/>\n                                                </Link>\n                                            </div>\n                                            <div className=\"tile-content\">\n                                                <div className=\"details\">\n                                                    <h2 className=\"title\" title={data?.displayName}>\n                                                        <Link to={`/profile/${id}`}>{data?.displayName}</Link>\n                                                        {\n                                                            data?.aboutRestaurant?.location ? (\n                                                                    <span className=\"user-location\">\n                                                                        {data?.aboutRestaurant?.address ?? \"\" }\n                                                                        {\" - \" + data?.aboutRestaurant?.location}\n                                                                    </span>\n                                                            ) : null\n                                                        }\n\n                                                    </h2>\n\n                                                    {\n                                                        id === userLogged.uid ? null : (\n                                                            <div className=\"follow-me\">\n                                                                {\n                                                                    data?.follower?.includes(userLogged.uid) ? (\n                                                                        <Button\n                                                                            variant=\"outlined\"\n                                                                            style={{textTransform: \"capitalize\"}}\n                                                                            className={classes.buttonUnfollow}\n                                                                            onClick={() => handleUserUnfollow(userLogged.uid, id)}\n                                                                        >\n                                                                            Unfollow\n                                                                        </Button>\n                                                                    ) : (\n                                                                        <Button\n                                                                            variant=\"contained\"\n                                                                            color=\"primary\"\n                                                                            style={{textTransform: \"capitalize\"}}\n                                                                            className={classes.button}\n                                                                            onClick={() => handleUserFollow(userLoggedData, id)}\n                                                                        >\n                                                                            Follow\n                                                                        </Button>\n                                                                    )\n                                                                }\n\n                                                            </div>\n                                                        )\n                                                    }\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))\n                            }\n                        </div>\n                    ) : (\n                        <div className={classes.wrapper}>\n                            <div className={classes.none}>\n                                <MapPinIcon\n                                    className={classes.icon}\n                                    size=\"40\"\n                                />\n                            </div>\n                            <h2 style={{paddingBottom: \"10px\"}}>No restaurant found !</h2>\n                        </div>\n                    )\n                }\n\n            </div>\n        </Page>\n    )\n}\n","/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/PostUtil.js",["454"],"import React, {useState} from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {Button, Modal} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {green} from \"@material-ui/core/colors\";\nimport {handleReportPost, handleDeletePost, handleUserUnfollow} from \"../../hooks/services\";\n\nfunction getModalStyle() {\n    const top = 50 ;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 300,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: '0',\n        borderRadius: \"8px\",\n        maxHeight: \"300px\",\n        \"&:focus\": {\n            outline: \"none\"\n        },\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    btnAction: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    btnNormal: {\n        color : \"#282626\",\n        minHeight: \"48px\",\n        width : \"100%\",\n        textTransform: \"capitalize\",\n        fontSize: \"16px\"\n    },\n    btnRed: {\n        color : \"#d8102a\",\n        minHeight: \"48px\",\n        width : \"100%\",\n        textTransform: \"capitalize\",\n        fontSize: \"16px\"\n    },\n    btnLabel: {\n        fontWeight: \"bold\"\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\n\n\nconst PostUtil = (props) => {\n    const {open, handleClose, uid, opponentID, postID, handleRemove, handleReport, handleOpenEdit, isSave, setOpenSnack} = props;\n\n    const [modalStyle] = useState(getModalStyle);\n    const classes = useStyles();\n\n\n    return (\n        <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n        >\n            <div style={modalStyle} className={classes.paper}>\n                <Divider />\n                {\n                    uid === opponentID ? (\n                        <>\n                            <div className={classes.btnAction}>\n                                <Button\n                                    classes={{\n                                        root: classes.btnRed,\n                                        label: classes.btnLabel,\n                                    }}\n                                    onClick={\n                                        () => {\n                                            handleDeletePost(postID);\n                                            // handleRemove(postID);\n                                            handleClose(true);\n                                            setOpenSnack(true);\n                                        }\n                                    }\n                                >\n                                    Delete\n                                </Button>\n                            </div>\n                            <Divider />\n\n                            <div className={classes.btnAction}>\n                                <Button\n                                    classes={{\n                                        root: classes.btnRed,\n                                        label: classes.btnLabel,\n                                    }}\n                                    onClick={\n                                        () => {\n                                            // handleUserUnfollow(uid, opponentID);\n                                            handleOpenEdit();\n                                            handleClose(true);\n                                        }\n                                    }\n                                >\n                                    Edit\n                                </Button>\n                            </div>\n                            <Divider />\n                        </>\n                    ) : (\n                        <>\n                            <div className={classes.btnAction}>\n                                <Button\n                                    classes={{\n                                        root: classes.btnRed,\n                                        label: classes.btnLabel,\n                                    }}\n                                    onClick={\n                                        () => {\n                                            handleReportPost(uid, postID);\n                                            // handleRemove(postID);\n                                            // handleClose(true);\n                                        }\n                                    }\n                                >\n                                    Report\n                                </Button>\n                            </div>\n                            <Divider />\n                            <div className={classes.btnAction}>\n                                <Button\n                                    classes={{\n                                        root: classes.btnRed,\n                                        label: classes.btnLabel,\n                                    }}\n                                    onClick={\n                                        () => {\n                                            handleUserUnfollow(uid, opponentID);\n                                            handleRemove(postID);\n                                            setOpenSnack(true);\n                                            handleClose(true);\n                                        }\n                                    }\n                                >\n                                    Unfollow\n                                </Button>\n                            </div>\n                            <Divider />\n                        </>\n                    )\n                }\n\n\n                <div className={classes.btnAction}>\n                    <Button\n                        component={Link}\n                        to={`/p/${postID}`}\n                        classes={{\n                            root: classes.btnNormal,\n                            label: classes.btnLabel,\n                        }}\n                    >\n                        Go to post\n                    </Button>\n                </div>\n                <Divider />\n\n                {\n                    !isSave ? (\n                        <>\n                            <div className={classes.btnAction}>\n                                <Button\n                                    classes={{\n                                        root: classes.btnNormal,\n                                        label: classes.btnLabel,\n                                    }}\n                                    onClick={() => {\n                                        setOpenSnack(true);\n                                    }}\n                                >\n                                    Save post\n                                </Button>\n                            </div>\n                            <Divider />\n                        </>\n                    ) : null\n                }\n\n                <div className={classes.btnAction}>\n                    <Button\n                        classes={{\n                            root: classes.btnNormal,\n                            label: classes.btnLabel,\n                        }}\n                        onClick={handleClose}\n                    >\n                        Cancel\n                    </Button>\n                </div>\n                <Divider />\n            </div>\n\n        </Modal>\n    )\n\n}\n\n\nexport default PostUtil","/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/CommentUtil.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/Survey.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/ListUserLikePost.js",["455"],"import React, {useEffect, useState} from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {DialogContent} from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {Link} from \"react-router-dom\";\nimport {checkMyFollowingList, handleUserFollow, handleUserUnfollow} from \"../../hooks/services\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddCircleTwoToneIcon from \"@material-ui/icons/AddCircleTwoTone\";\nimport PropTypes from \"prop-types\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {blue} from \"@material-ui/core/colors\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport {db} from \"../../firebase\";\nimport firebase from \"firebase\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        borderRadius: \"16px\",\n\n    },\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    button: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: \"150px\",\n        color: \"white\",\n        backgroundColor: \"#0095f6\",\n        \"&:hover\": {\n            backgroundColor: \"#0186db\",\n        },\n        marginRight: \"15px\",\n        textTransform: \"capitalize\"\n    },\n    buttonUnfollow: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: \"150px\",\n        color: \"#454444\",\n        // \"&:hover\": {\n        //     backgroundColor: \"#c3d6fa\",\n        // },\n        marginRight: \"15px\",\n        textTransform: \"capitalize\"\n    },\n    dialog: {\n        maxWidth: \"600px\",\n        width: \"420px\",\n        padding: \"10px\",\n        maxHeight : \"500px\"\n    },\n    dialogTitle: {\n        textAlign: \"center\",\n        fontWeight: \"bold\"\n    },\n    displayName: {\n        maxWidth: \"120px\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        display: \"inline-block\"\n    },\n    opening: {\n        display: \"flex\",\n        alignItems: \"center\",\n        color: \"#65676B\",\n        padding: \"20px 0\"\n    },\n}));\n\n\nexport default function ListUserLikePost(props){\n    const classes = useStyles();\n    const { open, handleClose, userLogged, likesCount, postLike } = props;\n\n    const [authData] = useDocument(userLogged && db.collection('users').doc(userLogged.uid));\n    const authFollowingList = authData?.data()?.following;\n    const [likesList, setLikesList] = useState([]);\n    const [userLoggedData, setUserLoggedData] = useState({});\n\n    useEffect(() => {\n        if(userLogged){\n            setUserLoggedData({\n                uid: userLogged.uid,\n                photoURL: userLogged.photoURL,\n                displayName: userLogged.displayName\n            })\n        }\n    }, [userLogged])\n\n\n    useEffect(() => {\n        const unsubscribe = db.collection(\"users\")\n            .where(firebase.firestore.FieldPath.documentId(), 'in', postLike.slice(0,9))\n            .onSnapshot(snapshot => {\n                setLikesList(\n                    snapshot.docs.map((doc => ({\n                        id: doc.id,\n                        data: doc.data(),\n                    })))\n                );\n        })\n        return () => {\n            unsubscribe();\n        }\n    }, [postLike])\n\n    const handleLoadMore = (length) => {\n\n        return db.collection(\"users\")\n            .where(firebase.firestore.FieldPath.documentId(), 'in', postLike.slice(length,length+9))\n            .get().then(snapshot => {\n                const temp = snapshot.docs.map((doc => ({\n                    id: doc.id,\n                    data: doc.data(),\n                })))\n                setLikesList([...likesList, ...temp]);\n            })\n    }\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-dialog-title\"\n            PaperProps={{\n                classes: {\n                    root: classes.root,\n                }\n            }}\n            className={classes.root}\n        >\n            <DialogTitle id=\"simple-dialog-title\" className={classes.dialogTitle}>\n                Likes\n            </DialogTitle>\n            <Divider />\n            <DialogContent className={classes.dialog}>\n                <List>\n                    {\n                        likesList ? (likesList.map(({id, data}) => (\n                            <ListItem key={id}>\n                                <>\n                                    <ListItemAvatar>\n                                        <Avatar className={classes.avatar} src={data?.photoURL} />\n                                    </ListItemAvatar>\n                                    <ListItemText onClick={handleClose}>\n                                        <Link to={`/profile/${id}`} className={classes.displayName}>{data?.displayName}</Link>\n                                    </ListItemText>\n\n                                </>\n                                {\n                                    userLogged ? (\n                                        checkMyFollowingList(authFollowingList, id) ? (\n                                            userLogged.uid !== id ? (<Button\n                                                variant=\"outlined\"\n                                                className={classes.buttonUnfollow}\n                                                onClick={() => handleUserUnfollow(userLogged.uid, id)}\n                                            >\n                                                Unfollow\n                                            </Button>) : null\n\n\n                                        ) : (\n                                            userLogged.uid !== id ? (\n                                                <Button\n                                                    variant=\"contained\"\n                                                    className={classes.button}\n                                                    onClick={() => handleUserFollow(userLoggedData, id)}\n                                                >\n                                                    Follow\n                                                </Button>\n                                            ) : null\n                                        )\n                                    ) : null\n                                }\n                            </ListItem>\n                        ))) : null\n                    }\n                </List>\n                {\n                    likesList ? (\n                        likesList?.length < likesCount && (\n                            <div className=\"comment__see-more-btn\">\n                                <IconButton aria-label=\"see more\" onClick={() => handleLoadMore(likesList?.length)}>\n                                    <AddCircleTwoToneIcon />\n                                </IconButton>\n                            </div>\n                        )\n                    ) : null\n                }\n            </DialogContent>\n        </Dialog>\n    )\n}\n\n// const { open, handleClose, data, userLogged, authFollowingList, countLike ,handleLoadMore } = props;\n\n// ListUserLikePost.propTypes = {\n//     open: PropTypes.bool.isRequired,\n//     handleClose: PropTypes.bool.isRequired,\n//     userLogged: PropTypes.object,\n//     authFollowingList: PropTypes.array,\n//     countLike: PropTypes.number,\n//     handleLoadMore : PropTypes.func,\n// };","/home/miizoo/Desktop/ReactJS/livefood/src/components/DefaultLayout.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/MainLayout.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/theme/typography.js",["456"],"export default {\n    h1: {\n        fontWeight: 500,\n        fontSize: 35,\n        letterSpacing: '-0.24px'\n    },\n    h2: {\n        fontWeight: 500,\n        fontSize: 29,\n        letterSpacing: '-0.24px'\n    },\n    h3: {\n        fontWeight: 500,\n        fontSize: 24,\n        letterSpacing: '-0.06px'\n    },\n    h4: {\n        fontWeight: 500,\n        fontSize: 20,\n        letterSpacing: '-0.06px'\n    },\n    h5: {\n        fontWeight: 500,\n        fontSize: 16,\n        letterSpacing: '-0.05px'\n    },\n    h6: {\n        fontWeight: 500,\n        fontSize: 14,\n        letterSpacing: '-0.05px'\n    },\n    overline: {\n        fontWeight: 500\n    }\n};\n","/home/miizoo/Desktop/ReactJS/livefood/src/views/LandingPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/hooks/scrollToTop.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/AddVideo.js",["457","458","459"],"import React, {useEffect, useState} from \"react\";\nimport {\n    Avatar,\n    Badge,\n    Button,\n    CircularProgress,\n    IconButton, MenuItem,\n    Modal, Popover, Select,\n    TextField,\n    Tooltip\n} from \"@material-ui/core\";\nimport CancelTwoToneIcon from \"@material-ui/icons/CancelTwoTone\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport PhotoCameraTwoToneIcon from \"@material-ui/icons/PhotoCameraTwoTone\";\n// import VideoCallTwoToneIcon from \"@material-ui/icons/VideoCallTwoTone\";\nimport LocationOnTwoToneIcon from '@material-ui/icons/LocationOnTwoTone';\nimport {auth, db, storage} from \"../../firebase\";\nimport firebase from \"firebase\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {green} from \"@material-ui/core/colors\";\nimport {v4 as uuidv4} from \"uuid\";\n// import {useCollection} from \"react-firebase-hooks/firestore\";\nimport MobileStepper from '@material-ui/core/MobileStepper';\n// import Paper from '@material-ui/core/Paper';\n// import Typography from '@material-ui/core/Typography';\nimport SentimentSatisfiedRoundedIcon from \"@material-ui/icons/SentimentSatisfiedRounded\";\nimport {Picker} from \"emoji-mart\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\n\n\nfunction getModalStyle() {\n    const top = 50 ;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n    divider: {\n        height: 1,\n        width: \"50%\",\n        background: \"#39CCCC\",\n        margin: \"15px auto\"\n    },\n    input: {\n        display: \"none\"\n    },\n    label: {\n        paddingLeft: \"10px\"\n    },\n    paper: {\n        position: 'absolute',\n        width: 600,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 3, 3),\n        borderRadius: \"16px\",\n        maxHeight: \"calc(100vh - 70px)\",\n        \"&:focus\": {\n            outline: \"none\"\n        },\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    modalHeader: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"10px 0 20px 0\",\n        borderBottom: \"1px solid #39CCCC\"\n    },\n    buttonClose: {\n        position: \"fixed\",\n        right: \"20px\",\n        top: \"17px\"\n    },\n    username: {\n        fontSize: \"16px\",\n        fontWeight: \"bold\"\n    },\n    avatar: {\n        width: 50,\n        height: 50\n    },\n    cardHeader: {\n        padding: \"16px 0\"\n    },\n    reviewImg: {\n        width: \"100%\",\n        objectFit: \"contain\",\n        boxShadow: \"0px 0px 2px 0px rgba(21,12,12,0.9)\",\n        borderRadius: \"max(0px, min(8px, calc((100vw - 4px - 100%) * 9999))) / 8px\",\n        maxHeight: \"550px\"\n    },\n    inputText: {\n        width: \"100%\",\n        minHeight: \"100px\",\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    buttonDisable: {\n        color: \"#bcc0c4 !important\",\n        backgroundColor : \"#e4e6eb !important\"\n    },\n    buttonRemove: {\n        position: \"absolute\",\n        top: \"0px\",\n        right: \"0\"\n    },\n    header: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 50,\n        paddingLeft: theme.spacing(4),\n        backgroundColor: theme.palette.background.default,\n    },\n    img: {\n        height: 255,\n        maxWidth: 400,\n        overflow: 'hidden',\n        display: 'block',\n        width: '100%',\n    },\n    inputHead: {\n        display: \"flex\",\n        alignItems: \"flex-start\",\n    },\n    fellingSelect: {\n        minWidth: \"150px\",\n        padding: \"16px\"\n    },\n}));\n\n\nfunction AddVideo(props){\n    const {open, videoUpload, setVideoUpload, handleClose} = props;\n    const [user] = useAuthState(auth);\n    const classes = useStyles();\n    const [modalStyle] = useState(getModalStyle);\n\n    const [caption, setCaption] = useState('');\n    const [progress, setProgress] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [disable, setDisable] = useState(true);\n    const [anchorElPicker, setAnchorElPicker] = useState(null);\n    const [felling, setFelling] = useState('');\n\n    const openEmoji = Boolean(anchorElPicker);\n    const id = openEmoji ? 'popup-emoji' : undefined;\n\n    const handleClickEmoji = (event) => {\n        setAnchorElPicker(event.currentTarget);\n    }\n    const handleCloseEmoji = () => {\n        setAnchorElPicker(null);\n    };\n    const addEmoji = (event) => {\n        let emoji = event.native;\n        setCaption(caption + emoji);\n    }\n\n    const removeImage = () => {\n        setVideoUpload('');\n    }\n\n    const handleReset = () => {\n        handleClose(true);\n        setProgress('0');\n        setCaption(\"\");\n        setLoading(false);\n        setVideoUpload(\"\");\n        setFelling(\"\");\n        setDisable(false);\n    }\n\n    const handleUpload = () => {\n        setDisable(true);\n        if(videoUpload) {\n            const imageName = uuidv4();\n            const uploadTask = storage.ref(`videos/${user.uid}/${imageName}`).put(videoUpload);\n            uploadTask.on(\n                \"state_changed\",\n                (snapshot => {\n                    const progressData = Math.round(\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                    );\n                    setProgress(progressData);\n                    setLoading(true);\n                }),\n                (error => {\n                    console.log(error);\n                }),\n                () => {\n                    storage\n                        .ref(`videos/${user.uid}/`)\n                        .child(imageName)\n                        .getDownloadURL()\n                        .then(url => {\n                            db.collection(\"posts\").add({\n                                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                                caption: caption ?? \"\",\n                                media: [{\n                                    mediaPath: url,\n                                    type: videoUpload.type\n                                }],\n                                type: \"video\",\n                                user: db.doc('users/' + user.uid),\n                                uid: user.uid\n                            })\n                                .then(function(docRef) {\n                                    console.log(\"Document written with ID: \", docRef.id);\n                                    db.collection(\"users\").doc(user.uid).update({\n                                        post: firebase.firestore.FieldValue.arrayUnion(docRef.id)\n                                    })\n                                    handleReset();\n                                })\n                                .catch(function(error) {\n                                    console.error(\"Error adding document: \", error);\n                                });\n                        })\n                }\n            )\n        }\n    }\n\n    useEffect(() => {\n        if(videoUpload){\n            setDisable(false);\n        }else {\n            setDisable(true)\n        }\n    },[videoUpload])\n\n\n\n    return (\n        <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n        >\n            <div style={modalStyle} className={classes.paper}>\n\n                <div className={classes.modalHeader}>\n                    <h2>Create your own video now  ?</h2>\n                    <div className={classes.buttonClose}>\n                        <IconButton aria-label=\"Cancel\" color=\"inherit\" onClick={handleClose} >\n                            <CancelTwoToneIcon />\n                        </IconButton>\n                    </div>\n                </div>\n                <div className=\"popup__caption\">\n                    <div className={classes.inputHead}>\n                        <CardHeader\n                            avatar={\n                                <Avatar aria-label=\"recipe\" className={classes.avatar} src={user?.photoURL}/>\n                            }\n                            title={\n                                <span className={classes.username}>{user?.displayName}</span>\n                            }\n                            subheader={\n                                <span>Public</span>\n                            }\n                            className={classes.cardHeader}\n                        />\n                        <FormControl className={classes.fellingSelect}>\n                            <Select\n                                displayEmpty\n                                inputProps={{ 'aria-label': 'Felling' }}\n                                value={felling}\n                                onChange={event => setFelling(event.target.value)}\n                            >\n                                <MenuItem value=\"\">\n                                    <em>Felling</em>\n                                </MenuItem>\n                                <MenuItem value={`happy`}> 🙂 <span style={{paddingLeft: \"5px\"}}>Happy</span></MenuItem>\n                                <MenuItem value={`sad`}> 😔 <span style={{paddingLeft: \"5px\"}}>Sad</span></MenuItem>\n                                <MenuItem value={`love`}>🥰 <span style={{paddingLeft: \"5px\"}}>Loved</span></MenuItem>\n                            </Select>\n\n                        </FormControl>\n                    </div>\n\n                    <div className=\"popup__text\">\n                        <TextField\n                            className={classes.inputText}\n                            multiline\n                            placeholder=\"What's on your mind ... ? \"\n                            value={caption}\n                            onChange={event => setCaption(event.target.value)}\n                            InputProps={{ disableUnderline: true, style : {fontSize: \"1rem\"}}}\n                        />\n                        <IconButton className=\"chat__iconPicker\" aria-label=\"Add\" onClick={handleClickEmoji}>\n                            <SentimentSatisfiedRoundedIcon />\n                        </IconButton>\n                        {\n                            openEmoji ? (\n                                <Popover\n                                    id={id}\n                                    open={openEmoji}\n                                    anchorEl={anchorElPicker}\n                                    onClose={handleCloseEmoji}\n                                    anchorOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'left',\n                                    }}\n                                    transformOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'center',\n                                    }}\n                                >\n                                    <Picker\n                                        onSelect={addEmoji}\n                                        title=\"Livefood\"\n                                    />\n                                </Popover>\n\n                            ) : null\n                        }\n\n                    </div>\n                    {\n                        videoUpload ? (\n                            <div className=\"popup__review\">\n                                <video controls className={classes.reviewImg} muted=\"muted\">\n                                    <source src={window.URL.createObjectURL(videoUpload)} type=\"video/mp4\"/>\n                                </video>\n                                <div className={classes.buttonRemove}>\n                                    <IconButton aria-label=\"Cancel\" color=\"inherit\" onClick={() => removeImage()} >\n                                        <CancelTwoToneIcon />\n                                    </IconButton>\n                                </div>\n                            </div>\n                        ) : null\n                    }\n\n                </div>\n                <div className=\"popup__picker\">\n                    <h3 style={{textTransform: \"inherit\", fontSize: \"1rem\", letterSpacing: \"0\"}}>Add or drop video file here</h3>\n                    <div className=\"popup__iconPicker\">\n                        <div>\n                            <label htmlFor=\"video-upload\" className=\"upload__pickerButton\">\n                                <IconButton color=\"inherit\" component=\"span\" >\n                                    <Badge color=\"secondary\">\n                                        <PhotoCameraTwoToneIcon className={classes.popIcon}/>\n                                    </Badge>\n                                </IconButton>\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"upload__button\">\n                    <Button\n                        classes={{\n                            disabled: classes.buttonDisable\n                        }}\n                        type=\"submit\"\n                        onClick={handleUpload}\n                        disabled={disable}\n                    >\n                        Create Now\n                    </Button>\n                    {loading && <CircularProgress size={24} value={progress} className={classes.buttonProgress} /> }\n                </div>\n\n            </div>\n        </Modal>\n    )\n}\nexport default AddVideo","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileVideo.js",["460","461"],"import React, {useEffect, useState} from \"react\";\n// import {useAuthState} from \"react-firebase-hooks/auth\";\nimport {db} from \"../../../firebase\";\nimport {Video as VideoIcon} from \"react-feather\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport ExploreItem from \"../../Explore/ExploreItem\";\nimport Button from \"@material-ui/core/Button\";\nimport Popup from \"../../Upload/Popup\";\nimport AddVideo from \"../../Upload/AddVideo\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\n// import {useCollection} from \"react-firebase-hooks/firestore\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        color: \"#050505\"\n    },\n    wrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        maxHeight: \"300px\",\n        width: \"100%\"\n    },\n    none: {\n        width: \"100px\",\n        height: \"100px\",\n        borderColor: \"#262626\",\n        borderWidth: \"2px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderStyle: \"solid\",\n        borderRadius: \"50%\",\n        margin: \"50px 0 20px 0\"\n    },\n    addMore: {\n        display: \"flex\",\n        position: \"relative\",\n        height: \"auto\",\n        backgroundColor: \"#fff\",\n        borderRadius: \"16px\",\n        overflow: \"hidden\",\n    },\n    input: {\n        display: \"none\"\n    },\n\n}));\n\nconst ProfileVideo = ({uid, userLogged}) => {\n    const classes = useStyles();\n    const [vid, setVid] = useState([]);\n    const [open, setOpen] = useState(false);\n    const [videoUpload, setVideoUpload] = useState('');\n    // const [userSnapshot, loading] = useDocument(userLogged.uid && db.collection(\"users\").doc(userLogged.uid));\n\n\n    const handleOpen = () => {\n        setOpen(true);\n    }\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleChange = (event) => {\n        if(event.target.files[0]){\n            setVideoUpload(event.target.files[0]);\n            setOpen(true)\n        }\n    }\n\n    useEffect(() => {\n        let postDoc = db.collection('posts');\n\n        const unsubscribe =  postDoc\n            .where('uid', \"==\", uid)\n            .where('type', '==', 'video')\n            .orderBy('timestamp', 'desc')\n            .limit(12)\n            .onSnapshot(snapshot => {\n                let temp = []\n                snapshot.forEach(data => {\n                    var authorVid = {};\n                    data.data().user.get().then( author => {\n                        Object.assign(authorVid, author.data());\n                    })\n                    temp.push({id: data.id, post: data.data(), authorVid: authorVid })\n                })\n                setVid(temp);\n            })\n        return () => {\n            unsubscribe();\n        }\n    }, [uid]);\n\n    return(\n        <div className=\"explore__root\" style={{paddingTop: \"20px\" , marginBottom: \"50px\"}}>\n            <input accept=\"video/*\" type=\"file\" onChange={handleChange} onClick={e => (e.target.value = null)} id=\"video-upload\" className={classes.input}/>\n            {\n                    vid.length > 0 ? (\n                        <div className=\"explore__container\" style={{padding: \"0\"}}>\n                            <div className={classes.addMore}>\n                                <div className={classes.wrapper}>\n                                    <div className={classes.none}>\n                                        <VideoIcon\n                                            className={classes.icon}\n                                            size=\"40\"\n                                        />\n                                    </div>\n                                    <h2 style={{paddingBottom: \"10px\"}}>Start Record Video</h2>\n                                    <Button\n                                        style={{textTransform: \"capitalize\", fontSize: \"16px\", marginTop: \"20px\"}}\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        onClick={handleOpen}\n                                    >\n                                        Upload\n                                    </Button>\n                                </div>\n                            </div>\n                            {\n                                vid.map(({id, post, authorVid}) => (\n                                    <ExploreItem\n                                        key={id}\n                                        postId={id}\n                                        post={post}\n                                        postAuthor={authorVid}\n                                        userLogged={userLogged}\n                                    />\n                                ))\n                            }\n                        </div>\n                    ) : (\n                        <div className={classes.wrapper}>\n                            <div className={classes.none}>\n                                <VideoIcon\n                                    className={classes.icon}\n                                    size=\"40\"\n                                />\n                            </div>\n                            {\n                                userLogged ? (\n                                    uid === userLogged.uid ? (\n                                        <>\n                                            <h2 style={{paddingBottom: \"10px\"}}>Start Record Video</h2>\n                                            <p>Videos must be between 1 and 60 minutes long.</p>\n                                            <Button\n                                                style={{textTransform: \"capitalize\", fontSize: \"16px\", marginTop: \"20px\"}}\n                                                color=\"primary\"\n                                                variant=\"contained\"\n                                                onClick={handleOpen}\n                                            >\n                                                Upload\n                                            </Button>\n                                        </>\n                                    ) : (\n                                        <h2 style={{paddingBottom: \"10px\"}}>No videos found</h2>\n                                    )\n                                ) : (\n                                    <h2 style={{paddingBottom: \"10px\"}}>No videos found</h2>\n                                )\n                            }\n                        </div>\n                    )\n                }\n            {\n                open ? (\n                    <AddVideo open={open} videoUpload={videoUpload}  handleClose={handleClose} setVideoUpload={setVideoUpload} />\n                ) : null\n            }\n        </div>\n    )\n}\n\nexport default ProfileVideo","/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/EditPost.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Popup/OpenRating.js",["462","463","464","465","466","467","468"],"import React, {useEffect, useState} from \"react\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {auth, db, storage} from \"../../firebase\";\nimport {v4 as uuidv4} from \"uuid\";\nimport firebase from \"firebase\";\nimport {\n    Avatar, Box,\n    Button,\n    CircularProgress,\n    IconButton,\n    MenuItem,\n    Modal,\n    Popover,\n    Select,\n    TextField\n} from \"@material-ui/core\";\nimport CancelTwoToneIcon from \"@material-ui/icons/CancelTwoTone\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport SentimentSatisfiedRoundedIcon from \"@material-ui/icons/SentimentSatisfiedRounded\";\nimport {Picker} from \"emoji-mart\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {green} from \"@material-ui/core/colors\";\nimport {Rating} from \"@material-ui/lab\";\n\n\n\nfunction getModalStyle() {\n    const top = 50 ;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n    divider: {\n        height: 1,\n        width: \"50%\",\n        background: \"#39CCCC\",\n        margin: \"15px auto\"\n    },\n    input: {\n        display: \"none\"\n    },\n    label: {\n        paddingLeft: \"10px\"\n    },\n    paper: {\n        position: 'absolute',\n        width: 600,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 3, 3),\n        borderRadius: \"16px\",\n        maxHeight: \"calc(100vh - 70px)\",\n        \"&:focus\": {\n            outline: \"none\"\n        },\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    modalHeader: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"10px 0 20px 0\",\n        borderBottom: \"1px solid #39CCCC\"\n    },\n    buttonClose: {\n        position: \"fixed\",\n        right: \"20px\",\n        top: \"17px\"\n    },\n    username: {\n        fontSize: \"16px\",\n        fontWeight: \"bold\"\n    },\n    avatar: {\n        width: 50,\n        height: 50\n    },\n    cardHeader: {\n        padding: \"16px 0\"\n    },\n    reviewImg: {\n        width: \"100%\",\n        objectFit: \"contain\",\n        boxShadow: \"0px 0px 2px 0px rgba(21,12,12,0.9)\",\n        borderRadius: \"max(0px, min(8px, calc((100vw - 4px - 100%) * 9999))) / 8px\",\n        maxHeight: \"550px\"\n    },\n    inputText: {\n        width: \"100%\",\n        minHeight: \"100px\",\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    buttonDisable: {\n        color: \"#bcc0c4 !important\",\n        backgroundColor : \"#e4e6eb !important\"\n    },\n    buttonRemove: {\n        position: \"absolute\",\n        top: \"0px\",\n        right: \"0\"\n    },\n    header: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 50,\n        paddingLeft: theme.spacing(4),\n        backgroundColor: theme.palette.background.default,\n    },\n    inputHead: {\n        display: \"flex\",\n        alignItems: \"flex-start\",\n    },\n    root: {\n        padding: \"16px\",\n        width: 200,\n        display: 'flex',\n        alignItems: 'center',\n    },\n}));\n\n\nconst labels = {\n    1: 'Worst',\n    2: 'Poor',\n    3: 'Ok',\n    4: 'Good',\n    5: 'Excellent',\n};\n\n\nexport default function OpenRating(props){\n    const {open, userLogged, handleClose, shopId, voteRating} = props;\n    const classes = useStyles();\n    const [modalStyle] = useState(getModalStyle);\n    const [caption, setCaption] = useState('');\n    const [progress, setProgress] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [disable, setDisable] = useState(true);\n    const [anchorElPicker, setAnchorElPicker] = useState(null);\n    const [value, setValue] = React.useState(4);\n    const [hover, setHover] = React.useState(-1);\n\n    const openEmoji = Boolean(anchorElPicker);\n    const id = openEmoji ? 'popup-emoji' : undefined;\n\n\n\n\n    useEffect(() => {\n        if(caption){\n            setDisable(false);\n        }else {\n            setDisable(true)\n        }\n    },[caption])\n\n\n    const handleClickEmoji = (event) => {\n        setAnchorElPicker(event.currentTarget);\n    }\n    const handleCloseEmoji = () => {\n        setAnchorElPicker(null);\n    };\n    const addEmoji = (event) => {\n        let emoji = event.native;\n        setCaption(caption + emoji);\n    }\n\n    const handleReset = () => {\n        handleClose(true);\n        setProgress('0');\n        setCaption(\"\");\n        setLoading(false);\n        setDisable(false);\n    }\n\n\n    const handleUpload = () => {\n        db.collection(\"votes\").doc(shopId).collection(\"data\").add({\n            user: db.doc('users/' + userLogged.uid),\n            uid: userLogged.uid,\n            avatar: userLogged.photoURL,\n            from: userLogged.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            comment: caption,\n            rating: value,\n        })\n            .then(function(docRef) {\n                // console.log(\"Document written with ID: \", docRef.id);\n                if(typeof voteRating == 'undefined'){\n                    db.collection(\"users\").doc(shopId).update({\n                        voteRating: value,\n                        voteCount: firebase.firestore.FieldValue.increment(1)\n                    })\n\n                }\n                else{\n                    let avg = parseFloat((parseFloat(voteRating) + parseFloat(value)) / 2);\n                    db.collection(\"users\").doc(shopId).update({\n                        voteRating: avg,\n                        voteCount: firebase.firestore.FieldValue.increment(1)\n                    })\n                }\n                handleClose(true);\n                handleReset();\n            })\n            .catch(function(error) {\n                console.error(\"Error adding document: \", error);\n            });\n    }\n\n    return (\n        <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n        >\n            <div style={modalStyle} className={classes.paper}>\n\n                <div className={classes.modalHeader}>\n                    <h2>Writing down your vote</h2>\n                    <div className={classes.buttonClose}>\n                        <IconButton aria-label=\"Cancel\" color=\"inherit\" onClick={handleClose} >\n                            <CancelTwoToneIcon />\n                        </IconButton>\n                    </div>\n                </div>\n                <div className=\"popup__caption\">\n                    <div className={classes.inputHead}>\n                        <CardHeader\n                            avatar={\n                                <Avatar aria-label=\"recipe\" className={classes.avatar} src={userLogged.photoURL}/>\n                            }\n                            title={\n                                <span className={classes.username}>{userLogged.displayName}</span>\n                            }\n                            subheader={\n                                <span>Public</span>\n                            }\n                            className={classes.cardHeader}\n                        />\n                        <div className={classes.root}>\n                            <Rating\n                                name=\"hover-feedback\"\n                                value={value}\n                                precision={1}\n                                onChange={(event, newValue) => {\n                                    setValue(newValue);\n                                }}\n                                onChangeActive={(event, newHover) => {\n                                    setHover(newHover);\n                                }}\n                            />\n                            {value !== null && <Box ml={2}>{labels[hover !== -1 ? hover : value]}</Box>}\n                        </div>\n                    </div>\n\n                    <div className=\"popup__text\">\n                        <TextField\n                            className={classes.inputText}\n                            multiline\n                            placeholder=\"What do you think ?\"\n                            value={caption}\n                            onChange={event => setCaption(event.target.value)}\n                            InputProps={{ disableUnderline: true, style : {fontSize: \"1rem\"}}}\n                        />\n                        <IconButton className=\"chat__iconPicker\" aria-label=\"Add\" onClick={handleClickEmoji}>\n                            <SentimentSatisfiedRoundedIcon />\n                        </IconButton>\n                        {\n                            openEmoji ? (\n                                <Popover\n                                    id={id}\n                                    open={openEmoji}\n                                    anchorEl={anchorElPicker}\n                                    onClose={handleCloseEmoji}\n                                    anchorOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'left',\n                                    }}\n                                    transformOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'center',\n                                    }}\n                                >\n                                    <Picker\n                                        onSelect={addEmoji}\n                                        title=\"Livefood\"\n                                    />\n                                </Popover>\n\n                            ) : null\n                        }\n\n                    </div>\n\n                </div>\n                <div className=\"upload__button\">\n                    <Button\n                        classes={{\n                            disabled: classes.buttonDisable\n                        }}\n                        type=\"submit\"\n                        onClick={handleUpload}\n                        disabled={disable}\n                    >\n                        Vote\n                    </Button>\n                    {loading && <CircularProgress size={24} value={progress} className={classes.buttonProgress} /> }\n                </div>\n\n            </div>\n        </Modal>\n    )\n}","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileVoteRating.js",["469","470","471"],"import React, {useEffect, useState} from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {Menu as MenuIcon} from \"react-feather\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {db} from \"../../../firebase\";\nimport {Link} from \"react-router-dom\";\nimport {Rating} from \"@material-ui/lab\";\nimport dayjs from \"dayjs\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        color: \"#050505\"\n    },\n    wrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        maxHeight: \"300px\",\n        width: \"100%\"\n    },\n    none: {\n        width: \"100px\",\n        height: \"100px\",\n        borderColor: \"#262626\",\n        borderWidth: \"2px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderStyle: \"solid\",\n        borderRadius: \"50%\",\n        margin: \"50px 0 20px 0\"\n    },\n    item: {\n        padding : \"30px 20px\",\n        cursor: \"pointer\",\n        \"&:hover\": {\n            backgroundColor: \"rgba(0,0,0,0.03)\",\n            transition: \"0.2s all ease\"\n        },\n    },\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n        padding: \"0\",\n    },\n    displayPic: {\n        borderRadius: \"0\",\n        height: \"120px\",\n        width: \"150px\"\n    },\n    inline: {\n        fontWeight: \"bold\",\n        color: \"red\",\n        letterSpacing: \"1px\"\n    },\n    container: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(1, 1fr)\",\n        width: \"100%\",\n        borderRadius: \"16px\",\n        overflow: \"hidden\"\n    },\n    itemHeader: {\n        display: \"flex\",\n        alignItems: \"center\"\n    },\n    title: {\n        padding: \"20px\",\n        fontSize: \"1.3rem\",\n\n    }\n\n}));\n\nexport default function ProfileVoteRating(props){\n    const classes = useStyles();\n    const {uid, userLogged, userSnapshot, type} = props;\n    const [listVotes, setListVotes] = useState([]);\n\n    useEffect(() => {\n        const unsubscribe = db.collection(\"votes\")\n            .doc(uid)\n            .collection(\"data\")\n            .orderBy(\"timestamp\", 'desc')\n            .onSnapshot(snapshot => {\n                setListVotes(\n                    snapshot.docs.map((doc => ({\n                        id: doc.id,\n                        data: doc.data(),\n                    })))\n                );\n        })\n        return () => {\n            unsubscribe();\n        }\n    }, [uid])\n\n    console.log(listVotes);\n\n    return (\n        <div className=\"explore__root\" style={{paddingTop: \"20px\" , marginBottom: \"50px\"}}>\n            <div className={classes.container} style={{padding: \"0\"}} >\n                {\n                    listVotes ? (\n                        <List className={classes.root}>\n                            <h3 className={classes.title}>List of votes</h3>\n                            <Divider />\n                            {\n                                listVotes.map(({id, data}) => (\n                                    <div key={id}>\n                                        <ListItem alignItems=\"flex-start\" className={classes.item}>\n                                            <ListItemAvatar>\n                                                <Avatar alt=\"Remy Sharp\" src={data.avatar} />\n                                            </ListItemAvatar>\n                                            <ListItemText\n                                                primary={\n                                                    <div className={classes.itemHeader}>\n                                                        <Link to={`/profile/${data?.uid}`} style={{paddingRight: \"5px\"}}>{data.from}</Link>\n                                                        {\n                                                            data.timestamp ? (\n                                                                <div style={{display: \"flex\", alignItems: \"center\"}}>\n                                                                    {\n                                                                        data.rating ? (\n                                                                            <Rating style={{paddingRight: \"5px\", display: \"inline-flex\"}} name=\"read-only\" value={data.rating} readOnly size=\"small\"/>\n                                                                        ) : null\n                                                                    }\n                                                                    <span style={{color: \"#546e7a\", fontSize: \"12px\", }}>{dayjs(new Date(data.timestamp.seconds * 1000).toLocaleString()).fromNow()}</span>\n\n                                                                </div>\n                                                            ) : null\n                                                        }\n                                                    </div>\n                                                }\n                                                secondary={\n                                                    <React.Fragment>\n                                                        {data?.comment}\n                                                    </React.Fragment>\n                                                }\n                                            />\n                                        </ListItem>\n                                        <Divider component=\"li\" />\n                                    </div>\n                                ))\n                            }\n\n                        </List>\n                    ) : (\n                        <List className={classes.root}>\n                            <div className={classes.wrapper}>\n                                <div className={classes.none}>\n                                    <MenuIcon\n                                        className={classes.icon}\n                                        size=\"40\"\n                                    />\n                                </div>\n                                <h2 style={{paddingBottom: \"10px\"}}>No Vote Yet</h2>\n                            </div>\n                        </List>\n                    )\n                }\n\n            </div>\n\n        </div>\n    )\n}",{"ruleId":"472","replacedBy":"473"},{"ruleId":"474","replacedBy":"475"},{"ruleId":"476","severity":1,"message":"477","line":2,"column":9,"nodeType":"478","messageId":"479","endLine":2,"endColumn":15},{"ruleId":"476","severity":1,"message":"480","line":2,"column":59,"nodeType":"478","messageId":"479","endLine":2,"endColumn":67},{"ruleId":"476","severity":1,"message":"481","line":28,"column":8,"nodeType":"478","messageId":"479","endLine":28,"endColumn":21},{"ruleId":"476","severity":1,"message":"482","line":1,"column":16,"nodeType":"478","messageId":"479","endLine":1,"endColumn":25},{"ruleId":"476","severity":1,"message":"482","line":1,"column":16,"nodeType":"478","messageId":"479","endLine":1,"endColumn":25},{"ruleId":"476","severity":1,"message":"483","line":1,"column":27,"nodeType":"478","messageId":"479","endLine":1,"endColumn":35},{"ruleId":"476","severity":1,"message":"484","line":4,"column":8,"nodeType":"478","messageId":"479","endLine":4,"endColumn":28},{"ruleId":"476","severity":1,"message":"485","line":5,"column":8,"nodeType":"478","messageId":"479","endLine":5,"endColumn":18},{"ruleId":"476","severity":1,"message":"486","line":9,"column":37,"nodeType":"478","messageId":"479","endLine":9,"endColumn":46},{"ruleId":"476","severity":1,"message":"487","line":14,"column":27,"nodeType":"478","messageId":"479","endLine":14,"endColumn":45},{"ruleId":"476","severity":1,"message":"488","line":16,"column":26,"nodeType":"478","messageId":"479","endLine":16,"endColumn":36},{"ruleId":"476","severity":1,"message":"489","line":56,"column":12,"nodeType":"478","messageId":"479","endLine":56,"endColumn":16},{"ruleId":"476","severity":1,"message":"490","line":56,"column":18,"nodeType":"478","messageId":"479","endLine":56,"endColumn":25},{"ruleId":"491","severity":1,"message":"492","line":103,"column":8,"nodeType":"493","endLine":103,"endColumn":44,"suggestions":"494"},{"ruleId":"476","severity":1,"message":"495","line":19,"column":8,"nodeType":"478","messageId":"479","endLine":19,"endColumn":18},{"ruleId":"496","severity":1,"message":"497","line":296,"column":121,"nodeType":"498","endLine":296,"endColumn":171},{"ruleId":"496","severity":1,"message":"497","line":297,"column":120,"nodeType":"498","endLine":297,"endColumn":169},{"ruleId":"476","severity":1,"message":"499","line":2,"column":8,"nodeType":"478","messageId":"479","endLine":2,"endColumn":15},{"ruleId":"476","severity":1,"message":"500","line":6,"column":17,"nodeType":"478","messageId":"479","endLine":6,"endColumn":25},{"ruleId":"476","severity":1,"message":"501","line":6,"column":36,"nodeType":"478","messageId":"479","endLine":6,"endColumn":45},{"ruleId":"491","severity":1,"message":"502","line":81,"column":8,"nodeType":"493","endLine":81,"endColumn":55,"suggestions":"503"},{"ruleId":"476","severity":1,"message":"504","line":7,"column":9,"nodeType":"478","messageId":"479","endLine":7,"endColumn":20},{"ruleId":"476","severity":1,"message":"505","line":44,"column":19,"nodeType":"478","messageId":"479","endLine":44,"endColumn":27},{"ruleId":"476","severity":1,"message":"506","line":45,"column":12,"nodeType":"478","messageId":"479","endLine":45,"endColumn":23},{"ruleId":"491","severity":1,"message":"507","line":86,"column":8,"nodeType":"493","endLine":86,"endColumn":45,"suggestions":"508"},{"ruleId":"476","severity":1,"message":"482","line":1,"column":16,"nodeType":"478","messageId":"479","endLine":1,"endColumn":25},{"ruleId":"476","severity":1,"message":"483","line":1,"column":27,"nodeType":"478","messageId":"479","endLine":1,"endColumn":35},{"ruleId":"491","severity":1,"message":"509","line":69,"column":8,"nodeType":"493","endLine":69,"endColumn":31,"suggestions":"510"},{"ruleId":"476","severity":1,"message":"477","line":8,"column":8,"nodeType":"478","messageId":"479","endLine":8,"endColumn":14},{"ruleId":"476","severity":1,"message":"511","line":3,"column":8,"nodeType":"478","messageId":"479","endLine":3,"endColumn":17},{"ruleId":"496","severity":1,"message":"497","line":54,"column":90,"nodeType":"498","endLine":55,"endColumn":69},{"ruleId":"496","severity":1,"message":"497","line":59,"column":92,"nodeType":"498","endLine":60,"endColumn":69},{"ruleId":"476","severity":1,"message":"482","line":1,"column":16,"nodeType":"478","messageId":"479","endLine":1,"endColumn":25},{"ruleId":"476","severity":1,"message":"477","line":2,"column":9,"nodeType":"478","messageId":"479","endLine":2,"endColumn":15},{"ruleId":"476","severity":1,"message":"512","line":2,"column":17,"nodeType":"478","messageId":"479","endLine":2,"endColumn":28},{"ruleId":"476","severity":1,"message":"513","line":2,"column":30,"nodeType":"478","messageId":"479","endLine":2,"endColumn":38},{"ruleId":"476","severity":1,"message":"485","line":2,"column":40,"nodeType":"478","messageId":"479","endLine":2,"endColumn":50},{"ruleId":"476","severity":1,"message":"486","line":2,"column":59,"nodeType":"478","messageId":"479","endLine":2,"endColumn":68},{"ruleId":"476","severity":1,"message":"495","line":4,"column":8,"nodeType":"478","messageId":"479","endLine":4,"endColumn":18},{"ruleId":"491","severity":1,"message":"514","line":206,"column":7,"nodeType":"493","endLine":206,"endColumn":40,"suggestions":"515"},{"ruleId":"476","severity":1,"message":"516","line":148,"column":12,"nodeType":"478","messageId":"479","endLine":148,"endColumn":22},{"ruleId":"476","severity":1,"message":"517","line":148,"column":24,"nodeType":"478","messageId":"479","endLine":148,"endColumn":36},{"ruleId":"476","severity":1,"message":"518","line":149,"column":11,"nodeType":"478","messageId":"479","endLine":149,"endColumn":18},{"ruleId":"476","severity":1,"message":"519","line":154,"column":11,"nodeType":"478","messageId":"479","endLine":154,"endColumn":23},{"ruleId":"476","severity":1,"message":"520","line":157,"column":11,"nodeType":"478","messageId":"479","endLine":157,"endColumn":23},{"ruleId":"476","severity":1,"message":"521","line":13,"column":43,"nodeType":"478","messageId":"479","endLine":13,"endColumn":48},{"ruleId":"476","severity":1,"message":"522","line":103,"column":12,"nodeType":"478","messageId":"479","endLine":103,"endColumn":20},{"ruleId":"476","severity":1,"message":"523","line":110,"column":11,"nodeType":"478","messageId":"479","endLine":110,"endColumn":30},{"ruleId":"491","severity":1,"message":"524","line":138,"column":8,"nodeType":"493","endLine":138,"endColumn":42,"suggestions":"525"},{"ruleId":"476","severity":1,"message":"483","line":1,"column":17,"nodeType":"478","messageId":"479","endLine":1,"endColumn":25},{"ruleId":"476","severity":1,"message":"482","line":1,"column":16,"nodeType":"478","messageId":"479","endLine":1,"endColumn":25},{"ruleId":"476","severity":1,"message":"526","line":15,"column":9,"nodeType":"478","messageId":"479","endLine":15,"endColumn":21},{"ruleId":"476","severity":1,"message":"488","line":20,"column":37,"nodeType":"478","messageId":"479","endLine":20,"endColumn":47},{"ruleId":"476","severity":1,"message":"477","line":6,"column":8,"nodeType":"478","messageId":"479","endLine":6,"endColumn":14},{"ruleId":"476","severity":1,"message":"527","line":3,"column":9,"nodeType":"478","messageId":"479","endLine":3,"endColumn":13},{"ruleId":"476","severity":1,"message":"528","line":4,"column":8,"nodeType":"478","messageId":"479","endLine":4,"endColumn":27},{"ruleId":"476","severity":1,"message":"529","line":5,"column":8,"nodeType":"478","messageId":"479","endLine":5,"endColumn":29},{"ruleId":"476","severity":1,"message":"530","line":14,"column":9,"nodeType":"478","messageId":"479","endLine":14,"endColumn":15},{"ruleId":"476","severity":1,"message":"530","line":10,"column":9,"nodeType":"478","messageId":"479","endLine":10,"endColumn":15},{"ruleId":"476","severity":1,"message":"528","line":11,"column":8,"nodeType":"478","messageId":"479","endLine":11,"endColumn":27},{"ruleId":"476","severity":1,"message":"529","line":12,"column":8,"nodeType":"478","messageId":"479","endLine":12,"endColumn":29},{"ruleId":"476","severity":1,"message":"531","line":15,"column":8,"nodeType":"478","messageId":"479","endLine":15,"endColumn":29},{"ruleId":"476","severity":1,"message":"532","line":69,"column":70,"nodeType":"478","messageId":"479","endLine":69,"endColumn":82},{"ruleId":"476","severity":1,"message":"511","line":16,"column":8,"nodeType":"478","messageId":"479","endLine":16,"endColumn":17},{"ruleId":"533","severity":1,"message":"534","line":1,"column":1,"nodeType":"535","endLine":35,"endColumn":3},{"ruleId":"476","severity":1,"message":"536","line":10,"column":5,"nodeType":"478","messageId":"479","endLine":10,"endColumn":12},{"ruleId":"476","severity":1,"message":"537","line":17,"column":8,"nodeType":"478","messageId":"479","endLine":17,"endColumn":29},{"ruleId":"476","severity":1,"message":"481","line":24,"column":8,"nodeType":"478","messageId":"479","endLine":24,"endColumn":21},{"ruleId":"476","severity":1,"message":"521","line":8,"column":8,"nodeType":"478","messageId":"479","endLine":8,"endColumn":13},{"ruleId":"476","severity":1,"message":"504","line":10,"column":9,"nodeType":"478","messageId":"479","endLine":10,"endColumn":20},{"ruleId":"476","severity":1,"message":"526","line":2,"column":9,"nodeType":"478","messageId":"479","endLine":2,"endColumn":21},{"ruleId":"476","severity":1,"message":"538","line":3,"column":9,"nodeType":"478","messageId":"479","endLine":3,"endColumn":13},{"ruleId":"476","severity":1,"message":"539","line":3,"column":19,"nodeType":"478","messageId":"479","endLine":3,"endColumn":26},{"ruleId":"476","severity":1,"message":"540","line":4,"column":15,"nodeType":"478","messageId":"479","endLine":4,"endColumn":21},{"ruleId":"476","severity":1,"message":"541","line":11,"column":5,"nodeType":"478","messageId":"479","endLine":11,"endColumn":13},{"ruleId":"476","severity":1,"message":"542","line":14,"column":5,"nodeType":"478","messageId":"479","endLine":14,"endColumn":11},{"ruleId":"476","severity":1,"message":"543","line":19,"column":8,"nodeType":"478","messageId":"479","endLine":19,"endColumn":19},{"ruleId":"476","severity":1,"message":"516","line":84,"column":17,"nodeType":"478","messageId":"479","endLine":84,"endColumn":27},{"ruleId":"476","severity":1,"message":"544","line":84,"column":29,"nodeType":"478","messageId":"479","endLine":84,"endColumn":41},{"ruleId":"476","severity":1,"message":"545","line":84,"column":43,"nodeType":"478","messageId":"479","endLine":84,"endColumn":47},"no-native-reassign",["546"],"no-negated-in-lhs",["547"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'useTheme' is defined but never used.","'MobileStepper' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'SettingsOutlinedIcon' is defined but never used.","'IconButton' is defined but never used.","'TextField' is defined but never used.","'handleUserUnfollow' is defined but never used.","'CameraIcon' is defined but never used.","'chat' is assigned a value but never used.","'setChat' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authFollowingList', 'userLogged.uid', and 'userSnapshot'. Either include them or remove the dependency array.","ArrayExpression",["548"],"'Typography' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'NavItem' is defined but never used.","'ListIcon' is defined but never used.","'UsersIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'newPass' and 'rePass'. Either include them or remove the dependency array.",["549"],"'useDocument' is defined but never used.","'setLimit' is assigned a value but never used.","'lastVisible' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'limit' and 'userFollow'. Either include them or remove the dependency array.",["550"],"React Hook useEffect has a missing dependency: 'userSavedList'. Either include it or remove the dependency array.",["551"],"'PropTypes' is defined but never used.","'CardContent' is defined but never used.","'Collapse' is defined but never used.","React Hook useEffect has a missing dependency: 'dishName'. Either include it or remove the dependency array.",["552"],"'userLogged' is assigned a value but never used.","'setOpenSnack' is assigned a value but never used.","'classes' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'Popup' is defined but never used.","'location' is assigned a value but never used.","'handleClickLocation' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'userFollowingList', 'userLogged.uid', and 'userSnapshot'. Either include them or remove the dependency array.",["553"],"'useAuthState' is defined but never used.","'Link' is defined but never used.","'FavoriteRoundedIcon' is defined but never used.","'AccessTimeRoundedIcon' is defined but never used.","'Rating' is defined but never used.","'LocationOnRoundedIcon' is defined but never used.","'handleReport' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Tooltip' is defined but never used.","'LocationOnTwoToneIcon' is defined but never used.","'auth' is defined but never used.","'storage' is defined but never used.","'uuidv4' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'FormControl' is defined but never used.","'userSnapshot' is assigned a value but never used.","'type' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"554","fix":"555"},{"desc":"556","fix":"557"},{"desc":"558","fix":"559"},{"desc":"560","fix":"561"},{"desc":"562","fix":"563"},{"desc":"564","fix":"565"},"Update the dependencies array to be: [loading, authFollowingList?.length, authFollowingList, userSnapshot, userLogged.uid]",{"range":"566","text":"567"},"Update the dependencies array to be: [newPass, newPass.length, oldPass.length, rePass, rePass.length]",{"range":"568","text":"569"},"Update the dependencies array to be: [limit, userFollow, userFollow.length, userLogged.uid]",{"range":"570","text":"571"},"Update the dependencies array to be: [userSavedList, userSavedList.length]",{"range":"572","text":"573"},"Update the dependencies array to be: [dishName.length, dishImg, price, dishName]",{"range":"574","text":"575"},"Update the dependencies array to be: [userFollowingList?.length, query, userFollowingList, userSnapshot, userLogged.uid]",{"range":"576","text":"577"},[3419,3455],"[loading, authFollowingList?.length, authFollowingList, userSnapshot, userLogged.uid]",[2043,2090],"[newPass, newPass.length, oldPass.length, rePass, rePass.length]",[2819,2856],"[limit, userFollow, userFollow.length, userLogged.uid]",[2263,2286],"[userSavedList, userSavedList.length]",[5796,5829],"[dishName.length, dishImg, price, dishName]",[4365,4399],"[userFollowingList?.length, query, userFollowingList, userSnapshot, userLogged.uid]"]