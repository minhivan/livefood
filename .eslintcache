[{"/home/miizoo/Desktop/ReactJS/livefood/src/index.js":"1","/home/miizoo/Desktop/ReactJS/livefood/src/App.js":"2","/home/miizoo/Desktop/ReactJS/livefood/src/firebase.js":"3","/home/miizoo/Desktop/ReactJS/livefood/src/routes.js":"4","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Chat.js":"5","/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/Popup.js":"6","/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/Stepper.js":"7","/home/miizoo/Desktop/ReactJS/livefood/src/components/GlobalStyle/index.js":"8","/home/miizoo/Desktop/ReactJS/livefood/src/serviceWorker.js":"9","/home/miizoo/Desktop/ReactJS/livefood/src/app/store.js":"10","/home/miizoo/Desktop/ReactJS/livefood/src/features/userSlice.js":"11","/home/miizoo/Desktop/ReactJS/livefood/src/icons/Facebook.js":"12","/home/miizoo/Desktop/ReactJS/livefood/src/icons/Google.js":"13","/home/miizoo/Desktop/ReactJS/livefood/src/components/Page.js":"14","/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/index.js":"15","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Item/index.js":"16","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Search/index.js":"17","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Logo/index.js":"18","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/index.js":"19","/home/miizoo/Desktop/ReactJS/livefood/src/components/MediaViewer/index.js":"20","/home/miizoo/Desktop/ReactJS/livefood/src/views/MessengerPage.js":"21","/home/miizoo/Desktop/ReactJS/livefood/src/views/HomePage.js":"22","/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/index.js":"23","/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExploreItem.js":"24","/home/miizoo/Desktop/ReactJS/livefood/src/views/NotFoundPage.js":"25","/home/miizoo/Desktop/ReactJS/livefood/src/views/auth/SignUpPage.js":"26","/home/miizoo/Desktop/ReactJS/livefood/src/views/auth/SignInPage.js":"27","/home/miizoo/Desktop/ReactJS/livefood/src/views/account/UserProfilePage.js":"28","/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/LeftSideBar/index.js":"29","/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/LeftSideBar/NavItem.js":"30","/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/RightSideBar/index.js":"31","/home/miizoo/Desktop/ReactJS/livefood/src/layouts/MainLayout.js":"32","/home/miizoo/Desktop/ReactJS/livefood/src/layouts/DefaultLayout.js":"33","/home/miizoo/Desktop/ReactJS/livefood/src/views/account/EditAccountPage.js":"34","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/ProfileHeader.js":"35","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/AccountNavBar.js":"36","/home/miizoo/Desktop/ReactJS/livefood/src/theme/index.js":"37","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditAccount.js":"38","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditPassword.js":"39","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/ProfileNavBar.js":"40","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileFeed.js":"41","/home/miizoo/Desktop/ReactJS/livefood/src/features/chatSlice.js":"42","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Sidebar/SidebarChat.js":"43","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Sidebar/CreateNewChat.js":"44","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Message.js":"45","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/ChatInput.js":"46","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/index.js":"47","/home/miizoo/Desktop/ReactJS/livefood/src/views/SinglePage.js":"48","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileVids.js":"49","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileSaved.js":"50","/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExplorePage.js":"51","/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExplorePeoplePage.js":"52","/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExplorePeopleItem.js":"53","/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExploreVideoPage.js":"54","/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExploreVideoItem.js":"55","/home/miizoo/Desktop/ReactJS/livefood/src/utils/handleUserFollow.js":"56","/home/miizoo/Desktop/ReactJS/livefood/src/utils/handleUserUnfollow.js":"57","/home/miizoo/Desktop/ReactJS/livefood/src/views/RecipePage.js":"58","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Post.js":"59","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditShop.js":"60","/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/CommentDetails.js":"61","/home/miizoo/Desktop/ReactJS/livefood/src/hooks/getRecipientUser.js":"62","/home/miizoo/Desktop/ReactJS/livefood/src/hooks/firebaseAuth.js":"63","/home/miizoo/Desktop/ReactJS/livefood/src/hooks/services.js":"64","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Util.js":"65","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Action.js":"66","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Content.js":"67","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Header.js":"68","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/RecipeData.js":"69","/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/CommentInput.js":"70","/home/miizoo/Desktop/ReactJS/livefood/src/components/MediaViewer/Preview.js":"71","/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/AddDishes.js":"72"},{"size":674,"mtime":1616998952304,"results":"73","hashOfConfig":"74"},{"size":1805,"mtime":1619538065996,"results":"75","hashOfConfig":"74"},{"size":1157,"mtime":1618332345707,"results":"76","hashOfConfig":"74"},{"size":3461,"mtime":1619582748041,"results":"77","hashOfConfig":"74"},{"size":4889,"mtime":1618410411175,"results":"78","hashOfConfig":"74"},{"size":11512,"mtime":1619521019470,"results":"79","hashOfConfig":"74"},{"size":23881,"mtime":1619521351959,"results":"80","hashOfConfig":"74"},{"size":797,"mtime":1616998797535,"results":"81","hashOfConfig":"74"},{"size":5796,"mtime":1615795454946,"results":"82","hashOfConfig":"74"},{"size":262,"mtime":1617122372343,"results":"83","hashOfConfig":"74"},{"size":468,"mtime":1617121688821,"results":"84","hashOfConfig":"74"},{"size":838,"mtime":1615966721264,"results":"85","hashOfConfig":"74"},{"size":1584,"mtime":1615966706650,"results":"86","hashOfConfig":"74"},{"size":625,"mtime":1615968337340,"results":"87","hashOfConfig":"74"},{"size":5001,"mtime":1619546289153,"results":"88","hashOfConfig":"74"},{"size":7361,"mtime":1619582702977,"results":"89","hashOfConfig":"74"},{"size":2149,"mtime":1616161482479,"results":"90","hashOfConfig":"74"},{"size":741,"mtime":1616172292428,"results":"91","hashOfConfig":"74"},{"size":1077,"mtime":1616914818330,"results":"92","hashOfConfig":"74"},{"size":18326,"mtime":1619537242768,"results":"93","hashOfConfig":"74"},{"size":3269,"mtime":1619546646002,"results":"94","hashOfConfig":"74"},{"size":816,"mtime":1619577663748,"results":"95","hashOfConfig":"74"},{"size":1163,"mtime":1619583653844,"results":"96","hashOfConfig":"74"},{"size":2487,"mtime":1619538865694,"results":"97","hashOfConfig":"74"},{"size":1488,"mtime":1616779633942,"results":"98","hashOfConfig":"74"},{"size":6635,"mtime":1619420218272,"results":"99","hashOfConfig":"74"},{"size":6755,"mtime":1619420218264,"results":"100","hashOfConfig":"74"},{"size":2063,"mtime":1619357430748,"results":"101","hashOfConfig":"74"},{"size":5632,"mtime":1619582648461,"results":"102","hashOfConfig":"74"},{"size":2388,"mtime":1619325402562,"results":"103","hashOfConfig":"74"},{"size":8019,"mtime":1619543129944,"results":"104","hashOfConfig":"74"},{"size":363,"mtime":1617033113940,"results":"105","hashOfConfig":"74"},{"size":1076,"mtime":1615825508670,"results":"106","hashOfConfig":"74"},{"size":2516,"mtime":1619602350860,"results":"107","hashOfConfig":"74"},{"size":12214,"mtime":1619326089408,"results":"108","hashOfConfig":"74"},{"size":3983,"mtime":1619595242216,"results":"109","hashOfConfig":"74"},{"size":610,"mtime":1615795136367,"results":"110","hashOfConfig":"74"},{"size":18626,"mtime":1619361604904,"results":"111","hashOfConfig":"74"},{"size":4228,"mtime":1619361969974,"results":"112","hashOfConfig":"74"},{"size":4431,"mtime":1619338481158,"results":"113","hashOfConfig":"74"},{"size":2767,"mtime":1619374213257,"results":"114","hashOfConfig":"74"},{"size":821,"mtime":1617387901510,"results":"115","hashOfConfig":"74"},{"size":4563,"mtime":1619420195325,"results":"116","hashOfConfig":"74"},{"size":5598,"mtime":1619150372710,"results":"117","hashOfConfig":"74"},{"size":1796,"mtime":1619546645994,"results":"118","hashOfConfig":"74"},{"size":5089,"mtime":1617766295107,"results":"119","hashOfConfig":"74"},{"size":4879,"mtime":1619580542832,"results":"120","hashOfConfig":"74"},{"size":4510,"mtime":1619576975495,"results":"121","hashOfConfig":"74"},{"size":2853,"mtime":1619284135151,"results":"122","hashOfConfig":"74"},{"size":3360,"mtime":1619595475119,"results":"123","hashOfConfig":"74"},{"size":2904,"mtime":1619537541226,"results":"124","hashOfConfig":"74"},{"size":709,"mtime":1619060725114,"results":"125","hashOfConfig":"74"},{"size":6661,"mtime":1619581986126,"results":"126","hashOfConfig":"74"},{"size":3086,"mtime":1619024831305,"results":"127","hashOfConfig":"74"},{"size":1842,"mtime":1618762647859,"results":"128","hashOfConfig":"74"},{"size":460,"mtime":1619014392780,"results":"129","hashOfConfig":"74"},{"size":426,"mtime":1619014417228,"results":"130","hashOfConfig":"74"},{"size":10018,"mtime":1619580514714,"results":"131","hashOfConfig":"74"},{"size":2576,"mtime":1619576975523,"results":"132","hashOfConfig":"74"},{"size":6368,"mtime":1619611540320,"results":"133","hashOfConfig":"74"},{"size":1675,"mtime":1619576097574,"results":"134","hashOfConfig":"74"},{"size":155,"mtime":1617010171560,"results":"135","hashOfConfig":"74"},{"size":996,"mtime":1619070859685,"results":"136","hashOfConfig":"74"},{"size":1691,"mtime":1619434221969,"results":"137","hashOfConfig":"74"},{"size":4635,"mtime":1619509849213,"results":"138","hashOfConfig":"74"},{"size":6646,"mtime":1619509029670,"results":"139","hashOfConfig":"74"},{"size":3309,"mtime":1619506168951,"results":"140","hashOfConfig":"74"},{"size":1895,"mtime":1619593119680,"results":"141","hashOfConfig":"74"},{"size":3170,"mtime":1619508965995,"results":"142","hashOfConfig":"74"},{"size":3517,"mtime":1619546964296,"results":"143","hashOfConfig":"74"},{"size":2300,"mtime":1619610965284,"results":"144","hashOfConfig":"74"},{"size":9218,"mtime":1619610284063,"results":"145","hashOfConfig":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"nv6ebl",{"filePath":"149","messages":"150","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"148"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"148"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"148"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"148"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"148"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"148"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"148"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"148"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"148"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"148"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"148"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/miizoo/Desktop/ReactJS/livefood/src/index.js",[],["302","303"],"/home/miizoo/Desktop/ReactJS/livefood/src/App.js",["304","305","306","307","308","309","310"],"import './App.css';\nimport React, {useEffect, useState} from \"react\";\nimport { useRoutes } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\n// import {auth, db} from \"./firebase\";\nimport GlobalStyles from \"./components/GlobalStyle\";\nimport Spinner from 'react-spinkit'\n\n\nimport theme from './theme';\nimport routes from \"./routes\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {auth, db} from \"./firebase\";\n\n// import styled from 'styled-components';\n\nimport firebase from \"firebase\";\nimport {useDispatch} from \"react-redux\";\nimport {login, logout} from \"./features/userSlice\";\n\nfunction App() {\n\tconst [userLogged, loading] = useAuthState(auth);\n\tconst routing = useRoutes(routes(userLogged));\n\t// const u = useSelector(selectUser);\n\t// const dispatch = useDispatch();\n\n\t// useEffect(() => {\n\t// \tif(auth.onAuthStateChanged(author => {\n\t// \t\tif(author){\n\t// \t\t\tdispatch(\n\t// \t\t\t\tlogin({\n\t// \t\t\t\t\tuid: author.uid,\n\t// \t\t\t\t\tphotoURL: author.photoURL,\n\t// \t\t\t\t\temail: author.email,\n\t// \t\t\t\t\tdisplayName: author.displayName\n\t// \t\t\t\t})\n\t// \t\t\t)\n\t// \t\t}else{\n\t// \t\t\tdispatch(logout())\n\t// \t\t}\n\t// \t}))\n\t//\n\t// \tif(userLogged) {\n\t// \t\tdb.collection(\"users\").doc(userLogged.uid).set({\n\t// \t\t\tlastActive: firebase.firestore.FieldValue.serverTimestamp()\n\t// \t\t},{\n\t// \t\t\tmerge: true\n\t// \t\t})\n\t// \t}\n\t//\n\t// }, [dispatch, userLogged])\n\n\n\n\tif(loading){\n\t\treturn(\n\t\t\t<AppLoading />\n\t\t)\n\t}\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<GlobalStyles />\n\t\t\t{routing}\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n\nconst AppLoading = () => {\n\treturn (\n\t\t<div className=\"app__loading\">\n\t\t\t<img className=\"loading__logo\" alt=\"LiveFood\"\n\t\t\t\t src=\"/static/images/brand.png\"\n\t\t\t/>\n\t\t\t<Spinner\n\t\t\t\tname=\"ball-spin-fade-loader\"\n\t\t\t\tcolor=\"red\"\n\t\t\t\tfadeIn=\"none\"\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\n\n","/home/miizoo/Desktop/ReactJS/livefood/src/firebase.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/routes.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Chat.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/Popup.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/Stepper.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/GlobalStyle/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/serviceWorker.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/app/store.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/features/userSlice.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/icons/Facebook.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/icons/Google.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Page.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Item/index.js",["311"],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Search/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Logo/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/MediaViewer/index.js",["312","313","314","315","316"],"import React, {useEffect, useState} from \"react\";\nimport {Button, CardContent, Collapse, IconButton, Modal, TextField} from \"@material-ui/core\";\nimport CancelTwoToneIcon from \"@material-ui/icons/CancelTwoTone\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n// import {db} from \"../../firebase\";\n// import ListComment from \"../Posts/Comments\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {Link} from \"react-router-dom\";\nimport Divider from '@material-ui/core/Divider';\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport {ToggleButton} from \"@material-ui/lab\";\nimport FavoriteRoundedIcon from \"@material-ui/icons/FavoriteRounded\";\nimport FavoriteBorderTwoToneIcon from \"@material-ui/icons/FavoriteBorderTwoTone\";\nimport ModeCommentOutlinedIcon from \"@material-ui/icons/ModeCommentOutlined\";\nimport BookmarkBorderOutlinedIcon from \"@material-ui/icons/BookmarkBorderOutlined\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport clsx from \"clsx\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\n\nimport {auth, db} from \"../../firebase\";\nimport firebase from \"firebase\";\nimport ListComment from \"../Comments\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport BookmarkRoundedIcon from \"@material-ui/icons/BookmarkRounded\";\nimport {handleSavePost, handleUnSavedPost, handleLikePost, handleDislikePost} from \"../../hooks/services\";\n\n\n\n\nfunction getModalStyle() {\n    const top = 50 ;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        fontSize: \"0.875rem\"\n    },\n    label: {\n        paddingLeft: \"10px\"\n    },\n    paper: {\n        position: 'absolute',\n        maxWidth: 950,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        \"&:focus\": {\n            outline: \"none\"\n        },\n        maxHeight: \"600px\",\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        overflow: \"hidden\",\n        borderRadius: \"16px\"\n    },\n    modalHeader: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    buttonClose: {\n        position: \"fixed\",\n        right: \"0\",\n        top: \"0\"\n    },\n    imgHolder: {\n        width: \"600px\",\n        paddingBottom: \"100%\",\n        position: \"relative\",\n        overflow : \"hidden\",\n        backgroundColor: \"rgb(232, 231, 224)\"\n    },\n    img: {\n        objectFit: \"contain\",\n        height: \"100%\",\n        left: \"0\",\n        position: \"absolute\",\n        top: \"0\",\n        width: \"100%\",\n    },\n    leftPanel: {\n        height: \"100%\",\n        maxWidth: \"600px\"\n    },\n    rightPanel: {\n        width: \"335px\",\n        height: \"100%\",\n        overflowY: \"auto\",\n        position: \"relative\"\n    },\n    captionText: {\n        whiteSpace: \"pre-line\",\n        lineHeight: \"26px\",\n\n    },\n    modalBody: {\n        height: \"auto\"\n    },\n    displayLike: {\n        padding: \"0 0 20px 20px\",\n    },\n    likeButton: {\n        border: \"0\",\n        backgroundColor: \"none\",\n        borderRadius: \"50%\",\n        '&:hover': {\n            color: 'red',\n        }\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    paragraph: {\n        lineHeight: \"26px\",\n        textAlign: \"justify\",\n        whiteSpace: \"pre-line\",\n        fontSize: \"0.875rem\"\n    },\n    paragraphHead: {\n        fontWeight: \"600\",\n        fontSize: \"0.875rem\",\n        marginBottom: \"10px\",\n        padding: \"5px 0\",\n        textTransform: \"uppercase\",\n        borderBottom : \"1px solid #000\"\n    },\n    selected: {\n        backgroundColor: \"unset !important\"\n    },\n    commentContainer: {\n        marginTop: \"auto\",\n        padding: \"10px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n    },\n    cmtButton: {\n\n    },\n    cmtButtonLabel: {\n        fontWeight: \"bold\",\n        textTransform: \"capitalize\",\n        fontSize: \"14px\"\n    },\n    direction: {\n        minHeight: \"auto\"\n    }\n}));\n\nfunction MediaViewer(props){\n\n    const classes = useStyles();\n    const [modalStyle] = useState(getModalStyle);\n    const [selected, setSelected] = useState(false);\n    const [expanded, setExpanded] = useState(true);\n    const [user] = useAuthState(auth);\n    const postRef = db.collection('posts').doc(props.id);\n\n    const [postSnapshot] = useDocument(postRef);\n    const [saveSelected, setSaveSelected] = useState(false);\n\n    const [comments, setComments] = useState([]);\n    const [comment, setComment] = useState('');\n\n    let likeCount = 0\n    if(typeof postSnapshot?.data()?.likeBy !== 'undefined'){\n        likeCount = postSnapshot.data().likeBy.length;\n    }\n\n\n    dayjs.extend(relativeTime);\n    let postCreated  = null;\n\n    if(props?.post?.timestamp){\n        postCreated = new Date(props?.post?.timestamp.seconds * 1000).toLocaleString();\n    }\n\n    const postComment = (event) => {\n        event.preventDefault();\n        if(comment){\n            db.collection(\"posts\").doc(props.id).collection(\"comments\").add({\n                text: comment,\n                user: db.doc('users/' + user.uid),\n                uid: user.uid,\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            });\n        }\n        setComment('');\n    }\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    // Handle like and dislike action\n    const likePost = () => {\n        setSelected(true);\n        handleLikePost(props.id, user.uid)\n    }\n\n    const dislikePost = () => {\n        setSelected(false);\n        handleDislikePost(props.id, user.uid)\n    }\n\n    const savePost = () => {\n        // Save post id to user data, and push to post data\n        setSaveSelected(true);\n        handleSavePost(props.id, user.uid);\n    }\n\n    const unsavedPost = () => {\n        // Save post id to user data, and push to post data\n        setSaveSelected(false);\n        handleUnSavedPost(props.id, user.uid);\n    }\n\n\n\n    let media;\n\n    if(props.post.mediaType === \"video/mp4\"){\n        media = <div className={classes.imgHolder}>\n            <video controls className={classes.img} muted=\"muted\" onClick={e => e.target.play()}>\n                <source src={props.post.mediaUrl} type=\"video/mp4\"/>\n            </video>\n        </div>\n    } else{\n        media = <div className={classes.imgHolder}>\n            <img src={props.post.mediaUrl} alt=\"\" className={classes.img}/>\n        </div>\n    }\n\n\n\n\n    useEffect(() => {\n        if(props.id && user) {\n\n            if(typeof props.post.likeBy !== 'undefined' && props.post.likeBy.includes(user.uid)){\n                setSelected(true);\n            }\n\n            if(typeof props.post.saveBy !== 'undefined' && props.post.saveBy.includes(user.uid)){\n                setSaveSelected(true);\n            }\n        }\n\n    }, [props.id])\n\n    return (\n        <Modal\n            className={classes.root}\n            open={props.open}\n            onClose={props.handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n        >\n            <div style={modalStyle} className={classes.paper}>\n                <div className={classes.leftPanel}>\n                    {media}\n                </div>\n                <Divider orientation=\"vertical\" flexItem />\n                <div className={classes.rightPanel}>\n                    <div className=\"review__data\">\n                        <div className={classes.modalHeader}>\n                            <CardHeader\n                                avatar={\n                                    <Avatar alt={props.postAuthor?.displayName} src={props.postAuthor.photoURL}/>\n                                }\n                                title={\n                                    <Link to={`/profile/${props.postAuthor?.uid}`}>{props.postAuthor?.displayName}</Link>\n                                }\n                                subheader={dayjs(postCreated).fromNow()}\n                            />\n                            <div className={classes.buttonClose}>\n                                <IconButton aria-label=\"Cancel\" color=\"inherit\" onClick={props.handleClose} >\n                                    <CancelTwoToneIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <Divider />\n                        <div className={classes.modalBody}>\n                            <div className=\"post__caption\">\n                                <Link to={`/profile/${props.postAuthor?.uid}`} className=\"post__user\">{props.postAuthor?.displayName}</Link>\n                                <span className={classes.captionText}>{props.post.caption}</span>\n                            </div>\n                        </div>\n                        <Divider />\n                        {/* Card action */}\n                        <CardActions disableSpacing>\n                            {\n                                user ? (\n                                    <div className=\"post__button\">\n                                        <div className=\"action__like\">\n                                            <ToggleButton\n                                                value=\"check\"\n                                                selected={selected}\n                                                classes={{\n                                                    root: classes.likeButton,\n                                                    selected: classes.selected,\n                                                }}\n                                                onClick={() => {\n                                                    if(!selected) likePost();\n                                                    else dislikePost();\n                                                }}\n                                            >\n                                                {\n                                                    selected ? <FavoriteRoundedIcon style={{color: \"red\"}}/> : <FavoriteBorderTwoToneIcon />\n                                                }\n                                            </ToggleButton>\n\n                                        </div>\n                                        <div className=\"action__comment\">\n                                            <IconButton aria-label=\"comment\">\n                                                <ModeCommentOutlinedIcon/>\n                                            </IconButton>\n                                        </div>\n                                        <div className=\"action__share\">\n                                            <ToggleButton\n                                                value=\"check\"\n                                                selected={saveSelected}\n                                                // className={classes.likeButton}\n                                                classes={{\n                                                    root: classes.likeButton,\n                                                    selected: classes.selected,\n                                                }}\n                                                onClick={() => {\n                                                    if(!saveSelected) savePost();\n                                                    else unsavedPost();\n                                                }}\n                                            >\n                                                {\n                                                    saveSelected ? <BookmarkRoundedIcon style={{color: \"black\"}}/> : <BookmarkBorderOutlinedIcon />\n                                                }\n                                            </ToggleButton>\n                                        </div>\n                                    </div>\n                                ) : null\n\n                            }\n\n                            {\n                                props?.post?.data ? (\n                                    <div className=\"action__expand\">\n                                        <IconButton\n                                            className={clsx(classes.expand, {\n                                                [classes.expandOpen]: expanded,\n                                            })}\n                                            onClick={handleExpandClick}\n                                            aria-expanded={expanded}\n                                            aria-label=\"show more\"\n                                        >\n                                            <ExpandMoreIcon />\n                                        </IconButton>\n                                    </div>\n                                ) : null\n                            }\n\n\n                        </CardActions>\n\n                        {/* Like count */}\n                        {\n                            likeCount > 0 ? (\n                                <div className={classes.displayLike}>\n                                    <span><b>{likeCount.toLocaleString()} Likes</b></span>\n\n                                </div>\n                            ) : null\n                        }\n                        <Divider />\n\n                        {/*Posts*/}\n                        {\n                            props?.post?.data ? (\n                                <Collapse in={expanded} timeout=\"auto\" unmountOnExit style={{minHeight: \"auto\"}}>\n                                    <>\n                                        <CardContent className=\"recipe_layout__content-left\">\n                                            <div className=\"recipe_layout__facts\">\n                                                <div className=\"recipe-facts__info\">\n                                                    <div className=\"recipe-facts__details recipe-facts__prepare\"><span\n                                                        className=\"recipe-facts__title\">Prepare in:</span> <span>{props?.post?.data?.prepTime} {props?.post?.data?.prepUnit}</span></div>\n                                                    <div className=\"recipe-facts__details recipe-facts__cooking\"><span\n                                                        className=\"recipe-facts__title\">Cook in:</span> <a\n                                                        className=\"theme-color\">{props?.post?.data?.cookTime} {props?.post?.data?.cookUnit}</a></div>\n                                                </div>\n                                                <div className=\"recipe-facts__info\">\n                                                    <div className=\"recipe-facts__details recipe-facts__servings\"><span\n                                                        className=\"recipe-facts__title\">Serves:</span> <a\n                                                        className=\"theme-color\">{props?.post?.data?.serve}</a></div>\n                                                </div>\n                                            </div>\n                                            <Typography paragraph className={classes.paragraphHead}>Ingredients:</Typography>\n                                            <Typography paragraph className={classes.paragraph}>{props?.post?.data?.ingredient}</Typography>\n                                        </CardContent>\n                                        <CardContent className=\"recipe_layout__content-right\">\n                                            <Typography paragraph className={classes.paragraphHead}>Direction:</Typography>\n                                            <Typography paragraph className={classes.paragraph}>{props?.post?.data?.direction}</Typography>\n                                        </CardContent>\n                                    </>\n                                    <Divider />\n                                </Collapse>\n                            ) : null\n                        }\n\n                        {/*<ListComment comments={comments} />*/}\n                        <ListComment id={props.id} />\n\n                        <div className=\"commentContainer commentViewer \">\n                            <Divider />\n                            {\n                                user &&  (\n                                    <form onSubmit={postComment} >\n                                        <TextField\n                                            className=\"comment__input\"\n                                            placeholder=\"Leave a comment ... \"\n                                            value={comment}\n                                            onChange={event => setComment(event.target.value)}\n                                            InputProps={{ disableUnderline: true}}\n                                        />\n                                        <Button\n                                            variant=\"contained\"\n                                            disabled={!comment}\n                                            onClick={postComment}\n                                            classes={{\n                                                root: classes.cmtButton,\n                                                label: classes.cmtButtonLabel\n                                            }}\n                                        >\n                                            Post\n                                        </Button>\n                                    </form>\n                                )\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Modal>\n    )\n}\nexport default MediaViewer","/home/miizoo/Desktop/ReactJS/livefood/src/views/MessengerPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/HomePage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExploreItem.js",["317","318"],"import React, { useState} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport MediaViewer from \"../MediaViewer\";\nimport {Play as PlayIcon} from \"react-feather\";\nimport {Modal} from \"@material-ui/core\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    imgContainer: {\n        width: \"100%\",\n        height: \"100%\"\n    },\n    img: {\n        objectFit: \"cover\",\n        width: \"100%\",\n        height: \"100%\",\n        cursor: \"pointer\",\n        boxShadow: \"0px 0px 5px 0px #ddc4c4bf\",\n        borderRadius: \"16px\"\n    },\n    icon: {\n        color: \"#050505\",\n    },\n    none: {\n        width: \"35px\",\n        height: \"35px\",\n        borderColor: \"#a5a0a0\",\n        borderWidth: \"1px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderStyle: \"solid\",\n        borderRadius: \"50%\",\n        position: \"absolute\",\n        top: \"20px\",\n        right: \"20px\",\n        zIndex: \"99\",\n        backgroundColor: \"#fff\"\n    }\n}));\n\n\nexport default function ExploreItem(props) {\n\n    const classes = useStyles();\n    // const [postPic, setPostPic] = useState([]);\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    let media;\n    if(props.post.mediaType === \"video/mp4\"){\n        media =\n            <>\n                <video\n                    className={classes.img}\n                    muted=\"muted\"\n                    onClick={() => handleOpen()}\n                >\n                    <source src={props.post.mediaUrl} type=\"video/mp4\"/>\n                </video>\n                <div className={classes.none}>\n                    <PlayIcon\n                        className={classes.icon}\n                        size=\"15\"\n                    />\n                </div>\n            </>\n    } else{\n        media = <img\n                alt=\"\"\n                className={classes.img}\n                src={props.post.mediaUrl}\n                onClick={() => handleOpen()}\n            />\n    }\n\n    return (\n            <div className=\"explore__gridSmall\" key={props.id}>\n                {/*<img src={props.post.mediaUrl}  alt=\"\" className={classes.img} onClick={() => handleOpen(props.post, props.id)} />*/}\n                {media}\n                <MediaViewer open={open} id={props.id} post={props.post} postAuthor={props.postAuthor} handleClose={handleClose}  />\n            </div>\n    );\n}","/home/miizoo/Desktop/ReactJS/livefood/src/views/NotFoundPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/auth/SignUpPage.js",["319"],"import React, {useEffect, useState} from \"react\";\nimport {auth, provider } from \"../../firebase\";\nimport {Button, TextField} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Link, Navigate} from \"react-router-dom\";\nimport checkFirebaseAuth from \"../../CustomHook/FirebaseAuth\";\nimport {useAuthState} from \"react-firebase-hooks/auth\"; //import Redirect first\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        padding: \"13px\",\n        fontSize: \"18px\",\n        fontWeight: \"bold\",\n        margin: \"16px 0\",\n        backgroundColor: \"#006eb1\",\n        textTransform: \"capitalize\",\n        '&:hover': {\n            backgroundColor: \"#015081\",\n        },\n    },\n    divider: {\n        margin: \"16px 0\",\n        borderTop: \"1px solid #b6b6b6\",\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    logo: {\n        textAlign: \"center\",\n        padding: \"10px 0\",\n    },\n    SignUpHolder: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    SignUp: {\n        padding: \"0 10px\",\n        fontWeight: \"bold\",\n        color: \"#0095f6\"\n    },\n    slogan: {\n        color: \"#8e8e8e\",\n        fontSize: \"17px\",\n        fontWeight: \"600\",\n        lineHeight: \"20px\",\n        margin: \"0 40px 10px\",\n        textAlign: \"center\"\n    },\n    googleSignin: {\n        padding: \"13px\",\n        fontSize: \"18px\",\n        fontWeight: \"bold\",\n        margin: \"16px 0\",\n        backgroundColor: \"#0095f6\",\n        textTransform: \"capitalize\",\n        '&:hover': {\n            backgroundColor: \"#0171b8\",\n        },\n    }\n\n}));\n\n\nfunction PageLogin() {\n    const classes = useStyles();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [username, setUsername] = useState('');\n    const [user] = useAuthState(auth);\n\n    const signUp = (event) => {\n        auth.createUserWithEmailAndPassword(email, password)\n            .then((authUser) => {\n                return authUser.user.updateProfile({\n                    displayName: username\n                }).then(function (){\n                    checkFirebaseAuth(authUser.user);\n                })\n            })\n            .catch((error) => alert(error.message));\n    }\n\n    const signUpGoogle = (event) => {\n        event.preventDefault();\n        auth.signInWithPopup(provider).then((result) => {\n            checkFirebaseAuth(result.user);\n        }).catch((error) =>{\n            alert(error.message)\n        })\n    }\n\n\n    if(user){\n        return <Navigate to=\"/\" />\n    }\n\n    return(\n        <div className=\"login__container\">\n            <div className=\"login__block\">\n                <div className=\"login__holder login__article\">\n                    <div className=\"login__authForm\">\n                        <div className={classes.logo}>\n                            <img className=\"header__imageLogo\" alt=\"LiveFood\"\n                                 src=\"/static/images/brand.png\"\n                            />\n                        </div>\n                        <h2 className={classes.slogan}>Sign up to see photos and videos from your friends.</h2>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.googleSignin}\n                            onClick={signUpGoogle}\n                        >\n                            Sign up with Google\n                        </Button>\n\n                        <div className={classes.divider} />\n\n                        <div className={classes.form}>\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                label=\"Username\"\n                                id=\"username\"\n                                placeholder=\"Username\"\n                                value={username}\n                                name=\"username\"\n                                autoComplete=\"false\"\n                                autoFocus\n                                onChange={(e) => setUsername(e.target.value)}\n\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                label=\"Email address\"\n                                id=\"email\"\n                                placeholder=\"Email address\"\n                                value={email}\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                autoFocus\n                                onChange={(e) => setEmail(e.target.value)}\n\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                label=\"Password\"\n                                fullWidth\n                                name=\"password\"\n                                value={password}\n                                placeholder=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                onChange={(e) => setPassword(e.target.value)}\n\n                            />\n\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.button}\n                                onClick={signUp}\n                            >\n                                Sign up\n                            </Button>\n                        </div>\n                        <div className={classes.divider} />\n                        <div className={classes.SignUpHolder}>\n                            <span>Have an account ?</span>\n                            <Link to=\"/login\" className={classes.SignUp}>Log in</Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default PageLogin;","/home/miizoo/Desktop/ReactJS/livefood/src/views/auth/SignInPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/account/UserProfilePage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/LeftSideBar/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/LeftSideBar/NavItem.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/RightSideBar/index.js",["320","321","322"],"import React, {useEffect, useState} from \"react\";\nimport '../RightSideBar.css';\n\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreHorizOutlinedIcon from '@material-ui/icons/MoreHorizOutlined';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {Button, Hidden, makeStyles} from \"@material-ui/core\";\nimport {blue} from \"@material-ui/core/colors\";\n\n\n\n// import dayjs from \"dayjs\";\n\nimport {db} from \"../../../firebase\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport {Link} from \"react-router-dom\";\nimport handleUserFollow from \"../../../utils/handleUserFollow\";\nimport firebase from \"firebase\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    root: {\n        width: \"100%\",\n    },\n}));\n\n\nfunction RightSideBar(props) {\n    const classes = useStyles();\n    const [users, setUsers] = useState([])\n    const { userLogged } = props;\n\n    const userRef = userLogged.uid && db.collection('users').doc(userLogged.uid);\n    const [userSnapshot] = useDocument(userRef);\n\n    // List user\n    useEffect(() => {\n\n        if(typeof userSnapshot?.data()?.following !== 'undefined' && userSnapshot?.data()?.following.length >= 0){\n            var followingList = {};\n            followingList = userSnapshot.data().following\n            userLogged.uid && followingList.push(userLogged.uid);\n\n            return db.collection(\"users\")\n                .where(firebase.firestore.FieldPath.documentId() ,'not-in' , followingList )\n                .limit(4)\n                .get().then(snapshot => {\n                    setUsers(snapshot.docs.map(doc => ({\n                        id: doc.id,\n                        opponent: doc.data(),\n                    })));\n                })\n        }else{\n             return db.collection(\"users\")\n                .where(firebase.firestore.FieldPath.documentId() ,'!=' , userLogged.uid )\n                .limit(4)\n                .get().then(snapshot => {\n                    setUsers(snapshot.docs.map(doc => ({\n                        id: doc.id,\n                        opponent: doc.data(),\n                    })));\n                })\n        }\n    }, [userLogged.uid, userSnapshot])\n\n\n    return(\n        <Hidden mdDown>\n            <div className=\"app__rightSideBar\">\n                <div className=\"sideBar__container\">\n                    {/*<div className=\"trending__container sideBar__containerBlock\">*/}\n                    {/*    <div className=\"trending__header bottomDivider padding-10-20\">*/}\n                    {/*        <h2>What's fresh?</h2>*/}\n                    {/*        <IconButton aria-label=\"comment\" >*/}\n                    {/*            <SettingsOutlinedIcon />*/}\n                    {/*        </IconButton>*/}\n                    {/*    </div>*/}\n                    {/*    <div className=\"trending__content padding-10-20 bottomDivider\">*/}\n                    {/*        <div className=\"trending__contentBlock\">*/}\n                    {/*            <div className=\"trending__header\">*/}\n                    {/*                <h4>Trending in VietNam</h4>*/}\n                    {/*                <IconButton aria-label=\"comment\" >*/}\n                    {/*                    <MoreHorizOutlinedIcon />*/}\n                    {/*                </IconButton>*/}\n                    {/*            </div>*/}\n                    {/*            <div className=\"trending__name\">*/}\n                    {/*                <h3>Healthy</h3>*/}\n                    {/*            </div>*/}\n                    {/*        </div>*/}\n                    {/*    </div>*/}\n                    {/*    <div className=\"trending__content padding-10-20 bottomDivider\">*/}\n                    {/*        <div className=\"trending__contentBlock\">*/}\n                    {/*            <div className=\"trending__header\">*/}\n                    {/*                <h4>Trending in VietNam</h4>*/}\n                    {/*                <IconButton aria-label=\"comment\" >*/}\n                    {/*                    <MoreHorizOutlinedIcon />*/}\n                    {/*                </IconButton>*/}\n                    {/*            </div>*/}\n                    {/*            <div className=\"trending__name\">*/}\n                    {/*                <h3>Healthy</h3>*/}\n                    {/*            </div>*/}\n                    {/*        </div>*/}\n                    {/*    </div>*/}\n                    {/*    <div className=\"trending__content padding-10-20 bottomDivider\">*/}\n                    {/*        <div className=\"trending__contentBlock\">*/}\n                    {/*            <div className=\"trending__header\">*/}\n                    {/*                <h4>Trending in VietNam</h4>*/}\n                    {/*                <IconButton aria-label=\"comment\" >*/}\n                    {/*                    <MoreHorizOutlinedIcon />*/}\n                    {/*                </IconButton>*/}\n                    {/*            </div>*/}\n                    {/*            <div className=\"trending__name\">*/}\n                    {/*                <h3>Healthy</h3>*/}\n                    {/*            </div>*/}\n                    {/*        </div>*/}\n                    {/*    </div>*/}\n                    {/*    <div role=\"button\" className=\"padding-20 show-more\">*/}\n                    {/*        <span className=\"\">Show more</span>*/}\n                    {/*    </div>*/}\n                    {/*</div>*/}\n\n                    <div className=\"suggest__container sideBar__containerBlock\">\n                        <div className=\"suggest__header padding-20 bottomDivider\">\n                            <h2>Who to follow</h2>\n                        </div>\n                        {\n                            users ? (users.map(({id, opponent}) => (\n                                <div key={id} className=\"suggest__content  bottomDivider\">\n                                    <CardHeader className=\"suggest__user\"\n                                                avatar={\n                                                    <Avatar className={classes.avatar} aria-label={opponent.displayName} src={opponent.photoURL} />\n                                                }\n                                                title={\n                                                    <Link to={`profile/${id}`}>{opponent.displayName}</Link>\n                                                }\n                                                subheader={opponent.fullName}\n                                    />\n\n                                    <Button\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        className=\"followBtn\"\n                                        onClick={() => handleUserFollow(userLogged.uid, opponent.uid)}\n                                    >\n                                        Follow\n                                    </Button>\n                                </div>\n                            ))) : (\n                                <>\n                                    <div className={classes.root}>\n                                        <Skeleton variant=\"rect\" height={300} />\n                                    </div>\n                                </>\n                            )\n                        }\n\n                        <div role=\"button\" className=\"padding-20 show-more\">\n                            <Link to=\"/explore/people\">\n                                <span className=\"\">Show more</span>\n                            </Link>\n\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </Hidden>\n\n\n    )\n}\n\nexport default RightSideBar;","/home/miizoo/Desktop/ReactJS/livefood/src/layouts/MainLayout.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/layouts/DefaultLayout.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/account/EditAccountPage.js",["323"],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/ProfileHeader.js",["324","325"],"import React, {useEffect, useState} from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport {Link} from \"react-router-dom\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import {Badge} from \"@material-ui/core\";\n// import ExploreTwoToneIcon from \"@material-ui/icons/ExploreTwoTone\";\n// import {useCollection, useDocument} from \"react-firebase-hooks/firestore\";\nimport {auth, db} from \"../../firebase\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\n\nimport handleUserFollow from \"../../utils/handleUserFollow\";\nimport handleUserUnfollow from \"../../utils/handleUserUnfollow\";\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { blue } from '@material-ui/core/colors';\nimport firebase from \"firebase\";\nimport {DialogContent} from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    userPhoto: {\n        width: \"120px\",\n        height: \"120px\",\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    bioDetails: {\n        marginLeft: \"50px\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        display: \"flex\",\n        alignItems: \"center\"\n    },\n    bioAvt: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        display: \"flex\",\n        alignItems: \"flex-start\",\n        paddingTop: \"10px\"\n    },\n    button: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: \"150px\",\n        color: \"white\",\n        backgroundColor: \"#0095f6\",\n        \"&:hover\": {\n            backgroundColor: \"#0186db\",\n        },\n        marginRight: \"15px\",\n        textTransform: \"capitalize\"\n    },\n    buttonUnfollow: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: \"150px\",\n        color: \"#454444\",\n        // \"&:hover\": {\n        //     backgroundColor: \"#c3d6fa\",\n        // },\n        marginRight: \"15px\",\n        textTransform: \"capitalize\"\n    },\n    dialog: {\n        maxWidth: \"600px\",\n        width: \"390px\",\n    }\n}));\n\n\n\nfunction SimpleDialog(props) {\n    const classes = useStyles();\n    const { handleClose, type, open, users , auth} = props;\n\n\n    return (\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open} >\n            {\n                type === '1' ? (\n                    <DialogTitle id=\"simple-dialog-title\" style={{textAlign: \"center\"}}>Following</DialogTitle>\n                ) : (\n                    <DialogTitle id=\"simple-dialog-title\" style={{textAlign: \"center\"}}>Follower</DialogTitle>\n                )\n            }\n            <Divider />\n            <DialogContent className={classes.dialog}>\n                <List>\n                        {\n                            users ? (users.map(({id, data}) => (\n                                <ListItem key={id}>\n                                    <>\n                                        <ListItemAvatar>\n                                            <Avatar className={classes.avatar} src={data?.photoURL} />\n                                        </ListItemAvatar>\n                                        <ListItemText onClick={handleClose}>\n                                            <Link to={`/profile/${id}`}>{data?.displayName}</Link>\n                                        </ListItemText>\n\n                                    </>\n                                    {\n                                        type === '1' ? (\n                                            <Button variant=\"contained\" color=\"primary\" onClick={() => handleUserUnfollow(auth, id)}>Following</Button>\n                                        ) : (\n                                            <Button variant=\"contained\" color=\"primary\" onClick={() => handleUserFollow(auth, id)}>Follow</Button>\n                                        )\n                                    }\n                                </ListItem>\n                            ))) : null\n                        }\n                </List>\n            </DialogContent>\n        </Dialog>\n    );\n}\n\n\n\n\nconst ProfileHeader = ({isAuthProfile, user, count,  ...rest}) => {\n    const [userFollowing, setUserFollowing] = useState([]);\n    const [userFollower, setUserFollower] = useState([]);\n\n\n    const [openFollowing, setOpenFollowing] = useState(false);\n    const [openFollower, setOpenFollower] = useState(false);\n\n\n    const handleClickOpenFollowing = () => {\n        setOpenFollowing(true);\n    };\n\n    const handleCloseFollowing = (value) => {\n        setOpenFollowing(false);\n    };\n\n    const handleClickOpenFollower = () => {\n        setOpenFollower(true);\n    };\n\n    const handleCloseFollower = (value) => {\n        setOpenFollower(false);\n    };\n\n\n    // Your data\n    const [authUser] = useAuthState(auth);\n\n    useEffect(() => {\n        if(typeof user?.follower !== 'undefined'){\n            db.collection(\"users\")\n                .where(firebase.firestore.FieldPath.documentId(), 'in', user.follower)\n                .get().then(snapshot => {\n                    setUserFollower(\n                        snapshot.docs.map((doc => ({\n                            id: doc.id,\n                            data: doc.data(),\n                        })))\n                    );\n                })\n        }\n        if(typeof user?.following !== 'undefined'){\n            db.collection(\"users\")\n                .where(firebase.firestore.FieldPath.documentId(), 'in', user.following)\n                .get().then(snapshot => {\n                setUserFollowing(\n                    snapshot.docs.map((doc => ({\n                        id: doc.id,\n                        data: doc.data(),\n                    })))\n                );\n            })\n        }\n\n    }, [user])\n\n\n    // const checkOpponentFollowYou = (userFollowing, uid) => {\n    //     let rs = false;\n    //     if(typeof userFollowing !== 'undefined' ){\n    //         rs = userFollowing.includes(uid);\n    //     }\n    //     return rs;\n    // }\n\n\n    // Check opponent follower to find you\n    const checkFollowed = (userFollowerList, uid) => {\n        let rs = false;\n        if(typeof userFollowerList !== 'undefined' ){\n            rs = userFollowerList.some(person => person.id === uid)\n        }\n        return rs;\n    }\n\n\n    const classes = useStyles();\n    return (\n        <div className=\"profile__header\">\n            <div className=\"profile__bio\">\n                <div className={classes.bioAvt}>\n                    {\n                        user? (\n                                <Avatar alt={user?.displayName} src={user?.photoURL} className={classes.userPhoto}/>\n                        ): (\n                            <Skeleton animation=\"wave\" variant=\"circle\" width={120} height={120} />\n                        )\n                    }\n\n                </div>\n                <div className={classes.bioDetails}>\n                    <div className=\"share-title-container\">\n                        {/* User bio */}\n                        <h2 className=\"share-title\">{user?.displayName}</h2>\n                        <h1 className=\"share-sub-title\">{user?.fullName ?? ''}</h1>\n                        {\n                            isAuthProfile ? (\n                                <div className=\"share-follow-container\">\n                                    {/* Checking if followed */}\n                                    <Link to=\"/account/edit\">\n                                        <Button\n                                            variant=\"contained\"\n                                            className={classes.button}\n                                        >\n                                            Edit profile\n                                        </Button>\n                                    </Link>\n                                </div>\n                            ) : (\n                                authUser ? (\n                                    <div className=\"share-follow-container\">\n                                        {/* Checking if followed */}\n\n                                        {\n                                            checkFollowed(userFollower, authUser.uid) ? (\n                                                <Button\n                                                    variant=\"outlined\"\n                                                    className={classes.buttonUnfollow}\n                                                    onClick={() => handleUserUnfollow(authUser.uid, user.uid)}\n                                                >\n                                                    Unfollow\n                                                </Button>\n                                            ) : (\n                                                    <Button\n                                                        variant=\"contained\"\n                                                        className={classes.button}\n                                                        onClick={() => handleUserFollow(authUser.uid, user.uid)}\n                                                    >\n                                                        Follow\n                                                    </Button>\n                                                )\n\n                                        }\n                                        <Button\n                                            variant=\"contained\"\n                                            className={classes.button}\n                                        >\n                                            Message\n                                        </Button>\n                                    </div>\n                                ) : null\n                            )\n                        }\n\n                        {\n                            user?.bio ? (\n                                <h2 className=\"share-desc mt10\">\n                                    {user.bio}\n                                </h2>\n                            ) : null\n                        }\n\n                        {\n                            user?.profileLink ? (\n                                    <div className=\"share-links\">\n                                        <a href={user.profileLink}>{user.profileLink}</a>\n                                    </div>\n                            ) : null\n                        }\n\n                        {/* Count info */}\n                        <h2 className=\"count-infos\">\n                            <div className=\"number\"><strong title=\"Likes\">{ count ?? '0'}</strong><span\n                                className=\"unit\">Post</span></div>\n                            <div className=\"number\"><strong title=\"Following\">{userFollowing.length}</strong><a className=\"unit\" onClick={handleClickOpenFollowing}>Following</a></div>\n                            <div className=\"number\"><strong title=\"Followers\">{userFollower.length}</strong><a className=\"unit\" onClick={handleClickOpenFollower}>Follower</a></div>\n                        </h2>\n                    </div>\n                </div>\n\n            </div>\n            <SimpleDialog open={openFollowing} handleClose={handleCloseFollowing} users={userFollowing} type={`1`} auth={user?.uid} />\n            <SimpleDialog open={openFollower} handleClose={handleCloseFollower} users={userFollower} type={`2`} auth={user?.uid}/>\n        </div>\n    )\n}\n\nexport default ProfileHeader","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/AccountNavBar.js",["326","327","328"],"/home/miizoo/Desktop/ReactJS/livefood/src/theme/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditAccount.js",["329","330","331","332"],"import React, {useEffect, useRef, useState} from \"react\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {auth, db, storage} from \"../../../firebase\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport {Link} from \"react-router-dom\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport {CircularProgress, IconButton, Modal} from \"@material-ui/core\";\n// import {green} from \"@material-ui/core/colors\";\nimport CancelTwoToneIcon from \"@material-ui/icons/CancelTwoTone\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport firebase from \"firebase\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport {Alert} from \"@material-ui/lab\";\nimport {blue, green} from \"@material-ui/core/colors\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n        width: 100,\n        height: 100,\n        margin: \"0 20px\",\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    avatarHolder: {\n        padding: \"16px 32px\",\n    },\n    holder: {\n        display: \"flex\",\n        padding: \"16px\"\n    },\n    changePhoto: {\n        color: \"#0095f6\",\n        padding: 0,\n        textTransform: \"capitalize\",\n    },\n    displayName: {\n        fontSize: 18,\n        fontWeight: \"bold\"\n    },\n    label: {\n        flex: \"0 0 25%\",\n        textAlign: \"right\",\n        paddingTop: \"5px\"\n    },\n    input: {\n        paddingLeft: 20,\n        width: \"60%\",\n        float: \"left\"\n    },\n    inputField: {\n        width: \"100%\",\n        padding: \"0 8px\",\n        height: \"32px\",\n        fontSize: \"16px\",\n        color: \"#262626\",\n        border: \"1px solid rgba(var(--ca6,219,219,219),1)\"\n\n    },\n    description: {\n        padding: \"10px 0\"\n    },\n    descriptionText: {\n        textOverflow: \"ellipsis\",\n        textAlign: \"justify\",\n        color: \"#8e8e8e\",\n        fontSize: \"12px\",\n    },\n    inputText: {\n        fontSize: \"16px\",\n        height: 60,\n        padding: \"6px 10px\",\n        resize: \"vertical\",\n        border: \"1px solid rgba(var(--ca6,219,219,219),1)\",\n        width: \"100%\"\n    },\n    formControl: {\n        margin: 0,\n        width: \"100%\",\n        height: \"32px\"\n    },\n    submit: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"20px\"\n    },\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 3, 3),\n        borderRadius: \"8px\",\n        maxHeight: \"300px\",\n        \"&:focus\": {\n            outline: \"none\"\n        },\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    modalHeader: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"10px 0 20px 0\",\n    },\n    btnAction: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    buttonClose: {\n        position: \"fixed\",\n        right: \"20px\",\n        top: \"17px\"\n    },\n    btnUpload: {\n        color : \"#0095f6\",\n        minHeight: \"48px\",\n        width : \"100%\",\n    },\n    btnRemove: {\n        color : \"#d8102a\",\n        minHeight: \"48px\",\n        width : \"100%\",\n    },\n    btnLabel: {\n        fontWeight: \"bold\"\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nfunction getModalStyle() {\n    const top = 50 ;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\n\nconst EditAccount = (props) => {\n    const {userLogged} = props;\n\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [modalStyle] = useState(getModalStyle);\n    const hiddenFileInput = useRef(null);\n    const [fullName, setFullName] = useState('');\n    const [displayName, setDisplayName] = useState('');\n    const [link, setLink] = useState('');\n    const [bio, setBio] = useState('');\n    const [phone, setPhone] = useState('');\n    const [loadingAvt, setLoadingAvt] = useState(false);\n    const [userData] = useDocument(userLogged &&  db.collection(\"users\").doc(userLogged.uid));\n    const [openSnack, setOpenSnack] = useState(false);\n\n    const [disable, setDisable] = useState(true);\n    const [type, setType] = useState('');\n\n\n    useEffect(() => {\n        setDisplayName(userData?.data().displayName ?? '');\n\n        setFullName(userData?.data()?.fullName ?? '');\n        setLink(userData?.data()?.profileLink ?? '');\n        setBio(userData?.data()?.bio ?? '');\n        setPhone(userData?.data()?.phoneNumber ?? '');\n        // console.log(userData?.data()?.phoneNumber && userData?.data()?.phoneNumber)\n        setType(userData?.data()?.accountType ?? 'blogger');\n\n    }, [userData])\n\n\n    const handleCloseSnack = (event) => {\n        setOpenSnack(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleClick = event => {\n        hiddenFileInput.current.click();\n    };\n\n    const handleSelectType = (event) => {\n        setType(event.target.value);\n    }\n\n    const handleChange = event => {\n        const fileUploaded = event.target.files[0];\n\n        // Change photoUrl here\n        if(fileUploaded){\n            const uploadTask = storage.ref(`images/${fileUploaded.name}`).put(fileUploaded);\n            uploadTask.on(\n                \"state_changed\",\n                (snapshot => {\n                    setLoadingAvt(true);\n                }),\n                (error => {\n                    console.log(error);\n                }),\n                () => {\n                    storage\n                        .ref(\"images\")\n                        .child(fileUploaded.name)\n                        .getDownloadURL()\n                        .then(url => {\n                            // Update from firestore\n                            db.collection(\"users\").doc(userLogged.uid).update({\n                                updateAt: firebase.firestore.FieldValue.serverTimestamp(),\n                                photoURL: url,\n                            })\n                            // Update user from firebase auth\n                            firebase.auth().currentUser.updateProfile({\n                                photoURL: url\n                            }).then(function() {\n                                // Update successful.\n                                setOpenSnack(true);\n                                setOpen(false);\n                                setLoadingAvt(false);\n                            }).catch(function(error) {\n                                // An error happened.\n                            });\n\n                        })\n                }\n            )\n        }\n    };\n\n\n    const handleRemove = event => {\n        db.collection(\"users\").doc(userLogged.uid).update({\n            updateAt: firebase.firestore.FieldValue.serverTimestamp(),\n            photoURL: \"\",\n        })\n        // Update user from firebase auth\n        firebase.auth().currentUser.updateProfile({\n            photoURL: \"\"\n        }).then(function() {\n            // Update successful.\n            setLoadingAvt(false);\n            setOpenSnack(true);\n        }).catch(function(error) {\n            // An error happened.\n        });\n    };\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        db.collection(\"users\").doc(userLogged.uid).update({\n            bio: bio,\n            profileLink: link,\n            fullName: fullName,\n            displayName: displayName,\n            phoneNumber: phone,\n            accountType: type,\n            updateAt: firebase.firestore.FieldValue.serverTimestamp(),\n        })\n\n        firebase.auth().currentUser.updateProfile({\n            displayName: displayName\n        }).then(function() {\n            // Update successful.\n            setOpenSnack(true);\n        })\n\n    }\n\n    return(\n        <article className=\"edit_account__content\">\n            <>\n                <CardHeader\n                    className={classes.avatarHolder}\n                    avatar={\n                        userLogged ? (\n                            <Avatar className={classes.avatar} alt={userLogged.displayName} src={userLogged.photoURL}/>\n                        ):(\n                            <Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />\n                        )\n                    }\n                    title={\n                        userLogged?.uid ? (\n                            <Link to={`/profile/${userLogged.uid}`} className={classes.displayName}>{userLogged.displayName}</Link>\n                        ) : (\n                            <Skeleton animation=\"wave\" height={10} width=\"30%\" style={{ marginBottom: 6 }} />\n                        )\n                    }\n                    subheader={\n                        <Button className={classes.changePhoto} onClick={handleOpen}>Change Profile Photo</Button>\n                    }\n                />\n            </>\n            <form method=\"POST\" onSubmit={event => event.preventDefault()}>\n                <div className={classes.holder}>\n                    <aside className={classes.label}>\n                        <label htmlFor=\"pepName\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Full Name</label>\n                    </aside>\n                    <div className={classes.input}>\n                        <input\n                            value={fullName}\n                            onChange={event => setFullName(event.target.value)}\n                            className={classes.inputField}\n                            aria-required=\"false\" id=\"pepName\" placeholder=\"Name\" type=\"text\"\n                        />\n\n                        <div className={classes.description}>\n                            <span className={classes.descriptionText}>Help people discover your account by using the name you're known by: either your full name, nickname, or business name.</span>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.holder}>\n                    <aside className={classes.label}>\n                        <label htmlFor=\"pepUsername\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Display Name</label>\n                    </aside>\n                    <div className={classes.input}>\n                        <input\n                            value={displayName}\n                            onChange={event => setDisplayName(event.target.value)}\n                            className={classes.inputField}\n                            aria-required=\"false\" id=\"pepUsername\" placeholder=\"Username\" type=\"text\"\n                        />\n\n                        <div className={classes.description}>\n                            <span className={classes.descriptionText}>In most cases, you'll be able to change your username back for another 14 days.</span>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.holder}>\n                    <aside className={classes.label}>\n                        <label htmlFor=\"pepType\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Account Type</label>\n                    </aside>\n                    <div className={classes.input}>\n                        <FormControl className={classes.formControl}>\n                            <Select\n                                style={{fontWeight: \"bold\", textTransform: \"capitalize\"}}\n                                fullWidth\n                                value={type}\n                                onChange={handleSelectType}\n                            >\n                                <MenuItem value={'blogger'} style={{fontWeight: \"bold\"}}>Blogger</MenuItem>\n                                <MenuItem value={'reviewer'} style={{fontWeight: \"bold\"}}>Reviewer</MenuItem>\n                                <MenuItem value={'foodshop'} style={{fontWeight: \"bold\"}}>Food shop</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                </div>\n\n                <div className={classes.holder}>\n                    <aside className={classes.label}>\n                        <label htmlFor=\"pepLink\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Link</label>\n                    </aside>\n                    <div className={classes.input}>\n                        <input\n                            value={link}\n                            onChange={event => setLink(event.target.value)}\n                            className={classes.inputField}\n                            aria-required=\"false\" id=\"pepLink\" placeholder=\"Link\" type=\"text\"\n                             />\n\n                    </div>\n                </div>\n\n                <div className={classes.holder}>\n                    <aside className={classes.label}>\n                        <label htmlFor=\"pepBio\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Bio</label>\n                    </aside>\n                    <div className={classes.input}>\n                        <textarea\n                            value={bio}\n                            onChange={event => setBio(event.target.value)}\n                            className={classes.inputText}\n                            id=\"pepBio\"\n                        />\n                        <div className={classes.description}>\n                            <span className={classes.descriptionText}>Provide your personal information, even if the account is used for a business, a pet or something else. This won't be a part of your public profile.</span>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.holder}>\n                    <aside className={classes.label}>\n                        <label htmlFor=\"pepEmail\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Email</label>\n                    </aside>\n                    <div className={classes.input}>\n                        <input\n                            value={userLogged.email}\n                            disabled=\"disabled\"\n                            className={classes.inputField}\n                            aria-required=\"false\" id=\"pepEmail\" placeholder=\"Email\" type=\"text\"\n                        />\n                    </div>\n                </div>\n\n\n                <div className={classes.holder}>\n                    <aside className={classes.label}>\n                        <label htmlFor=\"pepPhone\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Phone Number</label>\n                    </aside>\n                    <div className={classes.input}>\n                        <input\n                            value={phone}\n                            onChange={event => setPhone(event.target.value)}\n                            className={classes.inputField}\n                            aria-required=\"false\" id=\"pepPhone\" placeholder=\"Phone\" type=\"text\"\n                        />\n                    </div>\n                </div>\n\n                <div className={classes.submit}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Update</Button>\n                </div>\n\n            </form>\n\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n            >\n                <div style={modalStyle} className={classes.paper}>\n                    <div className={classes.modalHeader}>\n                        <h2>Change profile</h2>\n                        <div className={classes.buttonClose}>\n                            <IconButton aria-label=\"Cancel\" color=\"inherit\" onClick={handleClose} >\n                                <CancelTwoToneIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                    <Divider />\n                    <div className={classes.btnAction}>\n                        <Button\n                            classes={{\n                                root: classes.btnUpload,\n                                label: classes.btnLabel,\n                            }}\n                            disabled={loadingAvt}\n                            onClick={handleClick}\n                        >\n                            Upload Photo\n                        </Button>\n                    </div>\n                    <Divider />\n                    <div className={classes.btnAction}>\n                        <Button\n                            classes={{\n                                root: classes.btnRemove,\n                                label: classes.btnLabel,\n                            }}\n                            disabled={loadingAvt}\n                            onClick={handleRemove}\n                        >\n                            Remove Photo\n                        </Button>\n                    </div>\n                    {loadingAvt && <CircularProgress size={24} className={classes.buttonProgress} /> }\n                    <Divider />\n\n                    <form encType=\"multipart/form-data\" method=\"POST\" role=\"presentation\">\n                        <input\n                            accept=\"image/jpeg,image/png\"\n                            style={{display: \"none\"}}\n                            type=\"file\"\n                            ref={hiddenFileInput}\n                            onChange={handleChange}\n                        />\n                    </form>\n                </div>\n\n            </Modal>\n\n            <Snackbar\n                open={openSnack}\n                autoHideDuration={6000}\n                onClose={handleCloseSnack}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n            >\n                <Alert variant=\"filled\" onClose={handleCloseSnack} severity=\"success\">\n                    Upload successfully !\n                </Alert>\n            </Snackbar>\n        </article>\n\n    )\n}\n\nexport default EditAccount","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditPassword.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/ProfileNavBar.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileFeed.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/features/chatSlice.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Sidebar/SidebarChat.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Sidebar/CreateNewChat.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Message.js",["333"],"import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {auth} from \"../../firebase\";\nimport {useSelector} from \"react-redux\";\nimport {selectChatRecipient} from \"../../features/chatSlice\";\nimport TimeAgo from \"timeago-react\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    chat: {\n        color: \"#262626\",\n        overflowWrap: \"break-word\",\n        whiteSpace: \"pre-wrap\",\n        fontSize: \"14px\",\n    },\n    chatTime: {\n        marginLeft: 20,\n        fontSize: \"12px\",\n        color: \"#484848\",\n    }\n}));\n\nconst Message = ({uid, message, timestamp}) => {\n    const recipient = useSelector(selectChatRecipient);\n    const [userLogged] = useAuthState(auth);\n\n    const classes = useStyles();\n\n    return (\n        <div className=\"chat__content\">\n            {/* Retrieve */}\n            <div className={`chat__message ${userLogged.uid === uid && \"sender\"}`}>\n                {\n                    userLogged.uid !== uid && (\n                        <Avatar alt={recipient?.displayName} src={recipient?.photoURL} />\n                    )\n                }\n\n                <div className=\"chat__details\">\n                    <span className={classes.chat}>\n                        {message}\n                    </span>\n                    {\n                        timestamp? (\n                            <span className={classes.chatTime}>\n                                {timestamp?.toDate().toLocaleString()}\n                            </span>\n                        ) : (\n                            <span className={classes.chatTime}>Loading</span>\n                        )\n                    }\n\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Message","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/ChatInput.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/index.js",["334"],"/home/miizoo/Desktop/ReactJS/livefood/src/views/SinglePage.js",["335"],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileVids.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileSaved.js",["336"],"/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExplorePage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExplorePeoplePage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExplorePeopleItem.js",["337"],"/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExploreVideoPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExploreVideoItem.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/utils/handleUserFollow.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/utils/handleUserUnfollow.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/RecipePage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Post.js",["338","339"],"import React, {useEffect, useState} from \"react\";\n\nimport PostComment from \"../Comments\";\nimport Card from '@material-ui/core/Card';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {db, auth} from \"../../firebase\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport PostUtil from \"./Util\";\nimport PostAction from \"./Action\";\nimport PostContent from \"./Content\";\nimport PostHeader from \"./Header\";\nimport PostRecipeData from \"./RecipeData\";\nimport CommentInput from \"../Comments/CommentInput\";\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tmaxWidth: \"100%\",\n\t\tboxShadow: \"none\"\n\t},\n\tmedia: {\n\t\theight: 400\n\t},\n\texpand: {\n\t\ttransform: 'rotate(0deg)',\n\t\tmarginLeft: 'auto',\n\t\ttransition: theme.transitions.create('transform', {\n\t\t\tduration: theme.transitions.duration.shortest,\n\t\t}),\n\t},\n\texpandOpen: {\n\t\ttransform: 'rotate(180deg)',\n\t},\n\taction: {\n\t\tborderTop: \"1px solid rgba(var(--b6a,219,219,219),1)\",\n\t\tjustifyContent: \"space-between\"\n\t},\n\tcaptionText: {\n\t\twhiteSpace: \"pre-line\",\n\t\tlineHeight: \"26px\"\n\t},\n\tactionButton: {\n\t\tborder: \"0\",\n\t\tbackgroundColor: \"none\",\n\t\tborderRadius: \"50%\",\n\t\tcolor: \"rgba(0, 0, 0, 0.54)\",\n\t\t'&:hover': {\n\t\t\tcolor: 'black',\n\t\t}\n\t},\n\tdataContent: {\n\t\tdisplay: \"flex\"\n\t},\n\tselected: {\n\t\tbackgroundColor: \"unset !important\"\n\t},\n\tcomment:{\n\t\tdisplay: \"block\"\n\t}\n}));\n\n\n// id, user, caption, imageUrl, timestamp\n//\nfunction Post( {id, post, author, authorId, ...rest} ) {\n\n\tconst classes = useStyles();\n\tconst [expanded, setExpanded] = useState(false);\n\n\t// auth user data\n\tconst [user] = useAuthState(auth);\n\n\n\tconst [open, setOpen] = React.useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\n\treturn (\n\t\t<div className=\"post\">\n\t\t\t<Card className={classes.root} >\n\t\t\t\t<PostHeader author={author} handleClickOpen={handleClickOpen} postDate={post.timestamp} type={post.type}/>\n\t\t\t\t{/*Media*/}\n\t\t\t\t<PostContent author={author} mediaUrl={post.mediaUrl} caption={post.caption} mediaType={post.mediaType} />\n\t\t\t\t{/* Post Action*/}\n\t\t\t\t<PostAction id={id} uid={user.uid} postLike={post.likeBy} postSave={post.saveBy} expanded={expanded} setExpanded={setExpanded} hasData={!!post?.data}/>\n\t\t\t\t{/* Recipe data */}\n\t\t\t\t<PostRecipeData postData={post.data} expanded={expanded}/>\n\t\t\t\t{/* Comments */}\n\t\t\t\t<PostComment id={id} />\n\t\t\t\t{/* Comments input */}\n\t\t\t\t<CommentInput user={user} id={id}/>\n\t\t\t</Card>\n\n\t\t\t<PostUtil open={open} handleClose={handleClose} uid={user.uid} opponentID={post.uid} postID={id} isSave={false}/>\n\n\t\t</div>\n\t)\n}\n\nexport default Post","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditShop.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/CommentDetails.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/hooks/getRecipientUser.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/hooks/firebaseAuth.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/hooks/services.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Util.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Action.js",["340","341","342"],"import React, {useEffect, useState} from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from 'prop-types';\nimport {handleDislikePost, handleLikePost, handleSavePost, handleUnSavedPost} from \"../../hooks/services\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {ToggleButton} from \"@material-ui/lab\";\nimport FavoriteRoundedIcon from \"@material-ui/icons/FavoriteRounded\";\nimport FavoriteBorderTwoToneIcon from \"@material-ui/icons/FavoriteBorderTwoTone\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ModeCommentOutlinedIcon from \"@material-ui/icons/ModeCommentOutlined\";\nimport BookmarkRoundedIcon from \"@material-ui/icons/BookmarkRounded\";\nimport BookmarkBorderOutlinedIcon from \"@material-ui/icons/BookmarkBorderOutlined\";\nimport ShareIcon from \"@material-ui/icons/Share\";\n\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Divider from \"@material-ui/core/Divider\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    action: {\n        borderTop: \"1px solid rgba(var(--b6a,219,219,219),1)\",\n        justifyContent: \"space-between\"\n    },\n    actionButton: {\n        border: \"0\",\n        backgroundColor: \"none\",\n        borderRadius: \"50%\",\n        color: \"rgba(0, 0, 0, 0.54)\",\n        '&:hover': {\n            color: 'black',\n        }\n    },\n    selected: {\n        backgroundColor: \"unset !important\"\n    },\n    displayLike: {\n        padding: \"0 0 20px 20px\",\n        borderBottom: \"1px solid rgba(var(--b6a,219,219,219),1)\"\n    },\n}));\n\n\n\nexport default function PostAction({id, uid, postLike, postSave, expanded, setExpanded, hasData}){\n    const classes = useStyles();\n    const [selected, setSelected] = useState(false);\n    const [saveSelected, setSaveSelected] = useState(false);\n    const [likeCount, setLikeCount] = useState(parseInt(postLike?.length));\n\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    // Handle like and dislike action\n    const likePost = () => {\n        setSelected(true);\n        handleLikePost(id, uid)\n        setLikeCount((likes) => (selected ? likes - 1 : likes + 1));\n    }\n\n    const dislikePost = () => {\n        setSelected(false);\n        handleDislikePost(id, uid)\n        setLikeCount((likes) => (selected ? likes - 1 : likes + 1));\n    }\n\n    const savePost = () => {\n        // Save post id to user data, and push to post data\n        setSaveSelected(true);\n        handleSavePost(id, uid);\n    }\n\n    const unsavedPost = () => {\n        // Save post id to user data, and push to post data\n        setSaveSelected(false);\n        handleUnSavedPost(id, uid);\n    }\n\n    useEffect(() => {\n        if(typeof postLike !== 'undefined' && postLike.includes(uid)){\n            setSelected(true);\n        }\n\n        if(typeof postSave !== 'undefined' && postSave.includes(uid)){\n            setSaveSelected(true);\n        }\n    }, [])\n\n\n\n    return(\n        <>\n            <CardActions disableSpacing className={classes.action}>\n                <div className=\"post__button\">\n                    <div className=\"action__like\">\n                        <ToggleButton\n                            value=\"check\"\n                            selected={selected}\n                            // className={classes.likeButton}\n                            classes={{\n                                root: classes.actionButton,\n                                selected: classes.selected,\n                            }}\n                            onClick={() => {\n                                if(!selected) likePost();\n                                else dislikePost();\n                            }}\n                        >\n                            {\n                                selected ? <FavoriteRoundedIcon style={{color: \"red\"}}/> : <FavoriteBorderTwoToneIcon />\n                            }\n                        </ToggleButton>\n                    </div>\n                    <div className=\"action__comment\">\n                        <IconButton aria-label=\"comment\">\n                            <ModeCommentOutlinedIcon/>\n                        </IconButton>\n                    </div>\n                    <div className=\"action__share\">\n                        <ToggleButton\n                            value=\"check\"\n                            selected={saveSelected}\n                            // className={classes.likeButton}\n                            classes={{\n                                root: classes.actionButton,\n                                selected: classes.selected,\n                            }}\n                            onClick={() => {\n                                if(!saveSelected) savePost();\n                                else unsavedPost();\n                            }}\n                        >\n                            {\n                                saveSelected ? <BookmarkRoundedIcon style={{color: \"black\"}}/> : <BookmarkBorderOutlinedIcon />\n                            }\n                        </ToggleButton>\n                        {/*<IconButton aria-label=\"share\">*/}\n                        {/*\t<BookmarkBorderOutlinedIcon />*/}\n                        {/*</IconButton>*/}\n                    </div>\n                </div>\n                {\n                     hasData ? (\n                        <div className=\"action__expand\">\n                            <IconButton\n                                className={clsx(classes.expand, {\n                                    [classes.expandOpen]: expanded,\n                                })}\n                                onClick={handleExpandClick}\n                                aria-expanded={expanded}\n                                aria-label=\"show more\"\n                            >\n                                <ExpandMoreIcon />\n                            </IconButton>\n                        </div>\n                    ) : null\n                }\n            </CardActions>\n\n            {\n                likeCount > 0 ? (<div className={classes.displayLike}>\n                    <span><b>{likeCount} Likes</b></span>\n                </div>) : null\n            }\n\n        </>\n    )\n}\n\nPostAction.propTypes = {\n    id: PropTypes.string.isRequired,\n    uid: PropTypes.string.isRequired,\n    postLike: PropTypes.array,\n    postSave: PropTypes.array,\n};","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Content.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Header.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/RecipeData.js",["343","344"],"import React from \"react\";\nimport {CardContent, Collapse} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n\n    paragraph: {\n        lineHeight: \"26px\",\n        textAlign: \"justify\",\n        whiteSpace: \"pre-line\",\n        fontSize: \"14px\"\n    },\n    paragraphHead: {\n        fontWeight: \"600\",\n        fontSize: \"1rem\",\n        marginBottom: \"10px\",\n        padding: \"5px 0\",\n        textTransform: \"uppercase\",\n        borderBottom : \"1px solid #000\"\n    }\n}));\n\n\nexport default function PostRecipeData({postData, expanded}){\n    const classes = useStyles();\n\n\n    return(\n        <>\n            {\n                !!postData ? (\n                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit >\n                        <div className=\"recipe_layout\">\n                            <CardContent className=\"recipe_layout__content-left\">\n                                <div className=\"recipe_layout__facts\">\n                                    <div className=\"recipe-facts__info\">\n                                        <div className=\"recipe-facts__details recipe-facts__prepare\"><span\n                                            className=\"recipe-facts__title\">Prepare in:</span> <span>{postData?.prepTime} {postData?.prepUnit}</span></div>\n                                        <div className=\"recipe-facts__details recipe-facts__cooking\"><span\n                                            className=\"recipe-facts__title\">Cook in:</span> <a\n                                            className=\"theme-color\">{postData?.cookTime} {postData?.cookUnit}</a></div>\n                                    </div>\n                                    <div className=\"recipe-facts__info\">\n                                        <div className=\"recipe-facts__details recipe-facts__servings\"><span\n                                            className=\"recipe-facts__title\">Serves:</span> <a\n                                            className=\"theme-color\">{postData?.serve}</a></div>\n                                    </div>\n                                </div>\n                                <Typography paragraph className={classes.paragraphHead}>Ingredients:</Typography>\n                                <Typography paragraph className={classes.paragraph}>{postData?.ingredient}</Typography>\n                            </CardContent>\n                            <CardContent className=\"recipe_layout__content-right\">\n                                <Typography paragraph className={classes.paragraphHead}>Direction:</Typography>\n                                <Typography paragraph className={classes.paragraph}>{postData?.direction}</Typography>\n                            </CardContent>\n                        </div>\n                        <Divider />\n                    </Collapse>\n                ) : null\n            }\n        </>\n    )\n}\n\n\nPostRecipeData.propTypes = {\n    postData: PropTypes.object,\n    expanded: PropTypes.bool,\n};","/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/CommentInput.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/MediaViewer/Preview.js",["345","346","347","348","349","350","351"],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/AddDishes.js",["352","353","354","355","356","357","358","359"],{"ruleId":"360","replacedBy":"361"},{"ruleId":"362","replacedBy":"363"},{"ruleId":"364","severity":1,"message":"365","line":2,"column":16,"nodeType":"366","messageId":"367","endLine":2,"endColumn":25},{"ruleId":"364","severity":1,"message":"368","line":2,"column":27,"nodeType":"366","messageId":"367","endLine":2,"endColumn":35},{"ruleId":"364","severity":1,"message":"369","line":13,"column":15,"nodeType":"366","messageId":"367","endLine":13,"endColumn":17},{"ruleId":"364","severity":1,"message":"370","line":17,"column":8,"nodeType":"366","messageId":"367","endLine":17,"endColumn":16},{"ruleId":"364","severity":1,"message":"371","line":18,"column":9,"nodeType":"366","messageId":"367","endLine":18,"endColumn":20},{"ruleId":"364","severity":1,"message":"372","line":19,"column":9,"nodeType":"366","messageId":"367","endLine":19,"endColumn":14},{"ruleId":"364","severity":1,"message":"373","line":19,"column":16,"nodeType":"366","messageId":"367","endLine":19,"endColumn":22},{"ruleId":"364","severity":1,"message":"374","line":4,"column":45,"nodeType":"366","messageId":"367","endLine":4,"endColumn":51},{"ruleId":"364","severity":1,"message":"375","line":181,"column":12,"nodeType":"366","messageId":"367","endLine":181,"endColumn":20},{"ruleId":"364","severity":1,"message":"376","line":181,"column":22,"nodeType":"366","messageId":"367","endLine":181,"endColumn":33},{"ruleId":"377","severity":1,"message":"378","line":268,"column":8,"nodeType":"379","endLine":268,"endColumn":18,"suggestions":"380"},{"ruleId":"381","severity":1,"message":"382","line":404,"column":105,"nodeType":"383","endLine":405,"endColumn":81},{"ruleId":"381","severity":1,"message":"382","line":409,"column":104,"nodeType":"383","endLine":410,"endColumn":81},{"ruleId":"364","severity":1,"message":"368","line":1,"column":17,"nodeType":"366","messageId":"367","endLine":1,"endColumn":25},{"ruleId":"364","severity":1,"message":"384","line":6,"column":9,"nodeType":"366","messageId":"367","endLine":6,"endColumn":14},{"ruleId":"364","severity":1,"message":"365","line":1,"column":16,"nodeType":"366","messageId":"367","endLine":1,"endColumn":25},{"ruleId":"364","severity":1,"message":"385","line":4,"column":8,"nodeType":"366","messageId":"367","endLine":4,"endColumn":28},{"ruleId":"364","severity":1,"message":"386","line":5,"column":8,"nodeType":"366","messageId":"367","endLine":5,"endColumn":18},{"ruleId":"364","severity":1,"message":"387","line":6,"column":8,"nodeType":"366","messageId":"367","endLine":6,"endColumn":29},{"ruleId":"364","severity":1,"message":"388","line":14,"column":8,"nodeType":"366","messageId":"367","endLine":14,"endColumn":13},{"ruleId":"381","severity":1,"message":"382","line":307,"column":110,"nodeType":"383","endLine":307,"endColumn":165},{"ruleId":"381","severity":1,"message":"382","line":308,"column":109,"nodeType":"383","endLine":308,"endColumn":163},{"ruleId":"364","severity":1,"message":"389","line":2,"column":8,"nodeType":"366","messageId":"367","endLine":2,"endColumn":15},{"ruleId":"364","severity":1,"message":"390","line":6,"column":17,"nodeType":"366","messageId":"367","endLine":6,"endColumn":25},{"ruleId":"364","severity":1,"message":"391","line":6,"column":36,"nodeType":"366","messageId":"367","endLine":6,"endColumn":45},{"ruleId":"364","severity":1,"message":"392","line":2,"column":9,"nodeType":"366","messageId":"367","endLine":2,"endColumn":21},{"ruleId":"364","severity":1,"message":"393","line":3,"column":9,"nodeType":"366","messageId":"367","endLine":3,"endColumn":13},{"ruleId":"364","severity":1,"message":"394","line":174,"column":12,"nodeType":"366","messageId":"367","endLine":174,"endColumn":19},{"ruleId":"364","severity":1,"message":"395","line":174,"column":21,"nodeType":"366","messageId":"367","endLine":174,"endColumn":31},{"ruleId":"364","severity":1,"message":"396","line":8,"column":8,"nodeType":"366","messageId":"367","endLine":8,"endColumn":15},{"ruleId":"364","severity":1,"message":"397","line":45,"column":9,"nodeType":"366","messageId":"367","endLine":45,"endColumn":19},{"ruleId":"377","severity":1,"message":"398","line":71,"column":7,"nodeType":"379","endLine":71,"endColumn":16,"suggestions":"399"},{"ruleId":"377","severity":1,"message":"400","line":69,"column":8,"nodeType":"379","endLine":69,"endColumn":31,"suggestions":"401"},{"ruleId":"377","severity":1,"message":"402","line":105,"column":8,"nodeType":"379","endLine":105,"endColumn":35,"suggestions":"403"},{"ruleId":"364","severity":1,"message":"365","line":1,"column":16,"nodeType":"366","messageId":"367","endLine":1,"endColumn":25},{"ruleId":"364","severity":1,"message":"369","line":6,"column":9,"nodeType":"366","messageId":"367","endLine":6,"endColumn":11},{"ruleId":"364","severity":1,"message":"404","line":13,"column":8,"nodeType":"366","messageId":"367","endLine":13,"endColumn":17},{"ruleId":"364","severity":1,"message":"405","line":17,"column":8,"nodeType":"366","messageId":"367","endLine":17,"endColumn":15},{"ruleId":"377","severity":1,"message":"406","line":99,"column":8,"nodeType":"379","endLine":99,"endColumn":10,"suggestions":"407"},{"ruleId":"381","severity":1,"message":"382","line":43,"column":93,"nodeType":"383","endLine":44,"endColumn":69},{"ruleId":"381","severity":1,"message":"382","line":48,"column":92,"nodeType":"383","endLine":49,"endColumn":69},{"ruleId":"364","severity":1,"message":"365","line":1,"column":16,"nodeType":"366","messageId":"367","endLine":1,"endColumn":25},{"ruleId":"364","severity":1,"message":"408","line":2,"column":9,"nodeType":"366","messageId":"367","endLine":2,"endColumn":15},{"ruleId":"364","severity":1,"message":"409","line":2,"column":17,"nodeType":"366","messageId":"367","endLine":2,"endColumn":28},{"ruleId":"364","severity":1,"message":"410","line":2,"column":30,"nodeType":"366","messageId":"367","endLine":2,"endColumn":38},{"ruleId":"364","severity":1,"message":"386","line":2,"column":40,"nodeType":"366","messageId":"367","endLine":2,"endColumn":50},{"ruleId":"364","severity":1,"message":"411","line":2,"column":59,"nodeType":"366","messageId":"367","endLine":2,"endColumn":68},{"ruleId":"364","severity":1,"message":"412","line":4,"column":8,"nodeType":"366","messageId":"367","endLine":4,"endColumn":18},{"ruleId":"364","severity":1,"message":"413","line":3,"column":5,"nodeType":"366","messageId":"367","endLine":3,"endColumn":11},{"ruleId":"364","severity":1,"message":"409","line":6,"column":5,"nodeType":"366","messageId":"367","endLine":6,"endColumn":16},{"ruleId":"364","severity":1,"message":"410","line":8,"column":5,"nodeType":"366","messageId":"367","endLine":8,"endColumn":13},{"ruleId":"364","severity":1,"message":"412","line":14,"column":8,"nodeType":"366","messageId":"367","endLine":14,"endColumn":18},{"ruleId":"364","severity":1,"message":"414","line":17,"column":8,"nodeType":"366","messageId":"367","endLine":17,"endColumn":28},{"ruleId":"364","severity":1,"message":"415","line":18,"column":8,"nodeType":"366","messageId":"367","endLine":18,"endColumn":27},{"ruleId":"364","severity":1,"message":"416","line":19,"column":8,"nodeType":"366","messageId":"367","endLine":19,"endColumn":18},{"ruleId":"364","severity":1,"message":"417","line":123,"column":23,"nodeType":"366","messageId":"367","endLine":123,"endColumn":35},"no-native-reassign",["418"],"no-negated-in-lhs",["419"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'db' is defined but never used.","'firebase' is defined but never used.","'useDispatch' is defined but never used.","'login' is defined but never used.","'logout' is defined but never used.","'Popper' is defined but never used.","'comments' is assigned a value but never used.","'setComments' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.post.likeBy', 'props.post.saveBy', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["420"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Modal' is defined but never used.","'SettingsOutlinedIcon' is defined but never used.","'IconButton' is defined but never used.","'MoreHorizOutlinedIcon' is defined but never used.","'Popup' is defined but never used.","'NavItem' is defined but never used.","'ListIcon' is defined but never used.","'UsersIcon' is defined but never used.","'useAuthState' is defined but never used.","'auth' is defined but never used.","'disable' is assigned a value but never used.","'setDisable' is assigned a value but never used.","'TimeAgo' is defined but never used.","'userFollow' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'postSnapshot'. Either include it or remove the dependency array.",["421"],"React Hook useEffect has a missing dependency: 'userSavedList'. Either include it or remove the dependency array.",["422"],"React Hook useEffect has missing dependencies: 'props.userLogged.uid' and 'userSnapshot'. Either include them or remove the dependency array.",["423"],"'ShareIcon' is defined but never used.","'Divider' is defined but never used.","React Hook useEffect has missing dependencies: 'postLike', 'postSave', and 'uid'. Either include them or remove the dependency array.",["424"],"'Button' is defined but never used.","'CardContent' is defined but never used.","'Collapse' is defined but never used.","'TextField' is defined but never used.","'Typography' is defined but never used.","'Avatar' is defined but never used.","'VideoCallTwoToneIcon' is defined but never used.","'GroupAddTwoToneIcon' is defined but never used.","'CardHeader' is defined but never used.","'progressData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"425","fix":"426"},{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},"Update the dependencies array to be: [props.id, props.post.likeBy, props.post.saveBy, user]",{"range":"435","text":"436"},"Update the dependencies array to be: [loading, postSnapshot]",{"range":"437","text":"438"},"Update the dependencies array to be: [userSavedList, userSavedList.length]",{"range":"439","text":"440"},"Update the dependencies array to be: [props.userLogged.uid, userFollowingList.length, userSnapshot]",{"range":"441","text":"442"},"Update the dependencies array to be: [postLike, postSave, uid]",{"range":"443","text":"444"},[7312,7322],"[props.id, props.post.likeBy, props.post.saveBy, user]",[1995,2004],"[loading, postSnapshot]",[2251,2274],"[userSavedList, userSavedList.length]",[3439,3466],"[props.userLogged.uid, userFollowingList.length, userSnapshot]",[3187,3189],"[postLike, postSave, uid]"]