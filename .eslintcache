[{"/home/miizoo/Desktop/ReactJS/livefood/src/index.js":"1","/home/miizoo/Desktop/ReactJS/livefood/src/App.js":"2","/home/miizoo/Desktop/ReactJS/livefood/src/firebase.js":"3","/home/miizoo/Desktop/ReactJS/livefood/src/CustomHook/FirebaseAuth.js":"4","/home/miizoo/Desktop/ReactJS/livefood/src/routes.js":"5","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Chat.js":"6","/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/Popup.js":"7","/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/Stepper.js":"8","/home/miizoo/Desktop/ReactJS/livefood/src/components/GlobalStyle/index.js":"9","/home/miizoo/Desktop/ReactJS/livefood/src/serviceWorker.js":"10","/home/miizoo/Desktop/ReactJS/livefood/src/app/store.js":"11","/home/miizoo/Desktop/ReactJS/livefood/src/features/userSlice.js":"12","/home/miizoo/Desktop/ReactJS/livefood/src/icons/Facebook.js":"13","/home/miizoo/Desktop/ReactJS/livefood/src/icons/Google.js":"14","/home/miizoo/Desktop/ReactJS/livefood/src/components/Page.js":"15","/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/index.js":"16","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Item/index.js":"17","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Search/index.js":"18","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Logo/index.js":"19","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/index.js":"20","/home/miizoo/Desktop/ReactJS/livefood/src/components/MediaViewer/index.js":"21","/home/miizoo/Desktop/ReactJS/livefood/src/views/MessengerPage.js":"22","/home/miizoo/Desktop/ReactJS/livefood/src/views/HomePage.js":"23","/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/index.js":"24","/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/Comment.js":"25","/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExploreItem.js":"26","/home/miizoo/Desktop/ReactJS/livefood/src/views/NotFoundPage.js":"27","/home/miizoo/Desktop/ReactJS/livefood/src/views/auth/SignUpPage.js":"28","/home/miizoo/Desktop/ReactJS/livefood/src/views/auth/SignInPage.js":"29","/home/miizoo/Desktop/ReactJS/livefood/src/views/account/UserProfilePage.js":"30","/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/LeftSideBar/index.js":"31","/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/LeftSideBar/NavItem.js":"32","/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/RightSideBar/index.js":"33","/home/miizoo/Desktop/ReactJS/livefood/src/layouts/MainLayout.js":"34","/home/miizoo/Desktop/ReactJS/livefood/src/layouts/DefaultLayout.js":"35","/home/miizoo/Desktop/ReactJS/livefood/src/views/account/EditAccountPage.js":"36","/home/miizoo/Desktop/ReactJS/livefood/src/utils/getRecipientUser.js":"37","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/ProfileHeader.js":"38","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/AccountNavBar.js":"39","/home/miizoo/Desktop/ReactJS/livefood/src/theme/index.js":"40","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditAccount.js":"41","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditPassword.js":"42","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/ProfileNavBar.js":"43","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileFeed.js":"44","/home/miizoo/Desktop/ReactJS/livefood/src/features/chatSlice.js":"45","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Sidebar/SidebarChat.js":"46","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Sidebar/CreateNewChat.js":"47","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Message.js":"48","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/ChatInput.js":"49","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/index.js":"50","/home/miizoo/Desktop/ReactJS/livefood/src/views/SinglePage.js":"51","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileVids.js":"52","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileSaved.js":"53","/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExplorePage.js":"54","/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExplorePeoplePage.js":"55","/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExplorePeopleItem.js":"56","/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExploreVideoPage.js":"57","/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExploreVideoItem.js":"58","/home/miizoo/Desktop/ReactJS/livefood/src/utils/handleLikePost.js":"59","/home/miizoo/Desktop/ReactJS/livefood/src/utils/handleDislikePost.js":"60","/home/miizoo/Desktop/ReactJS/livefood/src/utils/handleSavePost.js":"61","/home/miizoo/Desktop/ReactJS/livefood/src/utils/handleUnsavedPost.js":"62","/home/miizoo/Desktop/ReactJS/livefood/src/utils/handleUserFollow.js":"63","/home/miizoo/Desktop/ReactJS/livefood/src/utils/handleUserUnfollow.js":"64","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/PostAction.js":"65","/home/miizoo/Desktop/ReactJS/livefood/src/views/RecipePage.js":"66","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Post.js":"67"},{"size":674,"mtime":1616998952304,"results":"68","hashOfConfig":"69"},{"size":1727,"mtime":1618852188725,"results":"70","hashOfConfig":"69"},{"size":1157,"mtime":1618332345707,"results":"71","hashOfConfig":"69"},{"size":996,"mtime":1619070859685,"results":"72","hashOfConfig":"69"},{"size":3225,"mtime":1619081474196,"results":"73","hashOfConfig":"69"},{"size":4889,"mtime":1618410411175,"results":"74","hashOfConfig":"69"},{"size":11511,"mtime":1619162173862,"results":"75","hashOfConfig":"69"},{"size":23882,"mtime":1619163072500,"results":"76","hashOfConfig":"69"},{"size":797,"mtime":1616998797535,"results":"77","hashOfConfig":"69"},{"size":5796,"mtime":1615795454946,"results":"78","hashOfConfig":"69"},{"size":262,"mtime":1617122372343,"results":"79","hashOfConfig":"69"},{"size":468,"mtime":1617121688821,"results":"80","hashOfConfig":"69"},{"size":838,"mtime":1615966721264,"results":"81","hashOfConfig":"69"},{"size":1584,"mtime":1615966706650,"results":"82","hashOfConfig":"69"},{"size":625,"mtime":1615968337340,"results":"83","hashOfConfig":"69"},{"size":5025,"mtime":1619151863155,"results":"84","hashOfConfig":"69"},{"size":7356,"mtime":1618937977523,"results":"85","hashOfConfig":"69"},{"size":2149,"mtime":1616161482479,"results":"86","hashOfConfig":"69"},{"size":741,"mtime":1616172292428,"results":"87","hashOfConfig":"69"},{"size":1077,"mtime":1616914818330,"results":"88","hashOfConfig":"69"},{"size":19385,"mtime":1618938046350,"results":"89","hashOfConfig":"69"},{"size":3389,"mtime":1619025682489,"results":"90","hashOfConfig":"69"},{"size":815,"mtime":1619074312988,"results":"91","hashOfConfig":"69"},{"size":1035,"mtime":1618802528050,"results":"92","hashOfConfig":"69"},{"size":1219,"mtime":1619152360700,"results":"93","hashOfConfig":"69"},{"size":2405,"mtime":1618889266416,"results":"94","hashOfConfig":"69"},{"size":1488,"mtime":1616779633942,"results":"95","hashOfConfig":"69"},{"size":6640,"mtime":1619071775614,"results":"96","hashOfConfig":"69"},{"size":6760,"mtime":1619072882913,"results":"97","hashOfConfig":"69"},{"size":2028,"mtime":1619064739587,"results":"98","hashOfConfig":"69"},{"size":5663,"mtime":1619151131262,"results":"99","hashOfConfig":"69"},{"size":2349,"mtime":1619020804969,"results":"100","hashOfConfig":"69"},{"size":7634,"mtime":1619081474200,"results":"101","hashOfConfig":"69"},{"size":363,"mtime":1617033113940,"results":"102","hashOfConfig":"69"},{"size":1076,"mtime":1615825508670,"results":"103","hashOfConfig":"69"},{"size":1472,"mtime":1619059283877,"results":"104","hashOfConfig":"69"},{"size":155,"mtime":1617010171560,"results":"105","hashOfConfig":"69"},{"size":8030,"mtime":1619014512100,"results":"106","hashOfConfig":"69"},{"size":2971,"mtime":1619026283240,"results":"107","hashOfConfig":"69"},{"size":610,"mtime":1615795136367,"results":"108","hashOfConfig":"69"},{"size":18434,"mtime":1619167318706,"results":"109","hashOfConfig":"69"},{"size":5817,"mtime":1617071201032,"results":"110","hashOfConfig":"69"},{"size":3562,"mtime":1619163465863,"results":"111","hashOfConfig":"69"},{"size":2739,"mtime":1619063517509,"results":"112","hashOfConfig":"69"},{"size":821,"mtime":1617387901510,"results":"113","hashOfConfig":"69"},{"size":4563,"mtime":1618336215879,"results":"114","hashOfConfig":"69"},{"size":5598,"mtime":1619150372710,"results":"115","hashOfConfig":"69"},{"size":1834,"mtime":1617643787416,"results":"116","hashOfConfig":"69"},{"size":5089,"mtime":1617766295107,"results":"117","hashOfConfig":"69"},{"size":3960,"mtime":1619109047099,"results":"118","hashOfConfig":"69"},{"size":4184,"mtime":1619143844439,"results":"119","hashOfConfig":"69"},{"size":2872,"mtime":1619022172855,"results":"120","hashOfConfig":"69"},{"size":3331,"mtime":1619022172839,"results":"121","hashOfConfig":"69"},{"size":2967,"mtime":1619060760214,"results":"122","hashOfConfig":"69"},{"size":709,"mtime":1619060725114,"results":"123","hashOfConfig":"69"},{"size":6482,"mtime":1619156679494,"results":"124","hashOfConfig":"69"},{"size":3086,"mtime":1619024831305,"results":"125","hashOfConfig":"69"},{"size":1842,"mtime":1618762647859,"results":"126","hashOfConfig":"69"},{"size":202,"mtime":1618831777295,"results":"127","hashOfConfig":"69"},{"size":209,"mtime":1618831806632,"results":"128","hashOfConfig":"69"},{"size":330,"mtime":1618940870497,"results":"129","hashOfConfig":"69"},{"size":338,"mtime":1618940870489,"results":"130","hashOfConfig":"69"},{"size":460,"mtime":1619014392780,"results":"131","hashOfConfig":"69"},{"size":426,"mtime":1619014417228,"results":"132","hashOfConfig":"69"},{"size":6222,"mtime":1619019338868,"results":"133","hashOfConfig":"69"},{"size":9388,"mtime":1619150410026,"results":"134","hashOfConfig":"69"},{"size":12852,"mtime":1619144099744,"results":"135","hashOfConfig":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"nv6ebl",{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"138"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"138"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"138"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"138"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"138"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"138"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"138"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"138"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"138"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"138"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"138"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"138"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"138"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"138"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"138"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"138"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"138"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"138"},"/home/miizoo/Desktop/ReactJS/livefood/src/index.js",[],["289","290"],"/home/miizoo/Desktop/ReactJS/livefood/src/App.js",["291"],"import './App.css';\nimport React, {useEffect, useState} from \"react\";\nimport { useRoutes } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\n// import {auth, db} from \"./firebase\";\nimport GlobalStyles from \"./components/GlobalStyle\";\nimport Spinner from 'react-spinkit'\n\n\nimport theme from './theme';\nimport routes from \"./routes\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {auth, db} from \"./firebase\";\n\n// import styled from 'styled-components';\n\nimport firebase from \"firebase\";\nimport {useDispatch} from \"react-redux\";\nimport {login, logout} from \"./features/userSlice\";\n\nfunction App() {\n\tconst [userLogged, loading] = useAuthState(auth);\n\tconst routing = useRoutes(routes(userLogged));\n\t// const u = useSelector(selectUser);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tif(auth.onAuthStateChanged(author => {\n\t\t\tif(author){\n\t\t\t\tdispatch(\n\t\t\t\t\tlogin({\n\t\t\t\t\t\tuid: author.uid,\n\t\t\t\t\t\tphotoURL: author.photoURL,\n\t\t\t\t\t\temail: author.email,\n\t\t\t\t\t\tdisplayName: author.displayName\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t}else{\n\t\t\t\tdispatch(logout())\n\t\t\t}\n\t\t}))\n\n\t\tif(userLogged) {\n\t\t\tdb.collection(\"users\").doc(userLogged.uid).set({\n\t\t\t\tlastActive: firebase.firestore.FieldValue.serverTimestamp()\n\t\t\t},{\n\t\t\t\tmerge: true\n\t\t\t})\n\t\t}\n\n\t}, [dispatch, userLogged])\n\n\n\n\tif(loading){\n\t\treturn(\n\t\t\t<AppLoading />\n\t\t)\n\t}\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<GlobalStyles />\n\t\t\t{routing}\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n\nconst AppLoading = () => {\n\treturn (\n\t\t<div className=\"app__loading\">\n\t\t\t<img className=\"loading__logo\" alt=\"LiveFood\"\n\t\t\t\t src=\"/static/images/brand.png\"\n\t\t\t/>\n\t\t\t<Spinner\n\t\t\t\tname=\"ball-spin-fade-loader\"\n\t\t\t\tcolor=\"red\"\n\t\t\t\tfadeIn=\"none\"\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\n\n","/home/miizoo/Desktop/ReactJS/livefood/src/firebase.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/CustomHook/FirebaseAuth.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/routes.js",["292","293"],"import React from \"react\";\nimport { Navigate } from 'react-router-dom';\nimport MainLayout from \"./layouts/MainLayout\";\nimport DefaultLayout from \"./layouts/DefaultLayout\";\nimport Login from \"./views/auth/SignInPage\";\nimport HomePage from \"./views/HomePage\";\nimport NotFoundView from \"./views/NotFoundPage\"\nimport Messenger from \"./views/MessengerPage\";\nimport SignUp from \"./views/auth/SignUpPage\";\nimport Explore from \"./views/explore/ExplorePage\";\nimport UserProfilePage from \"./views/account/UserProfilePage\";\nimport EditAccountPage from \"./views/account/EditAccountPage\";\nimport SinglePage from \"./views/SinglePage\";\nimport ExplorePeople from \"./views/explore/ExplorePeoplePage\";\nimport ExploreVideo from \"./views/explore/ExploreVideoPage\";\nimport RecipePage from \"./views/RecipePage\";\n\n\nconst routes = (isLoggedIn)  => [\n\n    {\n        path: '/',\n        element: <MainLayout />,\n        children: [\n            { path: 'p/:id', element: <SinglePage userLogged={isLoggedIn} type=\"post\" />},\n            { path: 'recipe/', element: <RecipePage userLogged={isLoggedIn}/>},\n            { path: '/', element: isLoggedIn ? <HomePage userLogged={isLoggedIn}/> : <Navigate to=\"/explore\" />  },\n            { path: '404', element: <NotFoundView /> },\n            { path: '*', element: <Navigate to=\"/404\" /> }\n        ]\n    },\n    {\n        path: '/',\n        element: <DefaultLayout />,\n        children: [\n            { path: 'login', element: <Login /> },\n            { path: 'register', element: <SignUp /> }\n        ]\n    },\n    {\n        path: '/explore',\n        element: <MainLayout/>,\n        children: [\n            // { path: '/', element: <Explore userLogged={isLoggedIn}/> },\n            { path: '/people', element: isLoggedIn ? <ExplorePeople userLogged={isLoggedIn}/> : <Navigate to=\"/login\" />  },\n            // { path: '/watch', element:  <ExploreVideo userLogged={isLoggedIn}/> },\n            { path: '/watch'},\n        ]\n    },\n    {\n        path: '/messages',\n        element: isLoggedIn ? <MainLayout/> : <Navigate to=\"/login\" />,\n        children: [\n            { path: '/', element: <Messenger userLogged={isLoggedIn}/> },\n            { path: '/t/:id', element: <Messenger userLogged={isLoggedIn}/> },\n        ]\n    },\n    {\n        path: '/account',\n        element: isLoggedIn ? <MainLayout /> : <Navigate to=\"/login\" />,\n        children: [\n            { path: 'edit', element: <EditAccountPage userLogged={isLoggedIn} pagePath=\"account_edit\"/> },\n            { path: 'password/change', element: <EditAccountPage userLogged={isLoggedIn} pagePath=\"account_password\"/> },\n            { path: 'setting/notifications', element: <EditAccountPage userLogged={isLoggedIn} pagePath=\"account_setting\"/> },\n        ]\n    },\n    {\n        path: '/profile',\n        element: <MainLayout pageProfile={true}/>,\n        children: [\n            { path: '/:id', element: <UserProfilePage userLogged={isLoggedIn} pagePath=\"profile_feed\"/> },\n            { path: '/channel/:id', element: <UserProfilePage userLogged={isLoggedIn} pagePath=\"profile_channel\"/> },\n            { path: '/saved/:id', element: <UserProfilePage userLogged={isLoggedIn}  pagePath=\"profile_saved\"/> }\n        ]\n    },\n\n];\n\n\nexport default routes;","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Chat.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/Popup.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/Stepper.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/GlobalStyle/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/serviceWorker.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/app/store.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/features/userSlice.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/icons/Facebook.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/icons/Google.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Page.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Upload/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Item/index.js",["294"],"import React, {useEffect, useState} from \"react\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {Badge, MenuItem, MenuList, Popover, Popper} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Link} from \"react-router-dom\";\nimport ExploreTwoToneIcon from '@material-ui/icons/ExploreTwoTone';\nimport NotificationsActiveTwoToneIcon from '@material-ui/icons/NotificationsActiveTwoTone';\nimport { makeStyles} from \"@material-ui/core/styles\";\nimport EmailTwoToneIcon from '@material-ui/icons/EmailTwoTone';\n// import {useAuthState} from \"react-firebase-hooks/auth\";\nimport {auth, db} from \"../../../firebase\";\nimport HomeTwoToneIcon from '@material-ui/icons/HomeTwoTone';\nimport Divider from \"@material-ui/core/Divider\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {\n    User as UserIcon,\n    Bookmark as BookmarkIcon,\n    Settings as SettingIcon,\n    LogOut as LogoutIcon\n\n} from 'react-feather';\n\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        height: \"28px\",\n        width: \"28px\",\n        color: \"#00000099\"\n    },\n    active: {\n        color: \"#3f51b5\",\n    },\n    popupNoti: {\n        minHeight: 300,\n        zIndex: 99999\n    },\n    userPopover: {\n        width: \"400px\"\n    },\n    iconBtn: {\n        marginRight: theme.spacing(1),\n        color: \"#050505\",\n    },\n    iconBtnCircle: {\n        marginRight: theme.spacing(1),\n        color: \"#050505\",\n        border: \"1px solid\",\n        borderRadius: \"50%\",\n    }\n}));\n\n\nfunction MenuHeader() {\n    const [mess, setMess] = useState(0);\n\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    const [anchorElNotice, setAnchorElNotice] = useState(null);\n    const openNotice = Boolean(anchorElNotice);\n    const idNotice = open ? 'simple-popper' : undefined;\n\n    const [user] = useAuthState(auth);\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleNotice = (event) => {\n        setAnchorElNotice(anchorElNotice ? null : event.currentTarget);\n    }\n    const handleCloseNotice = () => {\n        setAnchorElNotice(null);\n    };\n\n\n    useEffect(() => {\n        var query = db.collection(\"conversations\");\n        user && query\n            .where('users', 'array-contains', user.email)\n            .where('isSeen', '==', false)\n            .where('lastSend', '!=', user.email)\n            .onSnapshot((snapshot) => {\n                setMess(snapshot.size);\n            });\n    }, [user])\n\n\n    return(\n        <div className=\"menuHeader\">\n            <div className=\"menuIcon\">\n                <Link to=\"/\">\n                    <IconButton color=\"inherit\">\n                        <Badge color=\"secondary\">\n                            <HomeTwoToneIcon className={classes.icon} />\n                        </Badge>\n                    </IconButton>\n                </Link>\n\n                <Link to=\"/explore\">\n                    <IconButton color=\"inherit\" >\n                        <Badge color=\"secondary\">\n                            <ExploreTwoToneIcon className={classes.icon} />\n                        </Badge>\n                    </IconButton>\n                </Link>\n\n                <Link to={{\n                    pathname: `/messages`,\n                    state: { users: user }\n                }}>\n                    <IconButton aria-label=\"4 new messages\" color=\"inherit\" >\n                        <Badge badgeContent={mess} max={20} color=\"secondary\">\n                            <EmailTwoToneIcon className={classes.icon}/>\n                        </Badge>\n                    </IconButton>\n                </Link>\n\n                <IconButton aria-label=\"11 new notifications\" color=\"inherit\" onClick={handleNotice}>\n                    <Badge badgeContent={24} max={20} color=\"secondary\">\n                        <NotificationsActiveTwoToneIcon className={classes.icon}/>\n                    </Badge>\n                </IconButton>\n\n                <Popover\n                    disableScrollLock\n                    id={idNotice}\n                    open={openNotice}\n                    anchorEl={anchorElNotice}\n                    onClose={handleCloseNotice}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                >\n                </Popover>\n\n                <IconButton onClick={handleClick}>\n                    <Avatar alt={user?.displayName} src={user?.photoURL} />\n                </IconButton>\n                <Popover\n                    className={classes.userPopover}\n                    disableScrollLock\n                    id={id}\n                    open={open}\n                    anchorEl={anchorEl}\n                    onClose={handleClose}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                >\n                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" style={{padding: \"0\", minWidth: 130}} >\n                        <Link to={{pathname:`/profile/${user?.uid}`}} >\n                            <MenuItem onClick={handleClose}>\n                                <UserIcon\n                                    className={classes.iconBtnCircle}\n                                    size=\"15\"\n                                />\n                                Profile\n                            </MenuItem>\n                        </Link>\n                        <Link to={{pathname:`/profile/saved/${user?.uid}`}} >\n                            <MenuItem onClick={handleClose}>\n                                <BookmarkIcon\n                                    className={classes.iconBtn}\n                                    size=\"15\"\n                                />\n                                Save\n                            </MenuItem>\n                        </Link>\n                        <Link to={{pathname:`/account/edit`}} >\n                            <MenuItem onClick={handleClose}>\n                                <SettingIcon\n                                    className={classes.iconBtn}\n                                    size=\"15\"\n                                />\n                                Setting\n                            </MenuItem>\n                        </Link>\n                        <Divider />\n                        <MenuItem onClick={() => auth.signOut()}>\n                            <LogoutIcon\n                                className={classes.iconBtn}\n                                size=\"15\"\n                            />\n                            Logout\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n\n        </div>\n    )\n}\n\nexport default MenuHeader\n\n","/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Search/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/Logo/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Header/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/MediaViewer/index.js",["295","296","297"],"import React, {useEffect, useState} from \"react\";\nimport {Button, CardContent, Collapse, IconButton, Modal, TextField} from \"@material-ui/core\";\nimport CancelTwoToneIcon from \"@material-ui/icons/CancelTwoTone\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n// import {db} from \"../../firebase\";\n// import ListComment from \"../Posts/Comments\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {Link} from \"react-router-dom\";\n// import dayjs from \"dayjs\";\n// import Card from \"@material-ui/core/Card\";\nimport Divider from '@material-ui/core/Divider';\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport {ToggleButton} from \"@material-ui/lab\";\nimport FavoriteRoundedIcon from \"@material-ui/icons/FavoriteRounded\";\nimport FavoriteBorderTwoToneIcon from \"@material-ui/icons/FavoriteBorderTwoTone\";\nimport ModeCommentOutlinedIcon from \"@material-ui/icons/ModeCommentOutlined\";\nimport BookmarkBorderOutlinedIcon from \"@material-ui/icons/BookmarkBorderOutlined\";\n// import clsx from \"clsx\";\n// import ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport clsx from \"clsx\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\n\nimport {auth, db} from \"../../firebase\";\nimport firebase from \"firebase\";\nimport ListComment from \"../Comments\";\nimport handleLikePost from \"../../utils/handleLikePost\";\nimport handleDislikePost from \"../../utils/handleDislikePost\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport BookmarkRoundedIcon from \"@material-ui/icons/BookmarkRounded\";\nimport handleSavePost from \"../../utils/handleSavePost\";\nimport handleUnsavedPost from \"../../utils/handleUnsavedPost\";\n\n\n\nfunction getModalStyle() {\n    const top = 50 ;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        fontSize: \"0.875rem\"\n    },\n    label: {\n        paddingLeft: \"10px\"\n    },\n    paper: {\n        position: 'absolute',\n        maxWidth: 950,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        \"&:focus\": {\n            outline: \"none\"\n        },\n        maxHeight: \"600px\",\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        overflow: \"hidden\"\n    },\n    modalHeader: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    buttonClose: {\n        position: \"fixed\",\n        right: \"0\",\n        top: \"0\"\n    },\n    imgHolder: {\n        width: \"600px\",\n        paddingBottom: \"100%\",\n        position: \"relative\",\n        overflow : \"hidden\",\n    },\n    img: {\n        objectFit: \"contain\",\n        height: \"100%\",\n        left: \"0\",\n        position: \"absolute\",\n        top: \"0\",\n        width: \"100%\",\n    },\n    leftPanel: {\n        height: \"100%\",\n        maxWidth: \"600px\"\n    },\n    rightPanel: {\n        width: \"335px\",\n        height: \"100%\",\n        overflowY: \"scroll\",\n        position: \"relative\"\n    },\n    captionText: {\n        whiteSpace: \"pre-line\",\n        lineHeight: \"26px\",\n\n    },\n    modalBody: {\n        height: \"auto\"\n    },\n    displayLike: {\n        padding: \"0 0 20px 20px\",\n    },\n    likeButton: {\n        border: \"0\",\n        backgroundColor: \"none\",\n        borderRadius: \"50%\",\n        '&:hover': {\n            color: 'red',\n        }\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    paragraph: {\n        lineHeight: \"26px\",\n        textAlign: \"justify\",\n        whiteSpace: \"pre-line\",\n        fontSize: \"0.875rem\"\n    },\n    paragraphHead: {\n        fontWeight: \"600\",\n        fontSize: \"0.875rem\",\n        marginBottom: \"10px\",\n        padding: \"5px 0\",\n        textTransform: \"uppercase\",\n        borderBottom : \"1px solid #000\"\n    },\n    selected: {\n        backgroundColor: \"unset !important\"\n    },\n    commentContainer: {\n        marginTop: \"auto\",\n        padding: \"10px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n    },\n    cmtButton: {\n\n    },\n    cmtButtonLabel: {\n        fontWeight: \"bold\",\n        textTransform: \"capitalize\",\n        fontSize: \"14px\"\n    },\n    direction: {\n        minHeight: \"auto\"\n    }\n}));\n\nfunction MediaViewer(props){\n\n    const classes = useStyles();\n    const [modalStyle] = useState(getModalStyle);\n    const [selected, setSelected] = useState(false);\n    const [expanded, setExpanded] = useState(true);\n    const [user] = useAuthState(auth);\n    const postRef = db.collection('posts').doc(props.id);\n    const authUserRef = user && db.collection(\"users\").doc(user.uid);\n\n    const [postSnapshot] = useDocument(postRef);\n    const [saveSelected, setSaveSelected] = useState(false);\n\n    const [comments, setComments] = useState([]);\n    const [comment, setComment] = useState('');\n\n    let likeCount = 0\n    if(typeof postSnapshot?.data()?.likeBy !== 'undefined'){\n        likeCount = postSnapshot.data().likeBy.length;\n    }\n\n\n    dayjs.extend(relativeTime);\n    let postCreated  = null;\n\n    if(props?.post?.timestamp){\n        postCreated = new Date(props?.post?.timestamp.seconds * 1000).toLocaleString();\n    }\n\n    const postComment = (event) => {\n        event.preventDefault();\n        if(comment){\n            db.collection(\"posts\").doc(props.id).collection(\"comments\").add({\n                text: comment,\n                user: db.doc('users/' + user.uid),\n                uid: user.uid,\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            });\n        }\n        setComment('');\n    }\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    // Handle like and dislike action\n    const likePost = () => {\n        setSelected(true);\n        handleLikePost(postRef, user.uid);\n    }\n\n    // Handle dislike post\n    const dislikePost = () => {\n        setSelected(false);\n        handleDislikePost(postRef, user.uid)\n    }\n\n\n    const savePost = () => {\n        // Save post id to user data, and push to post data\n        setSaveSelected(true);\n        handleSavePost(postRef, authUserRef, user.uid, props.id);\n    }\n\n    const unsavedPost = () => {\n        // Save post id to user data, and push to post data\n        setSaveSelected(false);\n        handleUnsavedPost(postRef, authUserRef, user.uid, props.id);\n    }\n\n\n\n    let media;\n\n    if(props.post.mediaType === \"video/mp4\"){\n        media = <div className={classes.imgHolder}>\n            <video controls className={classes.img} muted=\"muted\" onClick={e => e.target.play()}>\n                <source src={props.post.mediaUrl} type=\"video/mp4\"/>\n            </video>\n        </div>\n    } else{\n        media = <div className={classes.imgHolder}>\n            <img src={props.post.mediaUrl} alt=\"\" className={classes.img}/>\n        </div>\n    }\n\n\n\n\n    useEffect(() => {\n        if(props.id && user) {\n\n            if(typeof props.post.likeBy !== 'undefined' && props.post.likeBy.includes(user.uid)){\n                setSelected(true);\n            }\n\n            if(typeof props.post.saveBy !== 'undefined' && props.post.saveBy.includes(user.uid)){\n                setSaveSelected(true);\n            }\n        }\n\n        // get comments\n        return postRef\n            .collection(\"comments\")\n            .orderBy('timestamp', \"desc\")\n            .limit(5)\n            .onSnapshot((snapshot ) => {\n                // var userProfile = {};\n                setComments(\n                    snapshot.docs.map((doc => ({\n                        id: doc.id,\n                        comment: doc.data(),\n                        cmtAuthor: doc.data().user.get().then( cmtAuthor => {\n                            return cmtAuthor.data();\n                            // return Object.assign(userProfile, author.data());\n                        })\n                    })))\n                );\n            })\n\n    }, [props.id])\n\n    return (\n        <Modal\n            className={classes.root}\n            open={props.open}\n            onClose={props.handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n        >\n            <div style={modalStyle} className={classes.paper}>\n                <div className={classes.leftPanel}>\n                    {media}\n                </div>\n                <Divider orientation=\"vertical\" flexItem />\n                <div className={classes.rightPanel}>\n                    <div className=\"review__data\">\n                        <div className={classes.modalHeader}>\n                            <CardHeader\n                                avatar={\n                                    <Avatar alt={props.postAuthor?.displayName} src={props.postAuthor.photoURL}/>\n                                }\n                                title={\n                                    <Link to={`/profile/${props.postAuthor?.uid}`}>{props.postAuthor?.displayName}</Link>\n                                }\n                                subheader={dayjs(postCreated).fromNow()}\n                            />\n                            <div className={classes.buttonClose}>\n                                <IconButton aria-label=\"Cancel\" color=\"inherit\" onClick={props.handleClose} >\n                                    <CancelTwoToneIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <Divider />\n                        <div className={classes.modalBody}>\n                            <div className=\"post__caption\">\n                                <Link to={`/profile/${props.postAuthor?.uid}`} className=\"post__user\">{props.postAuthor?.displayName}</Link>\n                                <span className={classes.captionText}>{props.post.caption}</span>\n                            </div>\n                        </div>\n                        <Divider />\n                        {/* Card action */}\n                        <CardActions disableSpacing>\n                            {\n                                user ? (\n                                    <div className=\"post__button\">\n                                        <div className=\"action__like\">\n                                            <ToggleButton\n                                                value=\"check\"\n                                                selected={selected}\n                                                classes={{\n                                                    root: classes.likeButton,\n                                                    selected: classes.selected,\n                                                }}\n                                                onClick={() => {\n                                                    if(!selected) likePost();\n                                                    else dislikePost();\n                                                }}\n                                            >\n                                                {\n                                                    selected ? <FavoriteRoundedIcon style={{color: \"red\"}}/> : <FavoriteBorderTwoToneIcon />\n                                                }\n                                            </ToggleButton>\n\n                                        </div>\n                                        <div className=\"action__comment\">\n                                            <IconButton aria-label=\"comment\">\n                                                <ModeCommentOutlinedIcon/>\n                                            </IconButton>\n                                        </div>\n                                        <div className=\"action__share\">\n                                            <ToggleButton\n                                                value=\"check\"\n                                                selected={saveSelected}\n                                                // className={classes.likeButton}\n                                                classes={{\n                                                    root: classes.likeButton,\n                                                    selected: classes.selected,\n                                                }}\n                                                onClick={() => {\n                                                    if(!saveSelected) savePost();\n                                                    else unsavedPost();\n                                                }}\n                                            >\n                                                {\n                                                    saveSelected ? <BookmarkRoundedIcon style={{color: \"black\"}}/> : <BookmarkBorderOutlinedIcon />\n                                                }\n                                            </ToggleButton>\n                                        </div>\n                                    </div>\n                                ) : null\n\n                            }\n\n                            {\n                                props?.post?.data ? (\n                                    <div className=\"action__expand\">\n                                        <IconButton\n                                            className={clsx(classes.expand, {\n                                                [classes.expandOpen]: expanded,\n                                            })}\n                                            onClick={handleExpandClick}\n                                            aria-expanded={expanded}\n                                            aria-label=\"show more\"\n                                        >\n                                            <ExpandMoreIcon />\n                                        </IconButton>\n                                    </div>\n                                ) : null\n                            }\n\n\n                        </CardActions>\n\n                        {/* Like count */}\n                        {\n                            likeCount > 0 ? (\n                                <div className={classes.displayLike}>\n                                    <span><b>{likeCount.toLocaleString()} Likes</b></span>\n\n                                </div>\n                            ) : null\n                        }\n                        <Divider />\n\n                        {/*Posts*/}\n                        {\n                            props?.post?.data ? (\n                                <Collapse in={expanded} timeout=\"auto\" unmountOnExit style={{minHeight: \"auto\"}}>\n                                    <>\n                                        <CardContent className=\"recipe_layout__content-left\">\n                                            <div className=\"recipe_layout__facts\">\n                                                <div className=\"recipe-facts__info\">\n                                                    <div className=\"recipe-facts__details recipe-facts__prepare\"><span\n                                                        className=\"recipe-facts__title\">Prepare in:</span> <span>{props?.post?.data?.prepTime} {props?.post?.data?.prepUnit}</span></div>\n                                                    <div className=\"recipe-facts__details recipe-facts__cooking\"><span\n                                                        className=\"recipe-facts__title\">Cook in:</span> <a\n                                                        className=\"theme-color\">{props?.post?.data?.cookTime} {props?.post?.data?.cookUnit}</a></div>\n                                                </div>\n                                                <div className=\"recipe-facts__info\">\n                                                    <div className=\"recipe-facts__details recipe-facts__servings\"><span\n                                                        className=\"recipe-facts__title\">Serves:</span> <a\n                                                        className=\"theme-color\">{props?.post?.data?.serve}</a></div>\n                                                </div>\n                                            </div>\n                                            <Typography paragraph className={classes.paragraphHead}>Ingredients:</Typography>\n                                            <Typography paragraph className={classes.paragraph}>{props?.post?.data?.ingredient}</Typography>\n                                        </CardContent>\n                                        <CardContent className=\"recipe_layout__content-right\">\n                                            <Typography paragraph className={classes.paragraphHead}>Direction:</Typography>\n                                            <Typography paragraph className={classes.paragraph}>{props?.post?.data?.direction}</Typography>\n                                        </CardContent>\n                                    </>\n                                    <Divider />\n                                </Collapse>\n                            ) : null\n                        }\n\n                        {/*<ListComment comments={comments} />*/}\n                        <ListComment comments={comments} />\n\n                        <div className=\"commentContainer commentViewer \">\n                            <Divider />\n                            {\n                                user &&  (\n                                    <form onSubmit={postComment} >\n                                        <TextField\n                                            className=\"comment__input\"\n                                            placeholder=\"Leave a comment ... \"\n                                            value={comment}\n                                            onChange={event => setComment(event.target.value)}\n                                            InputProps={{ disableUnderline: true}}\n                                        />\n                                        <Button\n                                            variant=\"contained\"\n                                            disabled={!comment}\n                                            onClick={postComment}\n                                            classes={{\n                                                root: classes.cmtButton,\n                                                label: classes.cmtButtonLabel\n                                            }}\n                                        >\n                                            Post\n                                        </Button>\n                                    </form>\n                                )\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Modal>\n    )\n}\nexport default MediaViewer","/home/miizoo/Desktop/ReactJS/livefood/src/views/MessengerPage.js",["298","299","300"],"import React, {useEffect, useState} from \"react\";\n\nimport \"../components/Messenger/Messenger.css\";\nimport SidebarChat from \"../components/Messenger/Sidebar/SidebarChat\";\nimport Chat from \"../components/Messenger/Chat\";\nimport Page from \"../components/Page\";\nimport {useParams} from \"react-router\";\n\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ControlPointOutlinedIcon from \"@material-ui/icons/ControlPointOutlined\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport CreateNewChat from \"../components/Messenger/Sidebar/CreateNewChat\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {auth, db} from \"../firebase\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {List} from \"@material-ui/core\";\nimport {useDispatch} from \"react-redux\";\nimport {removeChat} from \"../features/chatSlice\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    header:{\n        paddingLeft: \"5px\"\n    },\n    root: {\n        backgroundColor: theme.palette.background.default,\n        display: 'flex',\n        height: '100%',\n        overflow: 'hidden',\n        width: '100%'\n    },\n    list: {\n        padding: 0\n    }\n}));\n\nfunction PageMessenger(props) {\n    const dispatch = useDispatch();\n    let { id } = useParams();\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const userChatRef = props.userLogged && db.collection(\"conversations\").where('users', 'array-contains', props.userLogged.email).orderBy('lastUpdate', 'desc');\n    // const userChatRef = db.collection(\"conversations\").where('users', 'array-contains', user.email)\n\n    const [chatsSnapshot] = useCollection(userChatRef);\n\n\n    if(typeof id === 'undefined'){\n        dispatch(removeChat());\n    }\n\n    const handleOpen = () => {\n        setOpen(true);\n    }\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    return(\n        <Page\n            title=\"Messenger | LiveFood\"\n            className=\"app__bodyContainer\"\n        >\n            <div className=\"messenger\">\n                <section className=\"messenger__navigation\">\n                    <div className=\"navigation__header padding-10-20 messenger__header\" >\n                        <h2 className={classes.header}>Message</h2>\n                        <IconButton aria-label=\"comment\" onClick={handleOpen}>\n                            <ControlPointOutlinedIcon />\n                        </IconButton>\n                    </div>\n                    <div className=\"messenger__inbox\">\n                        <List className={classes.list}>\n                        {\n                            chatsSnapshot?.docs.map((chat) => (\n                                <SidebarChat\n                                    key={chat.id}\n                                    id={chat.id}\n                                    users={chat.data().users}\n                                    sender={chat.data().lastSend}\n                                    status={chat.data().isSeen}\n                                />\n                            ))\n                        }\n                        </List>\n                    </div>\n                </section>\n\n                <Chat id={id}/>\n            </div>\n\n\n            {/*  Create chat  */}\n            <CreateNewChat open={open} handleClose={handleClose} user={props.userLogged}/>\n        </Page>\n    )\n}\n\nexport default PageMessenger","/home/miizoo/Desktop/ReactJS/livefood/src/views/HomePage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/index.js",["301"],"import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {red} from \"@material-ui/core/colors\";\nimport PostComment from \"./Comment\";\n\nconst useStyles = makeStyles((theme) => ({\n\n    displayCmt: {\n        padding: \"10px 20px\",\n        textAlign: \"right\",\n        color: \"#8e8e8e\"\n    }\n\n}));\n\n\nfunction Comment(props){\n    const classes = useStyles();\n    let count = 0;\n\n    props.comments.map((comment) => {\n        return count++\n    })\n\n    return(\n        <div className=\"listComments\">\n            {\n                count > 0 && (\n                    <h5 className={classes.displayCmt}>Displaying {count} comments</h5>\n                )\n            }\n            {\n                props.comments.slice(0, 5).map(({id, comment, cmtAuthor}) => (\n                    <PostComment\n                        key={id}\n                        comment={comment}\n                        cmtAuthor={cmtAuthor}\n                    />\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Comment","/home/miizoo/Desktop/ReactJS/livefood/src/components/Comments/Comment.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExploreItem.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/NotFoundPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/auth/SignUpPage.js",["302"],"import React, {useEffect, useState} from \"react\";\nimport {auth, provider } from \"../../firebase\";\nimport {Button, TextField} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Link, Navigate} from \"react-router-dom\";\nimport checkFirebaseAuth from \"../../CustomHook/FirebaseAuth\";\nimport {useAuthState} from \"react-firebase-hooks/auth\"; //import Redirect first\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        padding: \"13px\",\n        fontSize: \"18px\",\n        fontWeight: \"bold\",\n        margin: \"16px 0\",\n        backgroundColor: \"#006eb1\",\n        textTransform: \"capitalize\",\n        '&:hover': {\n            backgroundColor: \"#015081\",\n        },\n    },\n    divider: {\n        margin: \"16px 0\",\n        borderTop: \"1px solid #b6b6b6\",\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    logo: {\n        textAlign: \"center\",\n        padding: \"10px 0\",\n    },\n    SignUpHolder: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    SignUp: {\n        padding: \"0 10px\",\n        fontWeight: \"bold\",\n        color: \"#0095f6\"\n    },\n    slogan: {\n        color: \"#8e8e8e\",\n        fontSize: \"17px\",\n        fontWeight: \"600\",\n        lineHeight: \"20px\",\n        margin: \"0 40px 10px\",\n        textAlign: \"center\"\n    },\n    googleSignin: {\n        padding: \"13px\",\n        fontSize: \"18px\",\n        fontWeight: \"bold\",\n        margin: \"16px 0\",\n        backgroundColor: \"#0095f6\",\n        textTransform: \"capitalize\",\n        '&:hover': {\n            backgroundColor: \"#0171b8\",\n        },\n    }\n\n}));\n\n\nfunction PageLogin() {\n    const classes = useStyles();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [username, setUsername] = useState('');\n    const [user] = useAuthState(auth);\n\n    const signUp = (event) => {\n        auth.createUserWithEmailAndPassword(email, password)\n            .then((authUser) => {\n                return authUser.user.updateProfile({\n                    displayName: username\n                }).then(function (){\n                    checkFirebaseAuth(authUser.user);\n                })\n            })\n            .catch((error) => alert(error.message));\n    }\n\n    const signUpGoogle = (event) => {\n        event.preventDefault();\n        auth.signInWithPopup(provider).then((result) => {\n            checkFirebaseAuth(result.user);\n        }).catch((error) =>{\n            alert(error.message)\n        })\n    }\n\n\n    if(user){\n        return <Navigate to=\"/\" />\n    }\n\n    return(\n        <div className=\"login__container\">\n            <div className=\"login__block\">\n                <div className=\"login__holder login__article\">\n                    <div className=\"login__authForm\">\n                        <div className={classes.logo}>\n                            <img className=\"header__imageLogo\" alt=\"LiveFood\"\n                                 src=\"/static/images/brand.png\"\n                            />\n                        </div>\n                        <h2 className={classes.slogan}>Sign up to see photos and videos from your friends.</h2>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.googleSignin}\n                            onClick={signUpGoogle}\n                        >\n                            Sign up with Google\n                        </Button>\n\n                        <div className={classes.divider} />\n\n                        <div className={classes.form}>\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                label=\"Username\"\n                                id=\"username\"\n                                placeholder=\"Username\"\n                                value={username}\n                                name=\"username\"\n                                autoComplete=\"false\"\n                                autoFocus\n                                onChange={(e) => setUsername(e.target.value)}\n\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                label=\"Email address\"\n                                id=\"email\"\n                                placeholder=\"Email address\"\n                                value={email}\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                autoFocus\n                                onChange={(e) => setEmail(e.target.value)}\n\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                label=\"Password\"\n                                fullWidth\n                                name=\"password\"\n                                value={password}\n                                placeholder=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                onChange={(e) => setPassword(e.target.value)}\n\n                            />\n\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.button}\n                                onClick={signUp}\n                            >\n                                Sign up\n                            </Button>\n                        </div>\n                        <div className={classes.divider} />\n                        <div className={classes.SignUpHolder}>\n                            <span>Have an account ?</span>\n                            <Link to=\"/login\" className={classes.SignUp}>Log in</Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default PageLogin;","/home/miizoo/Desktop/ReactJS/livefood/src/views/auth/SignInPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/account/UserProfilePage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/LeftSideBar/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/LeftSideBar/NavItem.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/SideBar/RightSideBar/index.js",["303","304","305","306","307","308","309"],"import React, {useEffect, useState} from \"react\";\nimport '../RightSideBar.css';\n\n\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreHorizOutlinedIcon from '@material-ui/icons/MoreHorizOutlined';\nimport Avatar from \"@material-ui/core/Avatar\";\n// import dayjs from \"dayjs\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport {Button, Hidden, makeStyles} from \"@material-ui/core\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {auth, db} from \"../../../firebase\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport {Link} from \"react-router-dom\";\nimport handleUserFollow from \"../../../utils/handleUserFollow\";\n\n// const useStyles = makeStyles((theme) => ({\n//     root: {\n//         width: '100%',\n//         maxWidth: 290,\n//         backgroundColor: theme.palette.background.paper,\n//     },\n//     nested: {\n//         paddingLeft: theme.spacing(4),\n//     },\n// }));\n\n\nfunction RightSideBar(props) {\n    // const classes = useStyles();\n    const [users, setUsers] = useState([])\n\n    const userRef = props?.userLogged?.uid && db.collection('users').doc(props.userLogged.uid);\n    const [userSnapshot] = useDocument(userRef);\n\n\n\n    // List user\n    useEffect(() => {\n        var followingList;\n\n        if(typeof userSnapshot?.data()?.following !== 'undefined' && userSnapshot?.data()?.following.length >= 0){\n            followingList = userSnapshot.data().following\n            props.userLogged.uid && followingList.push(props.userLogged.uid);\n            return db.collection(\"users\")\n                .where('uid' ,'not-in' , followingList )\n                .limit(4)\n                .get().then(snapshot => {\n                    setUsers(snapshot.docs.map(doc => ({\n                        id: doc.id,\n                        opponent: doc.data(),\n                    })));\n                })\n        }else{\n            return db.collection(\"users\")\n                .where('uid' ,'!=' , props?.userLogged?.uid )\n                .limit(4)\n                .get().then(snapshot => {\n                    setUsers(snapshot.docs.map(doc => ({\n                        id: doc.id,\n                        opponent: doc.data(),\n                    })));\n                })\n        }\n    }, [userSnapshot])\n\n\n\n    return(\n        <Hidden mdDown>\n            <div className=\"app__rightSideBar\">\n                <div className=\"sideBar__container\">\n                    {/*<div className=\"trending__container sideBar__containerBlock\">*/}\n                    {/*    <div className=\"trending__header bottomDivider padding-10-20\">*/}\n                    {/*        <h2>What's fresh?</h2>*/}\n                    {/*        <IconButton aria-label=\"comment\" >*/}\n                    {/*            <SettingsOutlinedIcon />*/}\n                    {/*        </IconButton>*/}\n                    {/*    </div>*/}\n                    {/*    <div className=\"trending__content padding-10-20 bottomDivider\">*/}\n                    {/*        <div className=\"trending__contentBlock\">*/}\n                    {/*            <div className=\"trending__header\">*/}\n                    {/*                <h4>Trending in VietNam</h4>*/}\n                    {/*                <IconButton aria-label=\"comment\" >*/}\n                    {/*                    <MoreHorizOutlinedIcon />*/}\n                    {/*                </IconButton>*/}\n                    {/*            </div>*/}\n                    {/*            <div className=\"trending__name\">*/}\n                    {/*                <h3>Healthy</h3>*/}\n                    {/*            </div>*/}\n                    {/*        </div>*/}\n                    {/*    </div>*/}\n                    {/*    <div className=\"trending__content padding-10-20 bottomDivider\">*/}\n                    {/*        <div className=\"trending__contentBlock\">*/}\n                    {/*            <div className=\"trending__header\">*/}\n                    {/*                <h4>Trending in VietNam</h4>*/}\n                    {/*                <IconButton aria-label=\"comment\" >*/}\n                    {/*                    <MoreHorizOutlinedIcon />*/}\n                    {/*                </IconButton>*/}\n                    {/*            </div>*/}\n                    {/*            <div className=\"trending__name\">*/}\n                    {/*                <h3>Healthy</h3>*/}\n                    {/*            </div>*/}\n                    {/*        </div>*/}\n                    {/*    </div>*/}\n                    {/*    <div className=\"trending__content padding-10-20 bottomDivider\">*/}\n                    {/*        <div className=\"trending__contentBlock\">*/}\n                    {/*            <div className=\"trending__header\">*/}\n                    {/*                <h4>Trending in VietNam</h4>*/}\n                    {/*                <IconButton aria-label=\"comment\" >*/}\n                    {/*                    <MoreHorizOutlinedIcon />*/}\n                    {/*                </IconButton>*/}\n                    {/*            </div>*/}\n                    {/*            <div className=\"trending__name\">*/}\n                    {/*                <h3>Healthy</h3>*/}\n                    {/*            </div>*/}\n                    {/*        </div>*/}\n                    {/*    </div>*/}\n                    {/*    <div role=\"button\" className=\"padding-20 show-more\">*/}\n                    {/*        <span className=\"\">Show more</span>*/}\n                    {/*    </div>*/}\n                    {/*</div>*/}\n\n                    <div className=\"suggest__container sideBar__containerBlock\">\n                        <div className=\"suggest__header padding-20 bottomDivider\">\n                            <h2>Who to follow</h2>\n                        </div>\n                        {\n                            users && users?.map(({id, opponent}) => (\n                                <div key={id} className=\"suggest__content  bottomDivider\">\n                                    <CardHeader className=\"suggest__user\"\n                                                avatar={\n                                                    <Avatar aria-label={opponent.displayName} src={opponent.photoURL} />\n                                                }\n                                                title={\n                                                    <Link to={`profile/${opponent.uid}`}>{opponent.displayName}</Link>\n                                                }\n                                                subheader={opponent.fullName}\n                                    />\n\n                                    <Button\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        className=\"followBtn\"\n                                        onClick={() => handleUserFollow(props.userLogged.uid, opponent.uid)}\n                                    >\n                                        Follow\n                                    </Button>\n                                </div>\n                            ))\n                        }\n\n                        <div role=\"button\" className=\"padding-20 show-more\">\n                            <Link to=\"/explore/people\">\n                                <span className=\"\">Show more</span>\n                            </Link>\n\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </Hidden>\n\n\n    )\n}\n\nexport default RightSideBar;","/home/miizoo/Desktop/ReactJS/livefood/src/layouts/MainLayout.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/layouts/DefaultLayout.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/account/EditAccountPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/utils/getRecipientUser.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/ProfileHeader.js",["310","311"],"import React, {useEffect, useState} from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport {Link} from \"react-router-dom\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import {Badge} from \"@material-ui/core\";\n// import ExploreTwoToneIcon from \"@material-ui/icons/ExploreTwoTone\";\n// import {useCollection, useDocument} from \"react-firebase-hooks/firestore\";\nimport {auth, db} from \"../../firebase\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport firebase from \"firebase\";\nimport handleUserFollow from \"../../utils/handleUserFollow\";\nimport handleUserUnfollow from \"../../utils/handleUserUnfollow\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    userPhoto: {\n        width: \"120px\",\n        height: \"120px\"\n    },\n    bioDetails: {\n        marginLeft: \"50px\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        display: \"flex\",\n        alignItems: \"center\"\n    },\n    bioAvt: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        display: \"flex\",\n        alignItems: \"flex-start\",\n        paddingTop: \"10px\"\n    },\n    button: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: \"150px\",\n        color: \"white\",\n        backgroundColor: \"#0095f6\",\n        \"&:hover\": {\n            backgroundColor: \"#0186db\",\n        },\n        marginRight: \"15px\",\n        textTransform: \"capitalize\"\n    },\n    buttonUnfollow: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: \"150px\",\n        color: \"#454444\",\n        // \"&:hover\": {\n        //     backgroundColor: \"#c3d6fa\",\n        // },\n        marginRight: \"15px\",\n        textTransform: \"capitalize\"\n    }\n}));\n\n\nconst ProfileHeader = ({isAuthProfile,user, count,  ...rest}) => {\n    const [userFollowing, setUserFollowing] = useState([]);\n    const [userFollower, setUserFollower] = useState([]);\n\n    // Your data\n    const [authUser] = useAuthState(auth);\n\n    useEffect(() => {\n        if(typeof user?.follower !== 'undefined'){\n            setUserFollower(user.follower);\n        }\n        if(typeof user?.following !== 'undefined'){\n            setUserFollowing(user.following);\n        }\n    }, [user])\n\n    // const checkOpponentFollowYou = (userFollowing, uid) => {\n    //     let rs = false;\n    //     if(typeof userFollowing !== 'undefined' ){\n    //         rs = userFollowing.includes(uid);\n    //     }\n    //     return rs;\n    // }\n\n\n    // Check opponent follower to find you\n    const checkFollowed = (userFollowerList, uid) => {\n        let rs = false;\n        if(typeof userFollowerList !== 'undefined' ){\n            rs = userFollowerList.includes(uid);\n        }\n        return rs;\n    }\n\n\n    const classes = useStyles();\n    return (\n        <div className=\"profile__header\">\n            <div className=\"profile__bio\">\n                <div className={classes.bioAvt}>\n                    {\n                        user? (\n                                <Avatar alt={user?.displayName} src={user?.photoURL} className={classes.userPhoto}/>\n                        ): (\n                            <Skeleton animation=\"wave\" variant=\"circle\" width={120} height={120} />\n                        )\n                    }\n\n                </div>\n                <div className={classes.bioDetails}>\n                    <div className=\"share-title-container\">\n                        {/* User bio */}\n                        <h2 className=\"share-title\">{user?.displayName}</h2>\n                        <h1 className=\"share-sub-title\">{user?.fullName ?? ''}</h1>\n                        {\n                            isAuthProfile ? (\n                                <div className=\"share-follow-container\">\n                                    {/* Checking if followed */}\n                                    <Link to=\"/account/edit\">\n                                        <Button\n                                            variant=\"contained\"\n                                            className={classes.button}\n                                        >\n                                            Edit profile\n                                        </Button>\n                                    </Link>\n                                </div>\n                            ) : (\n                                authUser ? (\n                                    <div className=\"share-follow-container\">\n                                        {/* Checking if followed */}\n                                        {\n                                            checkFollowed(userFollower, authUser.uid) ? (\n                                                <Button\n                                                    variant=\"outlined\"\n                                                    className={classes.buttonUnfollow}\n                                                    onClick={() => handleUserUnfollow(authUser.uid, user.uid)}\n                                                >\n                                                    Unfollow\n                                                </Button>\n                                            ) : (\n                                                    <Button\n                                                        variant=\"contained\"\n                                                        className={classes.button}\n                                                        onClick={() => handleUserFollow(authUser.uid, user.uid)}\n                                                    >\n                                                        Follow\n                                                    </Button>\n                                                )\n\n                                        }\n                                        <Button\n                                            variant=\"contained\"\n                                            className={classes.button}\n                                        >\n                                            Message\n                                        </Button>\n                                    </div>\n                                ) : null\n                            )\n                        }\n\n                        {\n                            user?.bio ? (\n                                <h2 className=\"share-desc mt10\">\n                                    {user.bio}\n                                </h2>\n                            ) : null\n                        }\n\n                        {\n                            user?.profileLink ? (\n                                    <div className=\"share-links\">\n                                        <a href={user.profileLink}>{user.profileLink}</a>\n                                    </div>\n                            ) : null\n                        }\n\n                        {/* Count info */}\n                        <h2 className=\"count-infos\">\n                            <div className=\"number\"><strong title=\"Likes\">{ count ?? '0'}</strong><span\n                                className=\"unit\">Post</span></div>\n                            <div className=\"number\"><strong title=\"Following\">{userFollowing.length}</strong><span\n                                className=\"unit\">Following</span></div>\n                            <div className=\"number\"><strong title=\"Followers\">{userFollower.length}</strong><span\n                                className=\"unit\">Followers</span></div>\n                        </h2>\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default ProfileHeader","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/AccountNavBar.js",["312","313"],"import React from \"react\";\nimport NavItem from \"../SideBar/LeftSideBar/NavItem\";\nimport {Button, List, ListItem} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {NavLink as RouterLink} from \"react-router-dom\";\nimport {Users as UsersIcon} from \"react-feather\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    list: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: \"0\"\n    },\n    item: {\n        display: 'flex',\n        paddingTop: 0,\n        paddingBottom: 0,\n        borderBottom: \"1px solid rgb(235, 238, 240)\",\n\n    },\n    button: {\n        color: theme.palette.text.secondary,\n        fontWeight: theme.typography.fontWeightMedium,\n        justifyContent: 'flex-start',\n        letterSpacing: 0,\n        padding: '15px',\n        textTransform: 'none',\n        width: '100%',\n    },\n    icon: {\n        marginRight: theme.spacing(1),\n        color: \"#050505\"\n    },\n    title: {\n        fontWeight: \"500\",\n        fontSize: \"1.1rem\",\n        paddingLeft: \"15px\",\n        color: \"#050505\"\n    },\n    active: {\n        color: theme.palette.primary.main,\n        '& $title': {\n            fontWeight: 600,\n            color: theme.palette.primary.main,\n        },\n        '& $icon': {\n            color: theme.palette.primary.main,\n        }\n    }\n}));\n\n\nconst AccountNavBar = () => {\n    const classes = useStyles();\n\n    return (\n        <List className={classes.list}>\n            <ListItem\n                className={classes.item}\n                disableGutters\n            >\n                <Button\n                    activeClassName={classes.active}\n                    className={classes.button}\n                    component={RouterLink}\n                    to={`/account/edit`}\n                >\n                    <span className={classes.title}>Edit profile</span>\n                </Button>\n            </ListItem>\n\n            <ListItem\n                className={classes.item}\n                disableGutters\n            >\n                <Button\n                    activeClassName={classes.active}\n                    className={classes.button}\n                    component={RouterLink}\n                    to={`/account/password/change`}\n                >\n                    <span className={classes.title}>\n                    Change Password\n                </span>\n                </Button>\n            </ListItem>\n\n            <ListItem\n                className={classes.item}\n                disableGutters\n            >\n                <Button\n                    activeClassName={classes.active}\n                    className={classes.button}\n                    component={RouterLink}\n                    to={`/account/setting/notifications`}\n                >\n                    <span className={classes.title}>\n                    Notifications\n                </span>\n                </Button>\n            </ListItem>\n\n        </List>\n    )\n}\n\nexport default AccountNavBar","/home/miizoo/Desktop/ReactJS/livefood/src/theme/index.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditAccount.js",["314","315","316","317","318"],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Edit/EditPassword.js",["319","320","321","322","323","324"],"import React, {useRef, useState} from \"react\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport {IconButton, Modal} from \"@material-ui/core\";\nimport CancelTwoToneIcon from \"@material-ui/icons/CancelTwoTone\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {auth} from \"../../../firebase\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n        width: 100,\n        height: 100,\n        margin: \"0 20px\",\n    },\n    avatarHolder: {\n        padding: \"16px 32px\"\n    },\n    holder: {\n        display: \"flex\",\n        padding: \"16px\"\n    },\n    changePhoto: {\n        color: \"#0095f6\",\n        padding: 0,\n        textTransform: \"capitalize\"\n    },\n    displayName: {\n        fontSize: 18\n    },\n    label: {\n        flex: \"0 0 25%\",\n        textAlign: \"right\",\n    },\n    input: {\n        paddingLeft: 20,\n        width: \"60%\",\n        float: \"left\"\n    },\n    inputField: {\n        width: \"100%\",\n        padding: \"0 8px\",\n        height: \"32px\",\n        fontSize: \"16px\",\n        color: \"#262626\",\n        border: \"1px solid rgba(var(--ca6,219,219,219),1)\"\n\n    },\n    description: {\n        padding: \"10px 0\"\n    },\n    descriptionText: {\n        textOverflow: \"ellipsis\",\n        textAlign: \"justify\",\n        color: \"#8e8e8e\",\n        fontSize: \"12px\",\n    },\n    inputText: {\n        fontSize: \"16px\",\n        height: 60,\n        padding: \"6px 10px\",\n        resize: \"vertical\",\n        border: \"1px solid rgba(var(--ca6,219,219,219),1)\",\n        width: \"100%\"\n    },\n    submit: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"20px\"\n    },\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 3, 3),\n        borderRadius: \"8px\",\n        maxHeight: \"300px\",\n        \"&:focus\": {\n            outline: \"none\"\n        },\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    modalHeader: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"10px 0 20px 0\",\n    },\n    btnAction: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    buttonClose: {\n        position: \"fixed\",\n        right: \"20px\",\n        top: \"17px\"\n    },\n    btnUpload: {\n        color : \"#0095f6\",\n        minHeight: \"48px\",\n        width : \"100%\",\n        fontWeight: \"bold\"\n    },\n    btnRemove: {\n        color : \"#d8102a\",\n        minHeight: \"48px\",\n        width : \"100%\",\n        fontWeight: \"bold\"\n    }\n}));\n\nconst EditPassword = () => {\n\n    const [user] = useAuthState(auth);\n    const classes = useStyles();\n\n    return(\n        <article className=\"edit_account__content\">\n            <div className={classes.profile}>\n                <CardHeader\n                    className={classes.avatarHolder}\n                    avatar={\n                        user?.uid ? (\n                            <Avatar className={classes.avatar} alt={user.displayName} src={user.photoURL}/>\n                        ):(\n                            <Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />\n                        )\n                    }\n                    title={\n                        user?.uid ? (\n                            <Link to={`profile/${user.uid}`} className={classes.displayName}>{user.displayName}</Link>\n                        ) : (\n                            <Skeleton animation=\"wave\" height={10} width=\"30%\" style={{ marginBottom: 6 }} />\n                        )\n                    }\n                />\n            </div>\n            <form method=\"POST\">\n                <div className={classes.holder}>\n                    <aside className={classes.label}>\n                        <label htmlFor=\"pepOld\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Old Password</label>\n                    </aside>\n                    <div className={classes.input}>\n                        <input\n                            className={classes.inputField}\n                            aria-required=\"false\" id=\"pepOld\"  type=\"password\"\n                        />\n\n                    </div>\n                </div>\n\n                <div className={classes.holder}>\n                    <aside className={classes.label}>\n                        <label htmlFor=\"pepNewPassword\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>New Password</label>\n                    </aside>\n                    <div className={classes.input}>\n                        <input\n                            className={classes.inputField}\n                            aria-required=\"false\" id=\"pepNewPassword\"  type=\"password\"\n                        />\n                    </div>\n                </div>\n\n                <div className={classes.holder}>\n                    <aside className={classes.label}>\n                        <label htmlFor=\"pepConfirm\" style={{fontWeight: \"bold\", fontSize: \"18px\"}}>Confirm</label>\n                    </aside>\n                    <div className={classes.input}>\n                        <input\n                            className={classes.inputField}\n                            aria-required=\"false\" id=\"pepConfirm\" type=\"password\"\n                        />\n\n                    </div>\n                </div>\n\n\n                <div className={classes.submit}>\n                    <Button variant=\"contained\" color=\"primary\">Change</Button>\n                </div>\n\n            </form>\n\n        </article>\n    )\n}\n\nexport default EditPassword","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/ProfileNavBar.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileFeed.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/features/chatSlice.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Sidebar/SidebarChat.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Sidebar/CreateNewChat.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/Message.js",["325"],"import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {auth} from \"../../firebase\";\nimport {useSelector} from \"react-redux\";\nimport {selectChatRecipient} from \"../../features/chatSlice\";\nimport TimeAgo from \"timeago-react\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    chat: {\n        color: \"#262626\",\n        overflowWrap: \"break-word\",\n        whiteSpace: \"pre-wrap\",\n        fontSize: \"14px\",\n    },\n    chatTime: {\n        marginLeft: 20,\n        fontSize: \"12px\",\n        color: \"#484848\",\n    }\n}));\n\nconst Message = ({uid, message, timestamp}) => {\n    const recipient = useSelector(selectChatRecipient);\n    const [userLogged] = useAuthState(auth);\n\n    const classes = useStyles();\n\n    return (\n        <div className=\"chat__content\">\n            {/* Retrieve */}\n            <div className={`chat__message ${userLogged.uid === uid && \"sender\"}`}>\n                {\n                    userLogged.uid !== uid && (\n                        <Avatar alt={recipient?.displayName} src={recipient?.photoURL} />\n                    )\n                }\n\n                <div className=\"chat__details\">\n                    <span className={classes.chat}>\n                        {message}\n                    </span>\n                    {\n                        timestamp? (\n                            <span className={classes.chatTime}>\n                                {timestamp?.toDate().toLocaleString()}\n                            </span>\n                        ) : (\n                            <span className={classes.chatTime}>Loading</span>\n                        )\n                    }\n\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Message","/home/miizoo/Desktop/ReactJS/livefood/src/components/Messenger/ChatInput.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/index.js",["326","327","328"],"import React, {useEffect, useState} from \"react\";\nimport Upload from \"../Upload\";\nimport Post from \"./Post\";\nimport { db, auth } from \"../../firebase\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {Compass as CompassIcon} from \"react-feather\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        color: \"#050505\"\n    },\n    wrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        maxHeight: \"300px\",\n        width: \"100%\"\n    },\n    none: {\n        width: \"100px\",\n        height: \"100px\",\n        borderColor: \"#262626\",\n        borderWidth: \"2px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderStyle: \"solid\",\n        borderRadius: \"50%\",\n        margin: \"50px 0 20px 0\"\n    }\n}));\n\nexport default function NewFeed(props){\n    const classes = useStyles();\n    const [posts, setPosts] = useState([]);\n\n    const userRef = props.userLogged && db.collection('users').doc(props.userLogged.uid);\n    const [userSnapshot] = useDocument(userRef);\n\n    let userFollow = userSnapshot?.data()?.following;\n    //Get post\n    useEffect( () => {\n        var userFollowingList;\n        if(typeof userFollow !== 'undefined' && userFollow.length > 0){\n\n            userFollowingList = userFollow;\n            userFollowingList.push(props.userLogged.uid);\n            return db.collection('posts')\n                .orderBy('timestamp', \"desc\")\n                .where('uid', 'in', userFollowingList)\n                .onSnapshot(snapshot => {\n                    setPosts(snapshot.docs.map(doc => ({\n                        id: doc.id,\n                        post: doc.data(),\n                    })));\n                })\n        }\n        else{\n            return db.collection('posts')\n                .orderBy('timestamp', \"desc\")\n                .where('uid', '==', props.userLogged.uid)\n                .onSnapshot(snapshot => {\n                    setPosts(snapshot.docs.map(doc => ({\n                        id: doc.id,\n                        post: doc.data(),\n                    })));\n                })\n        }\n\n    }, [userFollow?.length]);\n\n\n\n    return(\n        <div className=\"app__post\">\n            {\n                props.userLogged ? (\n                    <Upload userLogged={props.userLogged}/>\n                ) : null\n            }\n            {\n                posts.length > 0 ? (\n                    posts.map(({id, post}) => (\n                        <Post\n                            key={id}\n                            id={id}\n                            post={post}\n                            author={post.uid}\n                        />\n                    ))\n                ) : (\n                    <div className={classes.wrapper}>\n                        <div className={classes.none}>\n                            <CompassIcon\n                                className={classes.icon}\n                                size=\"40\"\n                            />\n                        </div>\n                        <h2 style={{paddingBottom: \"10px\"}}>Start Explore Yourself</h2>\n                        <p style={{paddingBottom: \"20px\"}}>Or just creating your own post.</p>\n\n                        <Link to=\"/explore\">\n                            <Button\n                                style={{textTransform: \"capitalize\", fontSize: \"16px\"}}\n                                color=\"primary\"\n                                variant=\"contained\"\n                            >\n                                Explore\n                            </Button>\n                        </Link>\n\n                    </div>\n                )\n\n            }\n        </div>\n    )\n}\n","/home/miizoo/Desktop/ReactJS/livefood/src/views/SinglePage.js",["329","330"],"import React, {useEffect, useState} from \"react\";\nimport Page from \"../components/Page\";\n// import {makeStyles} from \"@material-ui/core/styles\";\nimport RightSideBar from \"../components/SideBar/RightSideBar\";\nimport Post from \"../components/Posts/Post\";\nimport NavBar from \"../components/SideBar/LeftSideBar\";\nimport {db} from \"../firebase\";\nimport {useParams} from \"react-router\";\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport pic from \"../images/Background/undraw_page_not_found_su7k.svg\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    wrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        maxHeight: \"300px\",\n        width: \"100%\"\n    },\n    redirect: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        textAlign: \"center\",\n        paddingTop: \"20px\"\n    },\n    details: {\n        padding: \"20px 0\"\n    },\n    title: {\n        color: \"#ffffff\",\n    },\n    img: {\n        width: \"320px\",\n        display: \"inline-block\",\n        maxWidth: \"100%\",\n        marginTop: \"50px\"\n    },\n    imgHolder: {\n        textAlign: \"center\"\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\n\nconst SinglePage = (props) => {\n    const classes = useStyles();\n    let { id } = useParams();\n    window.scroll({top: 0, left: 0, behavior: 'smooth' })\n\n    const [postSnapshot, loading] = useDocument(db.collection(\"posts\").doc(id));\n\n\n    return (\n        <Page\n            title=\"LiveFood\"\n            className=\"app__bodyContainer\"\n        >\n            <NavBar userLogged={props.userLogged}/>\n            <div className=\"app__post\">\n                {\n                    loading ? (\n                        <Backdrop className={classes.backdrop} open={loading} >\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n                    ) : (\n                        postSnapshot?.data() ? (\n                            <Post\n                                key={postSnapshot.id}\n                                id={postSnapshot.id}\n                                post={postSnapshot.data()}\n                                author={postSnapshot.data().uid}\n                            />\n                        ) : (\n                            <>\n                                <div className={classes.wrapper}>\n                                    <div className={classes.imgHolder}>\n                                        <img src={pic} alt=\"404\" className={classes.img}/>\n                                    </div>\n                                    <div className={classes.details}>\n                                        <h1>This page doesn’t exist</h1>\n                                        <p>Please check your URL or return to LiveFood home.</p>\n                                    </div>\n                                </div>\n                            </>\n                        )\n                    )\n                }\n\n                {/*{*/}\n                {/*    post.post ? (*/}\n\n                {/*    ) : (*/}\n                {/*        <>*/}\n                {/*            <div className={classes.wrapper}>*/}\n                {/*                <div className={classes.imgHolder}>*/}\n                {/*                    <img src={pic} alt=\"404\" className={classes.img}/>*/}\n                {/*                </div>*/}\n                {/*                <div className={classes.details}>*/}\n                {/*                    <h1>This page doesn’t exist</h1>*/}\n                {/*                    <p>Please check your URL or return to LiveFood home.</p>*/}\n                {/*                </div>*/}\n                {/*            </div>*/}\n                {/*        </>*/}\n                {/*    )*/}\n                {/*}*/}\n\n\n            </div>\n            <RightSideBar userLogged={props.userLogged}/>\n        </Page>\n    )\n}\n\nexport default SinglePage;","/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileVids.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Profile/Content/ProfileSaved.js",["331"],"import React, {useEffect, useState} from \"react\";\n// import {useAuthState} from \"react-firebase-hooks/auth\";\n// import {db} from \"../../../firebase\";\nimport {Bookmark as BookmarkIcon} from \"react-feather\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {db} from \"../../../firebase\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport firebase from \"firebase\";\nimport ExploreItem from \"../../Explore/ExploreItem\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        color: \"#050505\"\n    },\n    wrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        maxHeight: \"300px\",\n        width: \"100%\"\n    },\n    none: {\n        width: \"100px\",\n        height: \"100px\",\n        borderColor: \"#262626\",\n        borderWidth: \"2px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderStyle: \"solid\",\n        borderRadius: \"50%\",\n        margin: \"50px 0 20px 0\"\n    }\n\n}));\n\nconst ProfileSaved = ({uid}) => {\n    const classes = useStyles();\n    const [savedPost, setSavedPost] = useState([]);\n\n    const userRef = db.collection('users').doc(uid);\n    const [userSnapshot] = useDocument(userRef);\n\n    let userSavedList = userSnapshot?.data()?.postSave;\n\n    useEffect(() => {\n        window.scroll({top: 0, left: 0, behavior: 'smooth' });\n\n        if(typeof userSavedList !== 'undefined'){\n            if(userSavedList.length > 0){\n                db.collection('posts')\n                    .where(firebase.firestore.FieldPath.documentId(), 'in', userSavedList)\n                    .limit(12)\n                    .get().then(snapshot => {\n                        let temp = []\n                        snapshot.forEach(data => {\n                            var userProfile = {};\n                            data.data().user.get().then( author => {\n                                Object.assign(userProfile, author.data());\n                            })\n                            temp.push({id: data.id, post: data.data(), authorProfile: userProfile })\n                        })\n                        setSavedPost(temp);\n                    })\n            }\n        }\n    }, [userSavedList?.length]);\n\n    return(\n        <div className=\"explore__root\" style={{paddingTop: \"20px\"}}>\n            <div className=\"explore__container\">\n                {\n                    savedPost.length > 0 ? (\n                        savedPost.map(({id, post, authorProfile}) => (\n                            <ExploreItem key={id} id={id} post={post} postAuthor={authorProfile} />\n                        ))\n                    ) : (\n                        <div className={classes.wrapper}>\n                            <div className={classes.none}>\n                                <BookmarkIcon\n                                    className={classes.icon}\n                                    size=\"40\"\n                                />\n                            </div>\n                            <h2 style={{paddingBottom: \"10px\"}}>Start Saving</h2>\n                            <p>Save photos and videos to your collection.</p>\n                        </div>\n                    )\n                }\n\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileSaved","/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExplorePage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExplorePeoplePage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExplorePeopleItem.js",["332"],"import React, {useEffect, useState} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport {db} from \"../../firebase\";\nimport Button from \"@material-ui/core/Button\";\nimport { useDocument} from \"react-firebase-hooks/firestore\";\nimport {Link} from \"react-router-dom\";\nimport handleUserFollow from \"../../utils/handleUserFollow\";\nimport handleUserUnfollow from \"../../utils/handleUserUnfollow\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n        marginLeft: \"10px\",\n        borderRadius: \"max(0px, min(8px, calc((100vw - 4px - 100%) * 9999))) / 8px\",\n        padding: 0\n    },\n    inline: {\n        display: 'inline',\n    },\n    listItem: {\n        \"&:hover\": {\n            backgroundColor: \"rgba(38, 50, 56, 0.04)\",\n        },\n    },\n    button: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: \"150px\",\n        color: \"white\",\n        backgroundColor: \"#0095f6\",\n        \"&:hover\": {\n            backgroundColor: \"#0186db\",\n        },\n        marginRight: \"15px\",\n        textTransform: \"capitalize\"\n    },\n    buttonUnfollow: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: \"150px\",\n        color: \"#454444\",\n        marginRight: \"15px\",\n        textTransform: \"capitalize\"\n    }\n}));\n\n\nexport default function ExplorePeopleItem(props) {\n    const classes = useStyles();\n    const [users, setUsers] = useState([])\n\n    const userRef = props.userLogged && db.collection('users').doc(props.userLogged.uid);\n    const [userSnapshot] = useDocument(userRef);\n\n    let userFollowingList = userSnapshot?.data()?.following;\n    let userFollowerList = userSnapshot?.data()?.follower;\n\n    // List user\n    useEffect(() => {\n        var followingList;\n        if(typeof userSnapshot?.data()?.following !== 'undefined' && userSnapshot?.data()?.following.length > 0){\n            followingList = userSnapshot.data().following\n            followingList.push(props.userLogged.uid);\n            return db.collection(\"users\")\n                .where('uid' ,'not-in' , followingList )\n                .get().then(snapshot => {\n                    setUsers(snapshot.docs.map(doc => ({\n                        id: doc.id,\n                        user: doc.data(),\n                    })));\n            })\n        }\n        else{\n            return db.collection(\"users\")\n                .where('uid' ,'!=' , props.userLogged.uid )\n                .get().then(snapshot => {\n                    setUsers(snapshot.docs.map(doc => ({\n                        id: doc.id,\n                        user: doc.data(),\n                    })));\n                })\n        }\n    }, [userFollowingList?.length])\n\n\n    // check if user followed\n    const checkFollowed = (userFollowingList, uid) => {\n        let rs = false;\n        if(typeof userFollowingList !== 'undefined' ){\n            rs = userFollowingList.includes(uid);\n        }\n        return rs;\n    }\n\n\n    const checkOpponentFollowYou = (userFollowerList, uid) => {\n        let rs = false;\n        if(typeof userFollowerList !== 'undefined' ){\n            rs = userFollowerList.includes(uid);\n        }\n        return rs;\n    }\n\n    return (\n        <div className=\"explore__container\" >\n            <List className={classes.root}>\n                {\n                    users?.map(({id, user}) => (\n                        <ListItem key={id} alignItems=\"center\" className={classes.listItem}>\n                            <ListItemAvatar>\n                                <Avatar alt=\"\" src={user.photoURL} />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={\n                                    <Link to={`/profile/${user?.uid}`} className={classes.name}>{user?.displayName}</Link>\n                                    }\n                                secondary={\n                                    <Typography\n                                        component=\"span\"\n                                        variant=\"body2\"\n                                        className={classes.inline}\n                                        color=\"textPrimary\"\n                                    >\n                                        Full name\n                                        -   {checkOpponentFollowYou(userFollowerList, id) ? \"Follow you\" : \" Suggested for you\"}\n                                    </Typography>\n                                }\n                            />\n\n                            {\n                                checkFollowed(userFollowingList, id) ? (\n                                    <Button\n                                        variant=\"outlined\"\n                                        style={{textTransform: \"capitalize\"}}\n                                        className={classes.buttonUnfollow}\n                                        onClick={() => handleUserUnfollow(props.userLogged.uid, id)}\n                                    >\n                                        Unfollow\n                                    </Button>\n                                ) : (\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        style={{textTransform: \"capitalize\"}}\n                                        className={classes.button}\n                                        onClick={() => handleUserFollow(props.userLogged.uid, id)}\n                                    >\n                                        Follow\n                                    </Button>\n                                )\n                            }\n                        </ListItem>\n                    ))\n                }\n\n            </List>\n        </div>\n    );\n}","/home/miizoo/Desktop/ReactJS/livefood/src/views/explore/ExploreVideoPage.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Explore/ExploreVideoItem.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/utils/handleLikePost.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/utils/handleDislikePost.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/utils/handleSavePost.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/utils/handleUnsavedPost.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/utils/handleUserFollow.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/utils/handleUserUnfollow.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/PostAction.js",[],"/home/miizoo/Desktop/ReactJS/livefood/src/views/RecipePage.js",["333","334","335","336"],"import React, {useEffect, useState} from \"react\";\nimport Page from \"../components/Page\";\nimport {Link} from \"react-router-dom\";\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\nimport AccessTimeRoundedIcon from '@material-ui/icons/AccessTimeRounded';\nimport Divider from \"@material-ui/core/Divider\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport {db} from \"../firebase\";\nimport ExploreItem from \"../components/Explore/ExploreItem\";\nimport {Image as ImageIcon} from \"react-feather\";\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        width: \"40%\"\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst RecipePage = (props) => {\n    const classes = useStyles();\n\n    const [type, setType] = React.useState('recommend');\n    const [newest, setNewest] = useState([]);\n    const [listRecipe, setListRecipe] = useState([]);\n\n\n\n\n    const handleChange = (event) => {\n        setType(event.target.value);\n    };\n\n\n    useEffect( () => {\n        window.scroll({top: 0, left: 0, behavior: 'smooth' });\n\n        // Set newest\n        db.collection('posts')\n            .where('type', '==', 'recipe')\n            .orderBy('timestamp', \"desc\")\n            .limit(2)\n            .get().then(async snapshot => {\n                const track = await Promise.all(\n                    snapshot.docs.map(async doc => ({\n                        id: doc.id,\n                        post: doc.data(),\n                        postAuthor: await Promise.resolve(doc.data().user.get().then( author => {\n                            return author.data();\n                        }))\n                    })));\n                setNewest(track);\n        })\n\n        // Set all post\n\n        if(type === 'recommend'){\n            db.collection('posts')\n                .where('type', '==', 'recipe')\n                .orderBy('timestamp', \"desc\")\n                .limit(12)\n                .get().then(snapshot => {\n                    setListRecipe(snapshot.docs.map(doc => ({\n                        id: doc.id,\n                        post: doc.data(),\n                    })));\n            })\n        }\n        else{\n            db.collection('posts')\n                .where('type', '==', 'recipe')\n                .orderBy('timestamp', \"desc\")\n                .limit(12)\n                .get().then(snapshot => {\n                setListRecipe(snapshot.docs.map(doc => ({\n                    id: doc.id,\n                    post: doc.data(),\n                })));\n            })\n        }\n\n\n    },[type]);\n\n\n    return (\n        <Page\n            title=\"Explore | LiveFood\"\n            className=\"app__bodyContainer\"\n        >\n            <div className=\"recipe__page\">\n                <div className=\"recipe__heading\">\n                    <h1>Recipes</h1>\n                    <div className=\"feature-content\">\n                        {\n                            newest.length > 0 ? (\n                                (newest.map( ({id, post, postAuthor}) => (\n                                    <div key={id} className=\"recipe-double\">\n                                        <div className=\"recipe-inner\">\n                                            <div className=\"recipe-inner-wrap\">\n                                                <Link to=\"\" className='text-link'>\n                                                    <img\n                                                        src={post?.mediaUrl} alt=\"\"/>\n                                                </Link>\n                                            </div>\n                                            <div className=\"tile-content\">\n                                                <div className=\"details\">\n                                                    <h2 className=\"title\" title={post?.caption}>\n                                                        <Link to={`/p/${id}`}>{post?.caption}</Link>\n                                                    </h2>\n                                                    <div className=\"recipe-data\">\n                                                        <div className=\"author\"><span className=\"name\">By <Link to={`/profile/${post?.uid}`}>{postAuthor?.displayName}</Link></span></div>\n                                                        <div className=\"meta-data\">\n                                                            <div className=\"fd-rating\">\n                                                                <span><FavoriteRoundedIcon style={{color: \"red\", marginRight: 5}}/>{post?.likeBy?.length}</span></div>\n                                                            <div className=\"cook-time\">\n                                                                <span style={{marginLeft: 5}}><AccessTimeRoundedIcon style={{color: \"black\", marginRight: 5}}/> 40 m</span>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))\n                            )) : null\n                        }\n\n\n                    </div>\n                </div>\n                <Divider />\n                <div className=\"recipe__content\">\n                    <FormControl className={classes.formControl}>\n                        <Select\n                            style={{fontWeight: \"bold\", textTransform: \"uppercase\"}}\n                            fullWidth\n                            value={type}\n                            onChange={handleChange}\n                        >\n                            <MenuItem value={'recommend'} style={{fontWeight: \"bold\", textTransform: \"uppercase\"}}>Recommend</MenuItem>\n                            <MenuItem value={'trending'} style={{fontWeight: \"bold\", textTransform: \"uppercase\"}}>Trending</MenuItem>\n                            <MenuItem value={'popular'} style={{fontWeight: \"bold\", textTransform: \"uppercase\"}}>Popular</MenuItem>\n                            <MenuItem value={'quickandeasy'} style={{fontWeight: \"bold\", textTransform: \"uppercase\"}}>Quick & Easy</MenuItem>\n                        </Select>\n                    </FormControl>\n\n                    <div className=\"list-recipe\">\n                        <div className=\"list-recipe-grid\">\n                            {\n                                listRecipe.length > 0 ? (\n                                    listRecipe.map(({id, post}) => (\n                                        <div key={id} className=\"list-recipe-item\">\n                                            <div className=\"list-recipe-wrap\">\n                                                <div className=\"inner-wrap\">\n                                                    <Link to=\"\" className='text-link'>\n                                                        <img\n                                                            src={post?.mediaUrl} alt=\"\"/>\n                                                    </Link>\n                                                </div>\n                                                <div className=\"tile-content\">\n                                                    <div className=\"details\">\n                                                        <h2 className=\"title\" title={post?.caption}>\n                                                            <Link to={`/p/${id}`}>{post?.caption}</Link>\n                                                        </h2>\n                                                        <div className=\"recipe-data\">\n                                                            <div className=\"meta-data\">\n                                                                <div className=\"fd-rating\">\n                                                                    <span><FavoriteRoundedIcon style={{color: \"red\", marginRight: 5}}/> {post?.likeBy?.length}</span></div>\n                                                                <div className=\"cook-time\">\n                                                                    <span><AccessTimeRoundedIcon style={{color: \"black\", marginRight: 5}}/> 40 m</span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))\n                                ) : null\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Page>\n    )\n}\n\nexport default RecipePage;","/home/miizoo/Desktop/ReactJS/livefood/src/components/Posts/Post.js",["337","338","339","340"],"import React, {useEffect, useState} from \"react\";\nimport './Post.css';\nimport {Link} from \"react-router-dom\";\nimport ListComment from \"../Comments\";\nimport handleDislikePost from \"../../utils/handleDislikePost\";\nimport handleSavePost from \"../../utils/handleSavePost\";\nimport handleUnsavedPost from \"../../utils/handleUnsavedPost\";\n\n\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport ModeCommentOutlinedIcon from '@material-ui/icons/ModeCommentOutlined';\nimport FavoriteBorderTwoToneIcon from '@material-ui/icons/FavoriteBorderTwoTone';\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\nimport BookmarkBorderOutlinedIcon from '@material-ui/icons/BookmarkBorderOutlined';\nimport BookmarkRoundedIcon from '@material-ui/icons/BookmarkRounded';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {Button, CardContent, Collapse,TextField} from \"@material-ui/core\";\nimport {db, auth} from \"../../firebase\";\nimport firebase from \"firebase\";\nimport clsx from \"clsx\";\n\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport Typography from \"@material-ui/core/Typography\";\n// import Upload from \"../Upload\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport {ToggleButton} from \"@material-ui/lab\";\nimport Divider from \"@material-ui/core/Divider\";\nimport handleLikePost from \"../../utils/handleLikePost\";\nimport PostAction from \"./PostAction\";\nimport Popup from \"../Upload/Popup\";\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tmaxWidth: \"100%\",\n\t\tborderRadius: \"max(0px, min(8px, calc((100vw - 4px - 100%) * 9999))) / 8px\",\n\t\tboxShadow: \"0px 0px 5px 0px #ddc4c4bf\"\n\t},\n\tmedia: {\n\t\theight: 400\n\t},\n\texpand: {\n\t\ttransform: 'rotate(0deg)',\n\t\tmarginLeft: 'auto',\n\t\ttransition: theme.transitions.create('transform', {\n\t\t\tduration: theme.transitions.duration.shortest,\n\t\t}),\n\t},\n\texpandOpen: {\n\t\ttransform: 'rotate(180deg)',\n\t},\n\tdisplayLike: {\n\t\tpadding: \"0 0 20px 20px\",\n\t\tborderBottom: \"1px solid rgba(var(--b6a,219,219,219),1)\"\n\t},\n\taction: {\n\t\tborderTop: \"1px solid rgba(var(--b6a,219,219,219),1)\",\n\t\tjustifyContent: \"space-between\"\n\t},\n\tparagraph: {\n\t\tlineHeight: \"26px\",\n\t\ttextAlign: \"justify\",\n\t\twhiteSpace: \"pre-line\",\n\t\tfontSize: \"14px\"\n\t},\n\tparagraphHead: {\n\t\tfontWeight: \"600\",\n\t\tfontSize: \"1rem\",\n\t\tmarginBottom: \"10px\",\n\t\tpadding: \"5px 0\",\n\t\ttextTransform: \"uppercase\",\n\t\tborderBottom : \"1px solid #000\"\n\t},\n\tcaptionText: {\n\t\twhiteSpace: \"pre-line\",\n\t\tlineHeight: \"26px\"\n\t},\n\tactionButton: {\n\t\tborder: \"0\",\n\t\tbackgroundColor: \"none\",\n\t\tborderRadius: \"50%\",\n\t\tcolor: \"rgba(0, 0, 0, 0.54)\",\n\t\t'&:hover': {\n\t\t\tcolor: 'black',\n\t\t}\n\t},\n\tdataContent: {\n\t\tdisplay: \"flex\"\n\t},\n\tselected: {\n\t\tbackgroundColor: \"unset !important\"\n\t},\n\tcomment:{\n\t\tdisplay: \"block\"\n\t}\n}));\n\n\n// id, user, caption, imageUrl, timestamp\n//\nfunction Post( {id, post, author, ...rest} ) {\n\n\tconst postRef = db.collection('posts').doc(id);\n\tconst classes = useStyles();\n\tconst [comments, setComments] = useState([]);\n\tconst [comment, setComment] = useState('');\n\tconst [expanded, setExpanded] = useState(false);\n\n\t// post author data\n\tconst [postAuthor] = useDocument(author && db.collection('users').doc(author))\n\tconst postAuthorSnapshot = postAuthor?.data();\n\n\t// auth user data\n\tconst [user] = useAuthState(auth);\n\tconst authUserRef = user.uid && db.collection(\"users\").doc(user.uid);\n\n\tconst [selected, setSelected] = useState(false);\n\tconst [saveSelected, setSaveSelected] = useState(false);\n\n\tlet likeCount = 0;\n\tlet media;\n\n\t// day ago\n\n\tdayjs.extend(relativeTime);\n\tlet postCreated  = null;\n\n\tif(post?.timestamp){\n\t\tpostCreated = new Date(post.timestamp.seconds * 1000).toLocaleString();\n\t}\n\n\tif(typeof post.likeBy !== 'undefined'){\n\t\tlikeCount = post.likeBy.length;\n\t}\n\n\t// Render media\n\tif(post?.mediaType === \"video/mp4\"){\n\t\tmedia = <div className=\"post__content\">\n\t\t\t<video controls className=\"post__contentImage\" muted=\"muted\" >\n\t\t\t\t<source src={post?.mediaUrl} type=\"video/mp4\"/>\n\t\t\t</video>\n\t\t</div>\n\t} else {\n\t\tmedia = <div className=\"post__content\">\n\t\t\t<img\n\t\t\t\talt=\"\"\n\t\t\t\tclassName=\"post__contentImage\"\n\t\t\t\tsrc={post?.mediaUrl}\n\t\t\t/>\n\t\t</div>\n\t}\n\n\tconst [open, setOpen] = React.useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\n\tconst handleExpandClick = () => {\n\t\tsetExpanded(!expanded);\n\t};\n\n\t// Handle like and dislike action\n\tconst likePost = () => {\n\t\tsetSelected(true);\n\t\thandleLikePost(postRef, user.uid)\n\t}\n\n\tconst dislikePost = () => {\n\t\tsetSelected(false);\n\t\thandleDislikePost(postRef, user.uid)\n\t}\n\n\tconst savePost = () => {\n\t\t// Save post id to user data, and push to post data\n\t\tsetSaveSelected(true);\n\t\thandleSavePost(postRef, authUserRef, user.uid, id);\n\t}\n\n\tconst unsavedPost = () => {\n\t\t// Save post id to user data, and push to post data\n\t\tsetSaveSelected(false);\n\t\thandleUnsavedPost(postRef, authUserRef, user.uid, id);\n\t}\n\n\n\tconst postComment = (event) => {\n\t\tevent.preventDefault();\n\t\tif(comment){\n\t\t\tdb.collection(\"posts\").doc(id).collection(\"comments\").add({\n\t\t\t\ttext: comment,\n\t\t\t\tuser: db.doc('users/' + user.uid),\n\t\t\t\tuid: user.uid,\n\t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp(),\n\t\t\t});\n\t\t}\n\t\tsetComment('');\n\t}\n\n\t// get comments\n\tuseEffect(() => {\n\t\tif(id && user) {\n\t\t\tif(typeof post.likeBy !== 'undefined' && post.likeBy.includes(user.uid)){\n\t\t\t\tsetSelected(true);\n\t\t\t}\n\n\t\t\tif(typeof post.saveBy !== 'undefined' && post.saveBy.includes(user.uid)){\n\t\t\t\tsetSaveSelected(true);\n\t\t\t}\n\n\t\t\tpostRef\n\t\t\t\t.collection(\"comments\")\n\t\t\t\t.orderBy('timestamp', \"desc\")\n\t\t\t\t.onSnapshot((snapshot ) => {\n\t\t\t\t\t// var userProfile = {};\n\t\t\t\t\tsetComments(\n\t\t\t\t\t\tsnapshot.docs.map((doc => ({\n\t\t\t\t\t\t\tid: doc.id,\n\t\t\t\t\t\t\tcomment: doc.data(),\n\t\t\t\t\t\t\tcmtAuthor: doc.data().user.get().then( cmtAuthor => {\n\t\t\t\t\t\t\t\treturn cmtAuthor.data();\n\t\t\t\t\t\t\t\t// return Object.assign(userProfile, author.data());\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})))\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t}\n\t}, [id, user])\n\n\treturn (\n\t\t<div className=\"post\">\n\t\t\t<Card className={classes.root} >\n\t\t\t\t<CardHeader\n\t\t\t\t\tavatar={\n\t\t\t\t\t\tpostAuthorSnapshot?.uid ? (\n\t\t\t\t\t\t\t\t<Avatar alt={postAuthorSnapshot?.displayName} src={postAuthorSnapshot?.photoURL}/>\n\t\t\t\t\t\t\t):(\n\t\t\t\t\t\t\t\t<Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />\n\t\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\ttitle={\n\t\t\t\t\t\tpostAuthorSnapshot?.uid ? (\n\t\t\t\t\t\t\t<Link to={`profile/${postAuthorSnapshot.uid}`}><span style={{fontWeight: \"bold\"}}>{postAuthorSnapshot?.displayName}</span></Link>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Skeleton animation=\"wave\" height={10} width=\"30%\" style={{ marginBottom: 6 }} />\n\t\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\taction={\n\t\t\t\t\t\t<IconButton aria-label=\"settings\" onClick={handleClickOpen}>\n\t\t\t\t\t\t\t<MoreVertIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t}\n\t\t\t\t\tsubheader={\n\t\t\t\t\t\tpostAuthorSnapshot?.uid ? (\n\t\t\t\t\t\t\tdayjs(postCreated).fromNow()\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Skeleton animation=\"wave\" height={10} width=\"10%\" style={{ marginBottom: 6 }} />\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t/>\n\n\t\t\t\t{/*Media*/}\n\t\t\t\t{\n\t\t\t\t\tpost?.mediaUrl ? (\n\t\t\t\t\t\tmedia\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Skeleton animation=\"wave\" variant=\"rect\" className={classes.media} />\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\t{/* Caption */}\n\t\t\t\t{\n\t\t\t\t\tpost?.caption ? (\n\t\t\t\t\t\t\t<div className=\"post__caption\">\n\t\t\t\t\t\t\t\t<Link to={`profile/${postAuthorSnapshot?.uid}`} className=\"post__user\">{postAuthorSnapshot?.displayName}</Link>\n\t\t\t\t\t\t\t\t<span className={classes.captionText} >{post.caption}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"post__caption\">\n\t\t\t\t\t\t\t<Skeleton animation=\"wave\" height={10} width=\"80%\" style={{ marginBottom: 6 }} />\n\t\t\t\t\t\t\t<Skeleton animation=\"wave\" height={10} width=\"80%\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}\n\n\n\t\t\t\t{/* Button */}\n\t\t\t\t<CardActions disableSpacing className={classes.action}>\n\t\t\t\t\t{\n\t\t\t\t\t\tuser ? (\n\t\t\t\t\t\t\t<div className=\"post__button\">\n\t\t\t\t\t\t\t\t<div className=\"action__like\">\n\t\t\t\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\t\t\t\tvalue=\"check\"\n\t\t\t\t\t\t\t\t\t\tselected={selected}\n\t\t\t\t\t\t\t\t\t\t// className={classes.likeButton}\n\t\t\t\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\t\t\t\troot: classes.actionButton,\n\t\t\t\t\t\t\t\t\t\t\tselected: classes.selected,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tif(!selected) likePost();\n\t\t\t\t\t\t\t\t\t\t\telse dislikePost();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tselected ? <FavoriteRoundedIcon style={{color: \"red\"}}/> : <FavoriteBorderTwoToneIcon />\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</ToggleButton>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"action__comment\">\n\t\t\t\t\t\t\t\t\t<IconButton aria-label=\"comment\">\n\t\t\t\t\t\t\t\t\t\t<ModeCommentOutlinedIcon/>\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"action__share\">\n\t\t\t\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\t\t\t\tvalue=\"check\"\n\t\t\t\t\t\t\t\t\t\tselected={saveSelected}\n\t\t\t\t\t\t\t\t\t\t// className={classes.likeButton}\n\t\t\t\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\t\t\t\troot: classes.actionButton,\n\t\t\t\t\t\t\t\t\t\t\tselected: classes.selected,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tif(!saveSelected) savePost();\n\t\t\t\t\t\t\t\t\t\t\telse unsavedPost();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tsaveSelected ? <BookmarkRoundedIcon style={{color: \"black\"}}/> : <BookmarkBorderOutlinedIcon />\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</ToggleButton>\n\t\t\t\t\t\t\t\t\t{/*<IconButton aria-label=\"share\">*/}\n\t\t\t\t\t\t\t\t\t{/*\t<BookmarkBorderOutlinedIcon />*/}\n\t\t\t\t\t\t\t\t\t{/*</IconButton>*/}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"action__share\">\n\t\t\t\t\t\t\t\t\t<IconButton aria-label=\"share\">\n\t\t\t\t\t\t\t\t\t\t<ShareIcon />\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : null\n\t\t\t\t\t}\n\n\t\t\t\t\t{\n\t\t\t\t\t\tpost?.data ? (\n\t\t\t\t\t\t\t<div className=\"action__expand\">\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tclassName={clsx(classes.expand, {\n\t\t\t\t\t\t\t\t\t\t[classes.expandOpen]: expanded,\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\tonClick={handleExpandClick}\n\t\t\t\t\t\t\t\t\taria-expanded={expanded}\n\t\t\t\t\t\t\t\t\taria-label=\"show more\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<ExpandMoreIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : null\n\t\t\t\t\t}\n\t\t\t\t</CardActions>\n\n\t\t\t\t{\n\t\t\t\t\tlikeCount > 0 ? (\n\t\t\t\t\t\t\t<div className={classes.displayLike}>\n\t\t\t\t\t\t\t\t<span><b>{likeCount} Likes</b></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t) : <Divider />\n\t\t\t\t}\n\n\t\t\t\t{/* Posts */}\n\t\t\t\t{\n\t\t\t\t\tpost?.data ? (\n\t\t\t\t\t\t\t<Collapse in={expanded} timeout=\"auto\" unmountOnExit >\n\t\t\t\t\t\t\t\t<div className=\"recipe_layout\">\n\t\t\t\t\t\t\t\t\t<CardContent className=\"recipe_layout__content-left\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"recipe_layout__facts\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"recipe-facts__info\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"recipe-facts__details recipe-facts__prepare\"><span\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"recipe-facts__title\">Prepare in:</span> <span>{post?.data?.prepTime} {post?.data?.prepUnit}</span></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"recipe-facts__details recipe-facts__cooking\"><span\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"recipe-facts__title\">Cook in:</span> <a\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"theme-color\">{post?.data?.cookTime} {post?.data?.cookUnit}</a></div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"recipe-facts__info\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"recipe-facts__details recipe-facts__servings\"><span\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"recipe-facts__title\">Serves:</span> <a\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"theme-color\">{post?.data?.serve}</a></div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<Typography paragraph className={classes.paragraphHead}>Ingredients:</Typography>\n\t\t\t\t\t\t\t\t\t\t<Typography paragraph className={classes.paragraph}>{post?.data?.ingredient}</Typography>\n\t\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t\t\t<CardContent className=\"recipe_layout__content-right\">\n\t\t\t\t\t\t\t\t\t\t<Typography paragraph className={classes.paragraphHead}>Direction:</Typography>\n\t\t\t\t\t\t\t\t\t\t<Typography paragraph className={classes.paragraph}>{post?.data?.direction}</Typography>\n\t\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t</Collapse>\n\t\t\t\t\t) : null\n\t\t\t\t}\n\n\t\t\t\t{/* Comments */}\n\n\t\t\t\t<div className={classes.comment}>\n\t\t\t\t\t<ListComment comments={comments} />\n\t\t\t\t\t{\n\t\t\t\t\t\tuser &&  (\n\t\t\t\t\t\t\t<div className=\"commentContainer\">\n\t\t\t\t\t\t\t\t<Avatar alt={user?.displayName} src={user?.photoURL} />\n\n\t\t\t\t\t\t\t\t<form onSubmit={postComment}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tclassName=\"comment__input\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Leave a comment ... \"\n\t\t\t\t\t\t\t\t\t\tvalue={comment}\n\t\t\t\t\t\t\t\t\t\tonChange={event => setComment(event.target.value)}\n\t\t\t\t\t\t\t\t\t\tInputProps={{ disableUnderline: true}}\n\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Button variant=\"contained\" disabled={!comment} onClick={postComment}>\n\t\t\t\t\t\t\t\t\t\tPost\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</Card>\n\n\t\t\t<PostAction open={open} handleClose={handleClose} uid={user.uid} opponentID={post.uid} postID={id} isSave={saveSelected}/>\n\n\t\t</div>\n\t)\n}\n\nexport default Post",{"ruleId":"341","replacedBy":"342"},{"ruleId":"343","replacedBy":"344"},{"ruleId":"345","severity":1,"message":"346","line":2,"column":27,"nodeType":"347","messageId":"348","endLine":2,"endColumn":35},{"ruleId":"345","severity":1,"message":"349","line":10,"column":8,"nodeType":"347","messageId":"348","endLine":10,"endColumn":15},{"ruleId":"345","severity":1,"message":"350","line":15,"column":8,"nodeType":"347","messageId":"348","endLine":15,"endColumn":20},{"ruleId":"345","severity":1,"message":"351","line":4,"column":45,"nodeType":"347","messageId":"348","endLine":4,"endColumn":51},{"ruleId":"352","severity":1,"message":"353","line":294,"column":8,"nodeType":"354","endLine":294,"endColumn":18,"suggestions":"355"},{"ruleId":"356","severity":1,"message":"357","line":430,"column":105,"nodeType":"358","endLine":431,"endColumn":81},{"ruleId":"356","severity":1,"message":"357","line":435,"column":104,"nodeType":"358","endLine":436,"endColumn":81},{"ruleId":"345","severity":1,"message":"359","line":1,"column":16,"nodeType":"347","messageId":"348","endLine":1,"endColumn":25},{"ruleId":"345","severity":1,"message":"360","line":14,"column":9,"nodeType":"347","messageId":"348","endLine":14,"endColumn":21},{"ruleId":"345","severity":1,"message":"361","line":15,"column":9,"nodeType":"347","messageId":"348","endLine":15,"endColumn":13},{"ruleId":"345","severity":1,"message":"362","line":3,"column":9,"nodeType":"347","messageId":"348","endLine":3,"endColumn":12},{"ruleId":"345","severity":1,"message":"359","line":1,"column":16,"nodeType":"347","messageId":"348","endLine":1,"endColumn":25},{"ruleId":"345","severity":1,"message":"363","line":5,"column":8,"nodeType":"347","messageId":"348","endLine":5,"endColumn":28},{"ruleId":"345","severity":1,"message":"364","line":6,"column":8,"nodeType":"347","messageId":"348","endLine":6,"endColumn":18},{"ruleId":"345","severity":1,"message":"365","line":7,"column":8,"nodeType":"347","messageId":"348","endLine":7,"endColumn":29},{"ruleId":"345","severity":1,"message":"366","line":11,"column":25,"nodeType":"347","messageId":"348","endLine":11,"endColumn":35},{"ruleId":"345","severity":1,"message":"360","line":12,"column":9,"nodeType":"347","messageId":"348","endLine":12,"endColumn":21},{"ruleId":"345","severity":1,"message":"361","line":13,"column":9,"nodeType":"347","messageId":"348","endLine":13,"endColumn":13},{"ruleId":"352","severity":1,"message":"367","line":66,"column":8,"nodeType":"354","endLine":66,"endColumn":22,"suggestions":"368"},{"ruleId":"345","severity":1,"message":"369","line":11,"column":15,"nodeType":"347","messageId":"348","endLine":11,"endColumn":17},{"ruleId":"345","severity":1,"message":"370","line":13,"column":8,"nodeType":"347","messageId":"348","endLine":13,"endColumn":16},{"ruleId":"345","severity":1,"message":"371","line":2,"column":8,"nodeType":"347","messageId":"348","endLine":2,"endColumn":15},{"ruleId":"345","severity":1,"message":"372","line":6,"column":18,"nodeType":"347","messageId":"348","endLine":6,"endColumn":27},{"ruleId":"345","severity":1,"message":"360","line":2,"column":9,"nodeType":"347","messageId":"348","endLine":2,"endColumn":21},{"ruleId":"345","severity":1,"message":"361","line":3,"column":9,"nodeType":"347","messageId":"348","endLine":3,"endColumn":13},{"ruleId":"345","severity":1,"message":"373","line":19,"column":8,"nodeType":"347","messageId":"348","endLine":19,"endColumn":18},{"ruleId":"345","severity":1,"message":"374","line":172,"column":12,"nodeType":"347","messageId":"348","endLine":172,"endColumn":19},{"ruleId":"345","severity":1,"message":"375","line":172,"column":21,"nodeType":"347","messageId":"348","endLine":172,"endColumn":31},{"ruleId":"345","severity":1,"message":"376","line":1,"column":16,"nodeType":"347","messageId":"348","endLine":1,"endColumn":22},{"ruleId":"345","severity":1,"message":"346","line":1,"column":24,"nodeType":"347","messageId":"348","endLine":1,"endColumn":32},{"ruleId":"345","severity":1,"message":"364","line":7,"column":9,"nodeType":"347","messageId":"348","endLine":7,"endColumn":19},{"ruleId":"345","severity":1,"message":"377","line":7,"column":21,"nodeType":"347","messageId":"348","endLine":7,"endColumn":26},{"ruleId":"345","severity":1,"message":"378","line":8,"column":8,"nodeType":"347","messageId":"348","endLine":8,"endColumn":25},{"ruleId":"345","severity":1,"message":"379","line":9,"column":8,"nodeType":"347","messageId":"348","endLine":9,"endColumn":15},{"ruleId":"345","severity":1,"message":"380","line":8,"column":8,"nodeType":"347","messageId":"348","endLine":8,"endColumn":15},{"ruleId":"345","severity":1,"message":"361","line":4,"column":14,"nodeType":"347","messageId":"348","endLine":4,"endColumn":18},{"ruleId":"345","severity":1,"message":"360","line":5,"column":9,"nodeType":"347","messageId":"348","endLine":5,"endColumn":21},{"ruleId":"352","severity":1,"message":"381","line":76,"column":8,"nodeType":"354","endLine":76,"endColumn":28,"suggestions":"382"},{"ruleId":"345","severity":1,"message":"359","line":1,"column":16,"nodeType":"347","messageId":"348","endLine":1,"endColumn":25},{"ruleId":"345","severity":1,"message":"346","line":1,"column":27,"nodeType":"347","messageId":"348","endLine":1,"endColumn":35},{"ruleId":"352","severity":1,"message":"383","line":69,"column":8,"nodeType":"354","endLine":69,"endColumn":31,"suggestions":"384"},{"ruleId":"352","severity":1,"message":"385","line":98,"column":8,"nodeType":"354","endLine":98,"endColumn":35,"suggestions":"386"},{"ruleId":"345","severity":1,"message":"373","line":8,"column":8,"nodeType":"347","messageId":"348","endLine":8,"endColumn":18},{"ruleId":"345","severity":1,"message":"387","line":10,"column":8,"nodeType":"347","messageId":"348","endLine":10,"endColumn":22},{"ruleId":"345","severity":1,"message":"388","line":14,"column":8,"nodeType":"347","messageId":"348","endLine":14,"endColumn":19},{"ruleId":"345","severity":1,"message":"389","line":15,"column":18,"nodeType":"347","messageId":"348","endLine":15,"endColumn":27},{"ruleId":"345","severity":1,"message":"390","line":41,"column":8,"nodeType":"347","messageId":"348","endLine":41,"endColumn":13},{"ruleId":"352","severity":1,"message":"391","line":246,"column":5,"nodeType":"354","endLine":246,"endColumn":15,"suggestions":"392"},{"ruleId":"356","severity":1,"message":"357","line":402,"column":62,"nodeType":"358","endLine":403,"endColumn":38},{"ruleId":"356","severity":1,"message":"357","line":407,"column":61,"nodeType":"358","endLine":408,"endColumn":38},"no-native-reassign",["393"],"no-negated-in-lhs",["394"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Explore' is defined but never used.","'ExploreVideo' is defined but never used.","'Popper' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'postRef', 'props.post.likeBy', 'props.post.saveBy', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["395"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'useAuthState' is defined but never used.","'auth' is defined but never used.","'red' is defined but never used.","'SettingsOutlinedIcon' is defined but never used.","'IconButton' is defined but never used.","'MoreHorizOutlinedIcon' is defined but never used.","'makeStyles' is defined but never used.","React Hook useEffect has a missing dependency: 'props.userLogged.uid'. Either include it or remove the dependency array.",["396"],"'db' is defined but never used.","'firebase' is defined but never used.","'NavItem' is defined but never used.","'UsersIcon' is defined but never used.","'InputLabel' is defined but never used.","'disable' is assigned a value but never used.","'setDisable' is assigned a value but never used.","'useRef' is defined but never used.","'Modal' is defined but never used.","'CancelTwoToneIcon' is defined but never used.","'Divider' is defined but never used.","'TimeAgo' is defined but never used.","React Hook useEffect has missing dependencies: 'props.userLogged.uid' and 'userFollow'. Either include them or remove the dependency array.",["397"],"React Hook useEffect has a missing dependency: 'userSavedList'. Either include it or remove the dependency array.",["398"],"React Hook useEffect has missing dependencies: 'props.userLogged.uid' and 'userSnapshot'. Either include them or remove the dependency array.",["399"],"'FormHelperText' is defined but never used.","'ExploreItem' is defined but never used.","'ImageIcon' is defined but never used.","'Popup' is defined but never used.","React Hook useEffect has missing dependencies: 'post.likeBy', 'post.saveBy', and 'postRef'. Either include them or remove the dependency array.",["400"],"no-global-assign","no-unsafe-negation",{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},"Update the dependencies array to be: [postRef, props.id, props.post.likeBy, props.post.saveBy, user]",{"range":"413","text":"414"},"Update the dependencies array to be: [props.userLogged.uid, userSnapshot]",{"range":"415","text":"416"},"Update the dependencies array to be: [props.userLogged.uid, userFollow, userFollow.length]",{"range":"417","text":"418"},"Update the dependencies array to be: [userSavedList, userSavedList.length]",{"range":"419","text":"420"},"Update the dependencies array to be: [props.userLogged.uid, userFollowingList.length, userSnapshot]",{"range":"421","text":"422"},"Update the dependencies array to be: [id, post.likeBy, post.saveBy, postRef, user]",{"range":"423","text":"424"},[8365,8375],"[postRef, props.id, props.post.likeBy, props.post.saveBy, user]",[2320,2334],"[props.userLogged.uid, userSnapshot]",[2388,2408],"[props.userLogged.uid, userFollow, userFollow.length]",[2245,2268],"[userSavedList, userSavedList.length]",[3287,3314],"[props.userLogged.uid, userFollowingList.length, userSnapshot]",[6398,6408],"[id, post.likeBy, post.saveBy, postRef, user]"]